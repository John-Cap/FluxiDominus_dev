Problem:

The debug

from Core.Fluids.FlowPath import FlowOrigin, FlowTerminus, visualize_flow_path

dumpNo=1
def dump_inlet_outlet_sets(path):
  global dumpNo
  for seg in path.segments:
      if seg.inletSets:
          print(f"\n[INFO #{dumpNo}] {seg.name}: Inlet Sets")
          for name, comps in seg.inletSets.items():
              print(f"  Set '{name}': {[x.name for x in comps]}")
          print(f"  Currently selected: {seg.currInletSet}")

      if seg.outletSets:
          print(f"[INFO #{dumpNo}] {seg.name}: Outlet Sets")
          for name, comps in seg.outletSets.items():
              print(f"  Set '{name}': {[x.name for x in comps]}")
          print(f"  Currently selected: {seg.currOutletSet}")
  dumpNo+=1

in example

if __name__ == "__main__":
    from OPTIMIZATION_TEMP.Plutter_TEMP.plutter import MqttService
    
    updater = MqttService(broker_address="172.30.243.138")
    updater.connectDb=False
    updater.arm()
    updater.start()
    
    print("Waiting for connection")
    
    while not updater.connected:
      time.sleep(0.5)
    
    updater.publish("ui/FlowSketcher",json.dumps(example))
    
    print("Waiting for termini mapping")
    
    while not updater.flowSystem.flowpath.terminiMapped:
      time.sleep(1)
      
    path = updater.flowSystem.flowpath

    allSlugs = updater.flowSystem.allSlugs

    #Find component references from names
    origins = [comp for comp in path.segments if isinstance(comp,FlowOrigin)]
    
    print(f'Origins: {origins}')
    
    adrses = [name for name in path.addressesAll.keys()]
    print(f"Available addresses: \n {path.addressesAll}")

    #Some example things:
    #flowRates=[0,1,2,3,4]
    flowRates=[0.5,1,2]
    dispVol=[1]

    # path.currRelOrigin.setFlowrate(3/60)
    for orig in origins:
      orig.setFlowrate(2/60)
        
    dump_inlet_outlet_sets(path)
    
    path.updateFlowrates()

    path.setCurrDestination(random.choice(adrses))
    
    visualize_flow_path(path)
    
    slug=path.currRelOrigin.dispense(1)
    
    #Flag variable to indicate whether the thread should continue running?
    running=True
    time.sleep(1)
    
    firstSet=True
    
    def run_code():
      global running
      global allSlugs
      global slug
      global path
      global firstSet
      _i=0
      while running:

        if not firstSet:
          # path.currRelOrigin.setFlowrate(3/60)
          for orig in origins:
            orig.setFlowrate(2/60)
              
          dump_inlet_outlet_sets(path)
          
          path.updateFlowrates()

          path.setCurrDestination(random.choice(adrses))
          slug=path.currRelOrigin.dispense(1)
          allSlugs.slugs.append(slug)
              
          dump_inlet_outlet_sets(path)
        else:
          firstSet=False
          
        _now=time.perf_counter()
        _nowRefresh=_now
        _jiggleFlowrate=time.perf_counter() + 5
        #path.timePrev=time.perf_counter()
        while not (isinstance(slug.tailHost,FlowTerminus)):
            path.advanceSlugs()
            if time.time() - _nowRefresh > 1:
                _vol=slug.slugVolume()
                _nowRefresh=time.time()
                rep=f"""--------------------------------------------------\nTime: {round(time.perf_counter() - _now, 0)} sec,\nAll fr: {[orig.flowrateOut*60 for orig in origins]}\nFront in: {slug.frontHost.name},\n {round(slug.frontHost.flowrateOut*60, 2)} mL.min-1,\n {round(slug.frontHostPos, 2)}/{slug.frontHost.volume} mL\nTail in: {slug.tailHost.name},\n {round(slug.tailHost.flowrateOut*60, 2)} mL.min-1,\n {round(slug.tailHostPos, 2)}/{slug.tailHost.volume} mL\nslug vol: {round(_vol, 2)} mL, vol collected: {(round(slug.collectedVol, 2))} mL"""
                print(rep)
            time.sleep(0.1)
        print("***************************************")
        print("Collected slug volumes")
        for _x in path.collectedSlugs:
            print(f'Slug {_x} dispensed as {_x.totalDispensed} mL from origin and collected as {_x.collectedVol} mL')
            print(f'Slug was collected at terminus "{_x.frontHost.name}"')
        print("***************************************")
        _i+=1
        if _i > 10:
            exit()
        time.sleep(10)

    # Create a thread for running the code
    thread=threading.Thread(target=run_code)
    thread.start()

    # Wait for the thread to finish
    thread.join()
    print("We're done here")

    #######################################################################################

With additional debug 
"
                    if chosenSetName is not None:
                        # Also record inlet set name from nextComp
                        # This assumes the inletSet that contains currComp is unique
                        inletSetName = None
                        for iSetName, iSetComps in nextComp.inletSets.items():
                            print(f"Inletset names, components for {currComp}: {[iSetName,iSetComps]}")
                            if currComp in iSetComps:
                                inletSetName = iSetName
                                break
"
shows:

Inletset names, components for <Core.Fluids.FlowPath.Valve object at 0x000001C651791760>: ['DEFAULT', [<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>]]
Inletset names, components for <Core.Fluids.FlowPath.Valve object at 0x000001C651791760>: ['DEFAULT', [<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>]]

Available addresses: 
 {'Product': [[<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>, 'WasteOrCollect_22_to_TUBE_12_23', <Core.Fluids.FlowPath.Tubing object at 0x000001C651791790>, 'DEFAULT']], 'Waste': [[<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>, 'WasteOrCollect_22_to_TUBE_13_24', <Core.Fluids.FlowPath.Tubing object at 0x000001C651791820>, 'DEFAULT']]}

[INFO #1] R4 Pump A: Inlet Sets
  Set 'DEFAULT': ['TUBE_2']
  Currently selected: None
[INFO #1] R4 Pump A: Outlet Sets
  Set 'R4 Pump A_0_to_TUBE_1_1': ['TUBE_1']
  Currently selected: R4 Pump A_0_to_TUBE_1_1

[INFO #1] TUBE_1: Inlet Sets
  Set 'DEFAULT': ['R4 Pump A']
  Currently selected: None
[INFO #1] TUBE_1: Outlet Sets
  Set 'TUBE_1_1_to_StaticMixer_16': ['StaticMixer']
  Currently selected: TUBE_1_1_to_StaticMixer_16

[INFO #1] SR_A: Inlet Sets
  Set 'DEFAULT_0': ['TUBE_3'] **Correctly assigns incoming tubes to unique inlet sets
  Set 'DEFAULT_1': ['TUBE_4']
  Currently selected: None
[INFO #1] SR_A: Outlet Sets
  Set 'SR_A_2_to_TUBE_2_3': ['TUBE_2']
  Currently selected: SR_A_2_to_TUBE_2_3

[INFO #1] TUBE_2: Inlet Sets
  Set 'DEFAULT': ['SR_A']
  Currently selected: None
[INFO #1] TUBE_2: Outlet Sets
  Set 'TUBE_2_3_to_R4 Pump A_0': ['R4 Pump A']
  Currently selected: TUBE_2_3_to_R4 Pump A_0
[INFO #1] AllylIsoval: Outlet Sets
  Set 'AllylIsoval_4_to_TUBE_3_5': ['TUBE_3']
  Currently selected: AllylIsoval_4_to_TUBE_3_5

[INFO #1] TUBE_3: Inlet Sets
  Set 'DEFAULT': ['AllylIsoval']
  Currently selected: None
[INFO #1] TUBE_3: Outlet Sets
  Set 'TUBE_3_5_to_SR_A_2': ['SR_A']
  Currently selected: TUBE_3_5_to_SR_A_2
[INFO #1] PushSolventA: Outlet Sets
  Set 'PushSolventA_6_to_TUBE_4_7': ['TUBE_4']
  Currently selected: PushSolventA_6_to_TUBE_4_7

[INFO #1] TUBE_4: Inlet Sets
  Set 'DEFAULT': ['PushSolventA']
  Currently selected: None
[INFO #1] TUBE_4: Outlet Sets
  Set 'TUBE_4_7_to_SR_A_2': ['SR_A']
  Currently selected: TUBE_4_7_to_SR_A_2

[INFO #1] SR_B: Inlet Sets
  Set 'DEFAULT_0': ['TUBE_7']
  Set 'DEFAULT_1': ['TUBE_8']
  Currently selected: None
[INFO #1] SR_B: Outlet Sets
  Set 'SR_B_8_to_TUBE_5_9': ['TUBE_5']
  Currently selected: SR_B_8_to_TUBE_5_9

[INFO #1] TUBE_5: Inlet Sets
  Set 'DEFAULT': ['SR_B']
  Currently selected: None
[INFO #1] TUBE_5: Outlet Sets
  Set 'TUBE_5_9_to_R4 Pump B_10': ['R4 Pump B']
  Currently selected: TUBE_5_9_to_R4 Pump B_10

[INFO #1] R4 Pump B: Inlet Sets
  Set 'DEFAULT': ['TUBE_5']
  Currently selected: None
[INFO #1] R4 Pump B: Outlet Sets
  Set 'R4 Pump B_10_to_TUBE_6_11': ['TUBE_6']
  Currently selected: R4 Pump B_10_to_TUBE_6_11

[INFO #1] TUBE_6: Inlet Sets
  Set 'DEFAULT': ['R4 Pump B']
  Currently selected: None
[INFO #1] TUBE_6: Outlet Sets
  Set 'TUBE_6_11_to_StaticMixer_16': ['StaticMixer']
  Currently selected: TUBE_6_11_to_StaticMixer_16
[INFO #1] KOH_sol: Outlet Sets
  Set 'KOH_sol_12_to_TUBE_7_13': ['TUBE_7']
  Currently selected: KOH_sol_12_to_TUBE_7_13

[INFO #1] TUBE_7: Inlet Sets
  Set 'DEFAULT': ['KOH_sol']
  Currently selected: None
[INFO #1] TUBE_7: Outlet Sets
  Set 'TUBE_7_13_to_SR_B_8': ['SR_B']
  Currently selected: TUBE_7_13_to_SR_B_8
[INFO #1] PushSolventB: Outlet Sets
  Set 'PushSolventB_14_to_TUBE_8_15': ['TUBE_8']
  Currently selected: PushSolventB_14_to_TUBE_8_15

[INFO #1] TUBE_8: Inlet Sets
  Set 'DEFAULT': ['PushSolventB']
  Currently selected: None
[INFO #1] TUBE_8: Outlet Sets
  Set 'TUBE_8_15_to_SR_B_8': ['SR_B']
  Currently selected: TUBE_8_15_to_SR_B_8

[INFO #1] StaticMixer: Inlet Sets
  Set 'DEFAULT': ['TUBE_1', 'TUBE_6']
  Currently selected: None
[INFO #1] StaticMixer: Outlet Sets
  Set 'StaticMixer_16_to_TUBE_9_17': ['TUBE_9']
  Currently selected: StaticMixer_16_to_TUBE_9_17

[INFO #1] TUBE_9: Inlet Sets
  Set 'DEFAULT': ['StaticMixer']
  Currently selected: None
[INFO #1] TUBE_9: Outlet Sets
  Set 'TUBE_9_17_to_Hotcoil_1_18': ['Hotcoil_1']
  Currently selected: TUBE_9_17_to_Hotcoil_1_18

[INFO #1] Hotcoil_1: Inlet Sets
  Set 'DEFAULT': ['TUBE_9']
  Currently selected: None
[INFO #1] Hotcoil_1: Outlet Sets
  Set 'Hotcoil_1_18_to_TUBE_10_19': ['TUBE_10']
  Currently selected: Hotcoil_1_18_to_TUBE_10_19

[INFO #1] TUBE_10: Inlet Sets
  Set 'DEFAULT': ['Hotcoil_1']
  Currently selected: None
[INFO #1] TUBE_10: Outlet Sets
  Set 'TUBE_10_19_to_ReactIR 702L1_20': ['ReactIR 702L1']
  Currently selected: TUBE_10_19_to_ReactIR 702L1_20

[INFO #1] ReactIR 702L1: Inlet Sets
  Set 'DEFAULT': ['TUBE_10']
  Currently selected: None
[INFO #1] ReactIR 702L1: Outlet Sets
  Set 'ReactIR 702L1_20_to_TUBE_11_21': ['TUBE_11']
  Currently selected: ReactIR 702L1_20_to_TUBE_11_21

[INFO #1] TUBE_11: Inlet Sets
  Set 'DEFAULT': ['ReactIR 702L1']
  Currently selected: None
[INFO #1] TUBE_11: Outlet Sets
  Set 'TUBE_11_21_to_WasteOrCollect_22': ['WasteOrCollect']
  Currently selected: TUBE_11_21_to_WasteOrCollect_22

[INFO #1] WasteOrCollect: Inlet Sets
  Set 'DEFAULT_0': ['TUBE_11']
  Currently selected: None
[INFO #1] WasteOrCollect: Outlet Sets
  Set 'WasteOrCollect_22_to_TUBE_12_23': ['TUBE_12']
  Set 'WasteOrCollect_22_to_TUBE_13_24': ['TUBE_13']
  Currently selected: WasteOrCollect_22_to_TUBE_13_24

[INFO #1] TUBE_12: Inlet Sets
  Set 'DEFAULT': ['WasteOrCollect']
  Currently selected: None
[INFO #1] TUBE_12: Outlet Sets
  Set 'TUBE_12_23_to_Product_25': ['Product']
  Currently selected: TUBE_12_23_to_Product_25

[INFO #1] TUBE_13: Inlet Sets
  Set 'DEFAULT': ['WasteOrCollect']
  Currently selected: None
[INFO #1] TUBE_13: Outlet Sets
  Set 'TUBE_13_24_to_Waste_26': ['Waste']
  Currently selected: TUBE_13_24_to_Waste_26

[INFO #1] Product: Inlet Sets
  Set 'DEFAULT': ['TUBE_12']
  Currently selected: None

[INFO #1] Waste: Inlet Sets
  Set 'DEFAULT': ['TUBE_13']
  Currently selected: None
This segment and inlets: ['R4 Pump A', [<Core.Fluids.FlowPath.Tubing object at 0x000001C6517911C0>]]
This segment and inlets: ['TUBE_1', [<Core.Fluids.FlowPath.Pump object at 0x000001C651791160>]]
This segment and inlets: ['SR_A', [<Core.Fluids.FlowPath.Tubing object at 0x000001C6517912B0>]]
This segment and inlets: ['TUBE_2', [<Core.Fluids.FlowPath.Valve object at 0x000001C651304980>]]
This segment and inlets: ['AllylIsoval', []]
This segment and inlets: ['TUBE_3', [<Core.Fluids.FlowPath.FlowOrigin object at 0x000001C650599130>]]
This segment and inlets: ['PushSolventA', []]
This segment and inlets: ['TUBE_4', [<Core.Fluids.FlowPath.FlowOrigin object at 0x000001C651249F70>]]
This segment and inlets: ['SR_B', [<Core.Fluids.FlowPath.Tubing object at 0x000001C651791550>]]
This segment and inlets: ['TUBE_5', [<Core.Fluids.FlowPath.Valve object at 0x000001C651791280>]]
This segment and inlets: ['R4 Pump B', [<Core.Fluids.FlowPath.Tubing object at 0x000001C651791370>]]
This segment and inlets: ['TUBE_6', [<Core.Fluids.FlowPath.Pump object at 0x000001C650C18EC0>]]
This segment and inlets: ['KOH_sol', []]
This segment and inlets: ['TUBE_7', [<Core.Fluids.FlowPath.FlowOrigin object at 0x000001C6511B93D0>]]
This segment and inlets: ['PushSolventB', []]
This segment and inlets: ['TUBE_8', [<Core.Fluids.FlowPath.FlowOrigin object at 0x000001C651791490>]]
This segment and inlets: ['StaticMixer', [<Core.Fluids.FlowPath.Tubing object at 0x000001C6517911F0>, <Core.Fluids.FlowPath.Tubing object at 0x000001C651791340>]]
This segment and inlets: ['TUBE_9', [<Core.Fluids.FlowPath.TPiece object at 0x000001C650BC9070>]]
This segment and inlets: ['Hotcoil_1', [<Core.Fluids.FlowPath.Tubing object at 0x000001C6517915E0>]]
This segment and inlets: ['TUBE_10', [<Core.Fluids.FlowPath.Coil object at 0x000001C651306FC0>]]
This segment and inlets: ['ReactIR 702L1', [<Core.Fluids.FlowPath.Tubing object at 0x000001C650612D80>]]
This segment and inlets: ['TUBE_11', [<Core.Fluids.FlowPath.IR object at 0x000001C651791640>]]
This segment and inlets: ['WasteOrCollect', [<Core.Fluids.FlowPath.Tubing object at 0x000001C6517916D0>]]
This segment and inlets: ['TUBE_12', [<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>]]
This segment and inlets: ['TUBE_13', [<Core.Fluids.FlowPath.Valve object at 0x000001C651791760>]]
This segment and inlets: ['Product', [<Core.Fluids.FlowPath.Tubing object at 0x000001C651791790>]]
This segment and inlets: ['Waste', [<Core.Fluids.FlowPath.Tubing object at 0x000001C651791820>]]