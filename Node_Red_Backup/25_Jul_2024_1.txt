[
    {
        "id": "e4a949dd53517857",
        "type": "tab",
        "label": "Test Setup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10298351f754cc63",
        "type": "tab",
        "label": "Automatic",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "300c6ec10595d0c1",
        "type": "tab",
        "label": "Manual Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a6e09bd3.85fe48",
        "type": "tab",
        "label": "Settings and Servers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cdb779666b3351ad",
        "type": "tab",
        "label": "Database",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a0e73bbc365dbb1",
        "type": "tab",
        "label": "Instructions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac1e0817c5dd43f9",
        "type": "tab",
        "label": "Installed Node Modules",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "98cb21df.da2ee",
        "type": "subflow",
        "name": "FlowUV 1",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2b034c7e.4bdce4",
        "type": "subflow",
        "name": "FlowUV 2",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e399fc8fc0b218b9",
        "type": "subflow",
        "name": "SF10 Vapourtec 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 580,
                "wires": [
                    {
                        "id": "4cb1aa08cc0a8fe1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2040,
                "y": 960,
                "wires": [
                    {
                        "id": "22a278819ede7490",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 2060,
            "y": 580,
            "wires": [
                {
                    "id": "b9288a56f5dfd3c1",
                    "port": 0
                },
                {
                    "id": "22a6a89a16a5caae",
                    "port": 0
                },
                {
                    "id": "22a278819ede7490",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3bf455a61dc4725c",
        "type": "subflow",
        "name": "SF10 Vapourtec 1 Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 1040,
                "wires": [
                    {
                        "id": "3bba40e0c853a0c8"
                    },
                    {
                        "id": "79109ecf0d95c969"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3920,
                "y": 980,
                "wires": [
                    {
                        "id": "8a048c2c79db9bcb",
                        "port": 0
                    },
                    {
                        "id": "4a9d3536862f4853",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 3920,
            "y": 1100,
            "wires": [
                {
                    "id": "3bba40e0c853a0c8",
                    "port": 4
                },
                {
                    "id": "3bba40e0c853a0c8",
                    "port": "5"
                },
                {
                    "id": "12bf8fdd5e66b96d",
                    "port": 0
                },
                {
                    "id": "aaaaa4774f1eebff",
                    "port": 0
                },
                {
                    "id": "63a90c4df69d3f51",
                    "port": 0
                },
                {
                    "id": "6affa3e4b555e954",
                    "port": 0
                },
                {
                    "id": "f76c5818dd3166c7",
                    "port": 0
                },
                {
                    "id": "f04379813ac186e2",
                    "port": 0
                },
                {
                    "id": "3ff97091e52e54b2",
                    "port": 0
                },
                {
                    "id": "8a048c2c79db9bcb",
                    "port": 1
                },
                {
                    "id": "7ed7660147cfd110",
                    "port": 0
                },
                {
                    "id": "0b96b3f79cfa1f23",
                    "port": 0
                },
                {
                    "id": "cb609a078cb166f0",
                    "port": 0
                },
                {
                    "id": "cf82995da8ad5857",
                    "port": 0
                },
                {
                    "id": "8645f2d681216512",
                    "port": 0
                },
                {
                    "id": "4a9d3536862f4853",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "ef63b0d123a76daa",
        "type": "subflow",
        "name": "FlowSynMaxi 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 1120,
                "wires": [
                    {
                        "id": "5149611d84dfb02c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1340,
                "y": 1280,
                "wires": [
                    {
                        "id": "4b9b31baaed0db78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bc1076baf3559e95",
        "type": "subflow",
        "name": "FlowSynMaxi Flow 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 580,
                "wires": [
                    {
                        "id": "a659a1dde18a78fd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 960,
                "y": 2780,
                "wires": [
                    {
                        "id": "dc37f87f9db28957",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 3400,
            "y": 860,
            "wires": [
                {
                    "id": "9f86ab9d06e188da",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fadba47737eca3c5",
        "type": "subflow",
        "name": "ReactIR 702L 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "1d1d6ccf0772de25"
                    },
                    {
                        "id": "514d9f8797599d93"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 200,
                "wires": [
                    {
                        "id": "3417a603ca42533b",
                        "port": 0
                    },
                    {
                        "id": "6098ac14dfb7e66f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fc608604922b7267",
        "type": "subflow",
        "name": "ReactIR 702L Flow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 200,
                "wires": [
                    {
                        "id": "eb3680040fb1bbbe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1780,
                "y": 340,
                "wires": [
                    {
                        "id": "abbc4709f6a7d7ab",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1780,
                "y": 420,
                "wires": [
                    {
                        "id": "21c59bea644bdf2c",
                        "port": 1
                    },
                    {
                        "id": "312c2782008f0729",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "17061720ba0331b7",
        "type": "subflow",
        "name": "HotChip2Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "135b8b59fd589dd6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1620,
                "y": 880,
                "wires": [
                    {
                        "id": "12964da3946ae83e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1620,
            "y": 560,
            "wires": [
                {
                    "id": "12964da3946ae83e",
                    "port": 1
                },
                {
                    "id": "fad63a8d2a608c79",
                    "port": 0
                },
                {
                    "id": "eb1555eb5bab060e",
                    "port": 0
                },
                {
                    "id": "810d184ebc13193a",
                    "port": 0
                },
                {
                    "id": "0ecb2499b1b9a3f2",
                    "port": 0
                },
                {
                    "id": "0f5f1de8686b591d",
                    "port": 0
                },
                {
                    "id": "4a58499a6d55a2f0",
                    "port": 0
                },
                {
                    "id": "a04733dcf3cbbee5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9dfeb25ce4f7592b",
        "type": "subflow",
        "name": "HotChip2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 300,
                "wires": [
                    {
                        "id": "2caa206c6360a8dc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "7eb1ea9d3b61c8f1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 300,
            "wires": [
                {
                    "id": "27cce9e4252346fe",
                    "port": 0
                },
                {
                    "id": "b91b2c1bbae07560",
                    "port": 0
                },
                {
                    "id": "7eb1ea9d3b61c8f1",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "39878a8b7ca6b377",
        "type": "subflow",
        "name": "HotChip1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 300,
                "wires": [
                    {
                        "id": "9ed40d547d35102f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "732bc28c498bd671",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 300,
            "wires": [
                {
                    "id": "c10453785d7371ca",
                    "port": 0
                },
                {
                    "id": "f21fa7687ded114e",
                    "port": 0
                },
                {
                    "id": "732bc28c498bd671",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "dcba5a408b90db4f",
        "type": "subflow",
        "name": "HotChip1Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "b99f99462611d243"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1620,
                "y": 880,
                "wires": [
                    {
                        "id": "735f2b7821eee391",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1620,
            "y": 560,
            "wires": [
                {
                    "id": "735f2b7821eee391",
                    "port": 1
                },
                {
                    "id": "d6d3f5c2c913d8e0",
                    "port": 0
                },
                {
                    "id": "cb7b6df64ec26f35",
                    "port": 0
                },
                {
                    "id": "28c74b19d1cc23ea",
                    "port": 0
                },
                {
                    "id": "25d807fa95278cd7",
                    "port": 0
                },
                {
                    "id": "68cb939c1b4eb9b8",
                    "port": 0
                },
                {
                    "id": "01463e1ac22832a6",
                    "port": 0
                },
                {
                    "id": "f46fc9a59a8e79f9",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "755f6eaaa7c0cddd",
        "type": "subflow",
        "name": "HotCoil1Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "c13ee86cd1f9e261"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1620,
                "y": 880,
                "wires": [
                    {
                        "id": "0a0c60410998a429",
                        "port": 0
                    }
                ]
            },
            {
                "x": 320,
                "y": 280,
                "wires": [
                    {
                        "id": "1688a619dcdf4a3c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1620,
            "y": 560,
            "wires": [
                {
                    "id": "0a0c60410998a429",
                    "port": 1
                },
                {
                    "id": "bb633f3ddf4dc1cb",
                    "port": 0
                },
                {
                    "id": "915b61cf052f5f0c",
                    "port": 0
                },
                {
                    "id": "8641490c595e2416",
                    "port": 0
                },
                {
                    "id": "6b7add81527aaaf2",
                    "port": 0
                },
                {
                    "id": "87a61b92dad7344c",
                    "port": 0
                },
                {
                    "id": "0376014355675892",
                    "port": 0
                },
                {
                    "id": "23d1c010e87796cc",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9ff174e82057e50f",
        "type": "subflow",
        "name": "HotCoil1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 300,
                "wires": [
                    {
                        "id": "bb7ce8165e3e1241"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "7a66fc3787892aa4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1460,
                "y": 460,
                "wires": [
                    {
                        "id": "2ab6506c3a96ab95",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 300,
            "wires": [
                {
                    "id": "a3c9f5a4d619fb99",
                    "port": 0
                },
                {
                    "id": "ef31a38bfa5d7fe6",
                    "port": 0
                },
                {
                    "id": "7a66fc3787892aa4",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "e5d36bc87bf46f25",
        "type": "subflow",
        "name": "HotCoil2Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "255fca3e1a8a0462"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 880,
                "wires": [
                    {
                        "id": "0550af75819c144d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 560,
            "wires": [
                {
                    "id": "0550af75819c144d",
                    "port": 1
                },
                {
                    "id": "78a9f0e787a8d2ee",
                    "port": 0
                },
                {
                    "id": "78b0bd72bd5902e0",
                    "port": 0
                },
                {
                    "id": "61b7a2336faa6eab",
                    "port": 0
                },
                {
                    "id": "93eda2f48aaadb18",
                    "port": 0
                },
                {
                    "id": "726651f72bf66f9c",
                    "port": 0
                },
                {
                    "id": "6019df0046c78f58",
                    "port": 0
                },
                {
                    "id": "c1f0472fae27bfb4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "100af8884419f9cb",
        "type": "subflow",
        "name": "HotCoil2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 300,
                "wires": [
                    {
                        "id": "abfa55f3b320907d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "f75079bc0eff60ac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 300,
            "wires": [
                {
                    "id": "478273ed9e778df8",
                    "port": 0
                },
                {
                    "id": "2a2785decd8f7504",
                    "port": 0
                },
                {
                    "id": "f75079bc0eff60ac",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "033e19cbbcf6ab20",
        "type": "subflow",
        "name": "SF10 Vapourtec 2 Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 1040,
                "wires": [
                    {
                        "id": "8ddd6445706a6b88"
                    },
                    {
                        "id": "7cf6df6c50fd9641"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3900,
                "y": 980,
                "wires": [
                    {
                        "id": "1f794aafeaa668a6",
                        "port": 0
                    },
                    {
                        "id": "98cf3a6c7bb9576a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 3900,
            "y": 1080,
            "wires": [
                {
                    "id": "1f794aafeaa668a6",
                    "port": 1
                },
                {
                    "id": "98cf3a6c7bb9576a",
                    "port": 1
                },
                {
                    "id": "bb9b3263553a2f77",
                    "port": 0
                },
                {
                    "id": "5c0cc6194d31e9f2",
                    "port": 0
                },
                {
                    "id": "eb81671aec5d4240",
                    "port": 0
                },
                {
                    "id": "4c9d11769f8a5655",
                    "port": 0
                },
                {
                    "id": "ab17986211fb7fe4",
                    "port": 0
                },
                {
                    "id": "8ddd6445706a6b88",
                    "port": 4
                },
                {
                    "id": "8ddd6445706a6b88",
                    "port": 5
                },
                {
                    "id": "7cf84469882b82c2",
                    "port": 0
                },
                {
                    "id": "71b68c0d0dcfdeaa",
                    "port": 0
                },
                {
                    "id": "a102871cd1d2fe03",
                    "port": 0
                },
                {
                    "id": "40d2eb38c918cb82",
                    "port": 0
                },
                {
                    "id": "f235ce057bc00d30",
                    "port": 0
                },
                {
                    "id": "a7f142434ad03e4a",
                    "port": 0
                },
                {
                    "id": "596dc41e5168d528",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "2ebe29b6d5387454",
        "type": "subflow",
        "name": "SF10 Vapourtec 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 600,
                "wires": [
                    {
                        "id": "274e8f6cc3cb9054"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2060,
                "y": 980,
                "wires": [
                    {
                        "id": "b395d0c134144d00",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 2060,
            "y": 600,
            "wires": [
                {
                    "id": "b395d0c134144d00",
                    "port": 0
                },
                {
                    "id": "ca868bf8796302f2",
                    "port": 0
                },
                {
                    "id": "588d5407520598da",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fad566f5d6b0591c",
        "type": "subflow",
        "name": "NMR 1 Flow",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1440,
                "y": 460,
                "wires": [
                    {
                        "id": "b417d3d3ccf6a613",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1440,
            "y": 400,
            "wires": [
                {
                    "id": "21989db55f2725b3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "948c434f9f4c530f",
        "type": "subflow",
        "name": "NMR 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "c88c69d8ad6853e4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 380,
                "wires": [
                    {
                        "id": "c17df383734ea306",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 900,
            "y": 440,
            "wires": [
                {
                    "id": "333903d0a0822b55",
                    "port": 0
                },
                {
                    "id": "f9ef06df437c4100",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9ae6e4df5dd67ca7",
        "type": "subflow",
        "name": "TerminalSubflow",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 640,
                "y": 120,
                "wires": [
                    {
                        "id": "67c0ea51c99244cf",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "lastTerminalInput",
                "type": "str",
                "value": "\"\""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9f06e317cceaf3a2",
        "type": "subflow",
        "name": "Shell Terminal",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "6e5458dfc7c99e05",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "db23fe724cb2791c",
        "type": "subflow",
        "name": "UI Enable/Disable",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "ee13c0aef809fcc8"
                    },
                    {
                        "id": "7c7e234781577c35"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 140,
                "wires": [
                    {
                        "id": "ee13c0aef809fcc8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 200,
                "wires": [
                    {
                        "id": "7c7e234781577c35",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c025c73d.909a28",
        "type": "mqtt-broker",
        "name": "CSIR MQTT Broker",
        "broker": "146.64.72.70",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ac11df20.5dcab",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7faba9fcd11fb567",
        "type": "serial-port",
        "z": "033e19cbbcf6ab20",
        "serialport": "/dev/ttyUSB1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\r",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "10000"
    },
    {
        "id": "073e85dedf28291d",
        "type": "serial-port",
        "z": "3bf455a61dc4725c",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\r",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "10000"
    },
    {
        "id": "c183487.23389b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Pharma Tech Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e54e6c82.3d9b5",
        "type": "ui_tab",
        "name": "Manual Control",
        "icon": "fa-thermometer-full",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "46e907f65e3dce84",
        "type": "ui_tab",
        "name": "Automation Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1853ba21.f1b306",
        "type": "ui_group",
        "name": "HotChip 1",
        "tab": "e54e6c82.3d9b5",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b861fb62.1b9f38",
        "type": "ui_group",
        "name": "HotChip 2",
        "tab": "e54e6c82.3d9b5",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1f3aa579c5b4973b",
        "type": "ui_group",
        "name": "HotCoil 1",
        "tab": "e54e6c82.3d9b5",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99486f5374ae4c69",
        "type": "ui_group",
        "name": "HotCoil 2",
        "tab": "e54e6c82.3d9b5",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "56c7a41708ec20f4",
        "type": "ui_group",
        "name": "HotChip1",
        "tab": "46e907f65e3dce84",
        "order": 4,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "96632e11e1c04c24",
        "type": "ui_group",
        "name": "HotChip2",
        "tab": "46e907f65e3dce84",
        "order": 5,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "08f2e0d237277a3e",
        "type": "ui_group",
        "name": "HotCoil1",
        "tab": "46e907f65e3dce84",
        "order": 6,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "131978166ea601ba",
        "type": "ui_group",
        "name": "HotCoil2",
        "tab": "46e907f65e3dce84",
        "order": 7,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d99fa63256862037",
        "type": "ui_group",
        "name": "ReactIR 702L",
        "tab": "46e907f65e3dce84",
        "order": 9,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f92bad53a3851b4d",
        "type": "ui_group",
        "name": "ReactIR 702L 1",
        "tab": "e54e6c82.3d9b5",
        "order": 9,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3aec7fe7cbf92af0",
        "type": "ui_group",
        "name": "SF10 Vapourtec 1",
        "tab": "e54e6c82.3d9b5",
        "order": 6,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a84e115482e1d03d",
        "type": "ui_group",
        "name": "SF10 Vapourtec 1",
        "tab": "46e907f65e3dce84",
        "order": 2,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "59c575dbf5467d2a",
        "type": "ui_group",
        "name": "FlowSynMaxi2",
        "tab": "e54e6c82.3d9b5",
        "order": 8,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "947decbba47e6fc1",
        "type": "ui_group",
        "name": "FlowSynMaxi2",
        "tab": "46e907f65e3dce84",
        "order": 8,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c08d3fa1ed8142ea",
        "type": "ui_group",
        "name": "SF10 Vapourtec 2",
        "tab": "46e907f65e3dce84",
        "order": 3,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0604acf3435ae78",
        "type": "ui_group",
        "name": "SF10 Vapourtec 2",
        "tab": "e54e6c82.3d9b5",
        "order": 7,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d682692f07ed7f2c",
        "type": "ui_group",
        "name": "NMR1",
        "tab": "46e907f65e3dce84",
        "order": 10,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b5415305cc99c74",
        "type": "ui_group",
        "name": "NMR1",
        "tab": "e54e6c82.3d9b5",
        "order": 10,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3838b38e193d9fbd",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "f92bad53a3851b4d",
        "order": 3,
        "width": 19,
        "height": 1
    },
    {
        "id": "9824d0593ccfa23c",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "3aec7fe7cbf92af0",
        "order": 17,
        "width": 24,
        "height": 1
    },
    {
        "id": "4b87541d7f4e3423",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "3aec7fe7cbf92af0",
        "order": 19,
        "width": 12,
        "height": 1
    },
    {
        "id": "80828a5357a681a6",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "3aec7fe7cbf92af0",
        "order": 20,
        "width": 12,
        "height": 1
    },
    {
        "id": "2f2596ab2e19e201",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "c0604acf3435ae78",
        "order": 17,
        "width": 24,
        "height": 1
    },
    {
        "id": "a909be590e3dacf2",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "c0604acf3435ae78",
        "order": 19,
        "width": 12,
        "height": 1
    },
    {
        "id": "42ce6cf12a0be7f4",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "c0604acf3435ae78",
        "order": 20,
        "width": 12,
        "height": 1
    },
    {
        "id": "561aae8af9c03663",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "b37a424a516db478",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "172bc54074be9eb8",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "d9eecccaa2655491",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 8,
        "width": 8,
        "height": 1
    },
    {
        "id": "73ff2eed060f41c1",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 9,
        "width": 24,
        "height": 1
    },
    {
        "id": "7955408f37b624f7",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 10,
        "width": 24,
        "height": 1
    },
    {
        "id": "ebf5f75b218c79fc",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 23,
        "width": 8,
        "height": 1
    },
    {
        "id": "5bfbdc914fdb3f10",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 24,
        "width": 8,
        "height": 1
    },
    {
        "id": "188215da9e6ee81d",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 25,
        "width": 8,
        "height": 1
    },
    {
        "id": "5f4c10dee96c7944",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 26,
        "width": 8,
        "height": 1
    },
    {
        "id": "224c76b4c0262223",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 27,
        "width": 24,
        "height": 1
    },
    {
        "id": "0c6ca92804e34b43",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "5ec43e3f8ae495d6",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 38,
        "width": 4,
        "height": 1
    },
    {
        "id": "806f52dd73a2a0ef",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 39,
        "width": 4,
        "height": 1
    },
    {
        "id": "892da222da717283",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 40,
        "width": 4,
        "height": 1
    },
    {
        "id": "1ffdf55f99a381a0",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 41,
        "width": 24,
        "height": 1
    },
    {
        "id": "a74af23860fbffb1",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 60,
        "width": 24,
        "height": 1
    },
    {
        "id": "dbab63e2f88a5a6d",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 61,
        "width": 24,
        "height": 1
    },
    {
        "id": "c7f0ff25321cdcf8",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 63,
        "width": 24,
        "height": 1
    },
    {
        "id": "d12dda8f5838f4ad",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 64,
        "width": 24,
        "height": 1
    },
    {
        "id": "fd332a3dd307853f",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 66,
        "width": 24,
        "height": 1
    },
    {
        "id": "555f50afae0a5957",
        "type": "ui_spacer",
        "z": "8a0e73bbc365dbb1",
        "name": "spacer",
        "group": "59c575dbf5467d2a",
        "order": 67,
        "width": 24,
        "height": 1
    },
    {
        "id": "30f895097d6aac5b",
        "type": "OpcUa-Endpoint",
        "z": "fc608604922b7267",
        "endpoint": "opc.tcp://192.168.1.50:62552/iCOpcUaServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "9db79d9e41b441a1",
        "type": "ui_group",
        "z": "9ae6e4df5dd67ca7",
        "name": "Default",
        "tab": "46e907f65e3dce84",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "638abfa4bce7685f",
        "type": "ui_tab",
        "name": "Automation Test Setup",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "16125889e6fb2165",
        "type": "ui_group",
        "name": "CREATE Test",
        "tab": "638abfa4bce7685f",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a8bc3fc9971dbe39",
        "type": "ui_group",
        "name": "Activate Devices",
        "tab": "e54e6c82.3d9b5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0566a31df5b66cbe",
        "type": "MySQLdatabase",
        "name": "Pharma (Laptop)",
        "host": "192.168.1.51",
        "port": "3306",
        "db": "pharma",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b6462dea982cb7e1",
        "type": "mongodb",
        "hostname": "192.168.1.51",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "Pharma",
        "name": ""
    },
    {
        "id": "c0b5f15fd7e09a38",
        "type": "ui_group",
        "name": "RUN Test",
        "tab": "638abfa4bce7685f",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f705b1352bd912f",
        "type": "ui_group",
        "name": "Active Devices",
        "tab": "46e907f65e3dce84",
        "order": 1,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2f1dcb30e466b4c",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "380e220b2e9c985e",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "8a5c890cf058e027",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "1c52f6a7279aabdf",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "1237c055e66a1801",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "2217a4d07c9ced53",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "50ce0e1362b6195b",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "71d0607d48cbc4ed",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "f478b07b04f96f5a",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "d3ecde3a49113d90",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "6bdba533e5759912",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "c4e43a0bfa51ebbf",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "c08d3fa1ed8142ea",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "4d53f9c22344274d",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "de495867eb4ab420",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "c2d75f23a877b786",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "c3eab3a93f9106cc",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "3bbf0009292faa10",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "e42e44a4942197d0",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "2885b5a0799e6751",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "9809e857fe5b8790",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "b17d8df1b58d0099",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "c48d5d9c0c9d1a9c",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "ab4165d6ab341f89",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "a52229582e662a31",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 22,
        "width": 6,
        "height": 1
    },
    {
        "id": "2efb7d2939d0fc16",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 25,
        "width": 6,
        "height": 1
    },
    {
        "id": "5d61344a633b619e",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 26,
        "width": 6,
        "height": 1
    },
    {
        "id": "4a0ac2c72e89c8e5",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 29,
        "width": 6,
        "height": 1
    },
    {
        "id": "90b9c57d1852ac91",
        "type": "ui_link",
        "name": "Link 4",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 4
    },
    {
        "id": "491b33046c0566e6",
        "type": "ui_group",
        "name": "Active Python Script",
        "tab": "638abfa4bce7685f",
        "order": 3,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6fec98d6ba055d35",
        "type": "ui_spacer",
        "z": "cdb779666b3351ad",
        "name": "spacer",
        "group": "16125889e6fb2165",
        "order": 5,
        "width": 12,
        "height": 1
    },
    {
        "id": "f4d044c9.1ebbf8",
        "type": "tcp request",
        "z": "98cb21df.da2ee",
        "name": "Uniqsis-Laptop",
        "server": "192.168.1.188",
        "port": "3456",
        "out": "time",
        "splitc": "1000",
        "x": 620,
        "y": 280,
        "wires": [
            [
                "e3f0bfcd.97434",
                "403565b1.a1ffbc"
            ]
        ]
    },
    {
        "id": "f19d639b.9ee73",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Status()",
        "payloadType": "str",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "e3f0bfcd.97434",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "7bb48cd4.36fe84",
        "type": "function",
        "z": "98cb21df.da2ee",
        "name": "",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 280,
        "wires": [
            [
                "f4d044c9.1ebbf8",
                "7cbe752a.67546c"
            ]
        ]
    },
    {
        "id": "403565b1.a1ffbc",
        "type": "function",
        "z": "98cb21df.da2ee",
        "name": "",
        "func": "// return msg;\n\nvar output = msg.payload;\nmsg.payload = output.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "c177b7f6.2b0ec8"
            ]
        ]
    },
    {
        "id": "c177b7f6.2b0ec8",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "fd0ec8f8.9ba588",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "GetMinMax()",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "513762db.4ad03c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get(1,250,350,50,0)",
        "payloadType": "str",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "3e688325.64958c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Rate(40)",
        "payloadType": "str",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "d6cbad73.522aa",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "PixelToWavelength(92)",
        "payloadType": "str",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "455d275c.b79da8",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "WavelengthToPixel(200)",
        "payloadType": "str",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "6188dde4.dab344",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SetPathLength(1)",
        "payloadType": "str",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "89b4635b.3962c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SetTimeAveraging(5)",
        "payloadType": "str",
        "x": 220,
        "y": 360,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "2a0b3d6.3651ec2",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "Strobe(5,20)",
        "payloadType": "str",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "f7cff0f9.befc",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeAuto(1,200,400)",
        "payloadType": "str",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "a01632ab.51ffe",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeOn(1)",
        "payloadType": "str",
        "x": 470,
        "y": 460,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "384124df.f9596c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Blank()",
        "payloadType": "str",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "d00d2c90.e4e05",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeOn(0)",
        "payloadType": "str",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "7cbe752a.67546c",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "2b813f92.cdd9a",
        "type": "comment",
        "z": "98cb21df.da2ee",
        "name": "Need to run twice(sometimes)",
        "info": "",
        "x": 710,
        "y": 460,
        "wires": []
    },
    {
        "id": "85466790.d86fe8",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get(1,250,350,50)",
        "payloadType": "str",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "35cfa536.db853a",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get()",
        "payloadType": "str",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "25c71a8097caba87",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "499f54fee7fa7fb8",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Set InUse Flag",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\") || {};\n\nsf10Vapourtec1.inUse = false;\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nmsg.payload = sf10Vapourtec1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "381bfb5b068e20c5",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Receive Command: Link to SF10 Vapourtec 1",
        "info": "",
        "x": 190,
        "y": 540,
        "wires": []
    },
    {
        "id": "9dcf9fdfeb554bb4",
        "type": "mqtt out",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "topic": "subflow/sf10vapourtec1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1950,
        "y": 620,
        "wires": []
    },
    {
        "id": "778b971fa7d666bb",
        "type": "mqtt in",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "topic": "subflow/sf10vapourtec1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 960,
        "wires": [
            [
                "ed017f1ea54d533f"
            ]
        ]
    },
    {
        "id": "22a6a89a16a5caae",
        "type": "inject",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "499f54fee7fa7fb8"
            ]
        ]
    },
    {
        "id": "4cb1aa08cc0a8fe1",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "8253d446697f0c74"
            ]
        ]
    },
    {
        "id": "8253d446697f0c74",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "sf10Vapourtec1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "b9288a56f5dfd3c1",
                "0958657a36119e32",
                "d3384fc1b94795ab"
            ],
            []
        ]
    },
    {
        "id": "605eca13ccd55237",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "b0bb338c89632303",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1730,
        "y": 620,
        "wires": [
            [
                "9dcf9fdfeb554bb4"
            ]
        ]
    },
    {
        "id": "ac34ca4df61b04ab",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 980,
        "y": 160,
        "wires": []
    },
    {
        "id": "b9288a56f5dfd3c1",
        "type": "change",
        "z": "e399fc8fc0b218b9",
        "name": "Command received",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "975f46529d288422",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Return result from Serial port",
        "info": "",
        "x": 140,
        "y": 920,
        "wires": []
    },
    {
        "id": "f4a5379235533145",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"START\"}}}",
        "info": "",
        "x": 360,
        "y": 440,
        "wires": []
    },
    {
        "id": "fa4a7ab71cb2b687",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"STOP\"}}}",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "c8d29f37c42c5471",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "4577921abc9e3c97",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}}}",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "da5239bb38266369",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}}}",
        "info": "",
        "x": 440,
        "y": 280,
        "wires": []
    },
    {
        "id": "08c6e6eb9580ac5d",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}}}",
        "info": "",
        "x": 440,
        "y": 320,
        "wires": []
    },
    {
        "id": "16cae053f9df88e9",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}}}",
        "info": "",
        "x": 450,
        "y": 360,
        "wires": []
    },
    {
        "id": "83466901bf9e749e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartSpeed\": 0.9, \"rampStopSpeed\": 1.9, \"rampTIme\": 1.5}}}",
        "info": "",
        "x": 600,
        "y": 400,
        "wires": []
    },
    {
        "id": "4d2635032246247e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"VALVE\", \"valve\":\"A\"}}}",
        "info": "",
        "x": 390,
        "y": 200,
        "wires": []
    },
    {
        "id": "795d535c4a83ad7b",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "OUTPUT",
        "info": "",
        "x": 1300,
        "y": 100,
        "wires": []
    },
    {
        "id": "c2ec8f0064d2bb3e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Receive Response: Link to SF10 Vapourtec 1",
        "info": "",
        "x": 190,
        "y": 860,
        "wires": []
    },
    {
        "id": "22a278819ede7490",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Generate Status / Output",
        "func": "var timestamp = msg.myepoch;\n\nvar responseString = \"\";\nvar statusMsg = {};\nvar outputMsg = {};\n\nresponseString = \"Mode: \" + msg.payload.settings.mode + ' [State: ' + msg.payload.state + ']';\n\nstatusMsg.payload = responseString;\noutputMsg.payload = msg.payload;\n\nreturn [statusMsg, outputMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "78d471b2b4d60a53",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Check Response: Success / Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 960,
        "wires": [
            [
                "38675d53d9d2d9e9",
                "776cc4a1e45db9ad"
            ],
            []
        ]
    },
    {
        "id": "4f30d0c598400f3b",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 640,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "0958657a36119e32",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "4f30d0c598400f3b"
            ],
            [
                "8539917c234dc38a"
            ],
            [
                "7265cd25f5ecc61e"
            ],
            [
                "4f30d0c598400f3b"
            ],
            [
                "4f30d0c598400f3b"
            ]
        ]
    },
    {
        "id": "8539917c234dc38a",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar valve = msg.payload.settings.valve || \"A\";\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            valve: valve\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "7265cd25f5ecc61e",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 740,
        "wires": [
            [
                "66686fd2593909a3"
            ],
            [
                "de2c7a407a20c427"
            ],
            [
                "26ce96dee153b079"
            ],
            [
                "b636f2d2b8b79dbb"
            ],
            [
                "bbf2812f351a0d39"
            ]
        ]
    },
    {
        "id": "66686fd2593909a3",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar flowrate = msg.payload.settings.flowrate || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            flowrate: flowrate\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 720,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "de2c7a407a20c427",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar pressure = msg.payload.settings.pressure || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            pressure: pressure\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 760,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "26ce96dee153b079",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar dose = msg.payload.settings.dose || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            dose: dose\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 800,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "b636f2d2b8b79dbb",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar gasflowrate = msg.payload.settings.gasflowrate || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            gasflowrate: gasflowrate\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 840,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "bbf2812f351a0d39",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar rampStartRate = msg.payload.settings.rampStartRate || 0.0;\nvar rampStopRate = msg.payload.settings.rampStopRate || 0.0;\nvar rampTime = msg.payload.settings.rampTime || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            rampStartRate: rampStartRate,\n            rampStopRate: rampStopRate,\n            rampTime: rampTime\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 880,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "ed017f1ea54d533f",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 960,
        "wires": [
            [
                "78d471b2b4d60a53"
            ]
        ]
    },
    {
        "id": "38675d53d9d2d9e9",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "d": true,
        "name": "Check Settings payload present: Yes / No ",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 1040,
        "wires": [
            [
                "22a278819ede7490"
            ],
            []
        ]
    },
    {
        "id": "ad7c54c9f4116047",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec1\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 2230,
        "y": 160,
        "wires": []
    },
    {
        "id": "776cc4a1e45db9ad",
        "type": "simpletime",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 940,
        "wires": [
            [
                "22a278819ede7490"
            ]
        ]
    },
    {
        "id": "d3384fc1b94795ab",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar sf10Vapourtec1 = global.get(\"sf10Vapourtec1\") || {};\n\nsf10Vapourtec1.inUse = inUse;\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nmsg.payload = sf10Vapourtec1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "68fd199b11f8d622",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Init SF10 vapourtec 1 (State, Mode, values & InUse)",
        "func": "var sf10Vapourtec1 = {\n        deviceName: \"sf10Vapourtec1\",\n        deviceType: \"Pump\",\n        inUse: false,\n        remoteEnabled: false,\n        tele: {\n            cmnd: '',\n            settings: {\n                mode: '',\n                flowrate: 0.0,\n                pressure: 0.0,\n                dose: 0.0,\n                gasflowrate: 0.0,\n                rampStartRate: 0.0,\n                rampStopRate: 0.0,\n                rampTime: 0.0\n            },\n            state: {\n                status: 'STOP',\n                valve: 'A',\n                response: '',\n            },\n            timestamp: ''\n        }\n};\n\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nmsg.payload = sf10Vapourtec1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7197f78e23a063dd",
        "type": "inject",
        "z": "3bf455a61dc4725c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "68fd199b11f8d622"
            ]
        ]
    },
    {
        "id": "6a0bbf2fbb34f208",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "INIT: Variables at startup",
        "info": "",
        "x": 150,
        "y": 20,
        "wires": []
    },
    {
        "id": "9b1af040dc096aa8",
        "type": "mqtt in",
        "z": "3bf455a61dc4725c",
        "name": "",
        "topic": "subflow/sf10vapourtec1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 740,
        "wires": [
            [
                "137c2b1dcc21a78f"
            ]
        ]
    },
    {
        "id": "29c74471f9cd5241",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "3bba40e0c853a0c8",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "REMOTEEN/ START/ STOP/ VALVE/MODE/FLOW/GASFLOW/REG/DOSE/RAMP/GV",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STOP",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "MODE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GV",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "7ed7660147cfd110"
            ],
            [
                "0b96b3f79cfa1f23"
            ],
            [
                "cb609a078cb166f0"
            ],
            [
                "d92e9111992a785f"
            ],
            [
                "92de1de966d6aea5",
                "6809dc08bcdf5324"
            ],
            [
                "92de1de966d6aea5"
            ],
            []
        ]
    },
    {
        "id": "f96310d090f62782",
        "type": "mqtt out",
        "z": "3bf455a61dc4725c",
        "name": "",
        "topic": "subflow/sf10vapourtec1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 4020,
        "y": 920,
        "wires": []
    },
    {
        "id": "e3eb49b6c3ef4fb6",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "?????? UPDATE Globa l variable",
        "info": "",
        "x": 1370,
        "y": 20,
        "wires": []
    },
    {
        "id": "92de1de966d6aea5",
        "type": "serial request",
        "z": "3bf455a61dc4725c",
        "name": "",
        "serial": "073e85dedf28291d",
        "x": 3030,
        "y": 980,
        "wires": [
            [
                "94087ec57e5fbf5c"
            ]
        ]
    },
    {
        "id": "79109ecf0d95c969",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Slider: Flow/GasFlow/Pressure/Dose/RampStart/RampStop/RampTime",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "SliderFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderGasFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderPressure",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderDose",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStart",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStop",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampTime",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 610,
        "y": 1240,
        "wires": [
            [
                "12bf8fdd5e66b96d"
            ],
            [
                "aaaaa4774f1eebff"
            ],
            [
                "63a90c4df69d3f51"
            ],
            [
                "6affa3e4b555e954"
            ],
            [
                "f76c5818dd3166c7"
            ],
            [
                "f04379813ac186e2"
            ],
            [
                "3ff97091e52e54b2"
            ],
            []
        ]
    },
    {
        "id": "12bf8fdd5e66b96d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETFLOW command & Set flow",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1200,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "aaaaa4774f1eebff",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETGASFLOW command & Set gasflow",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "63a90c4df69d3f51",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETREG command & Set pressure",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1280,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6affa3e4b555e954",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETDOSE command & Set dose",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "d92e9111992a785f",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Valve: B / A",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "B",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1020,
        "wires": [
            [
                "cf82995da8ad5857",
                "92de1de966d6aea5"
            ],
            [
                "8645f2d681216512",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "cf82995da8ad5857",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "B",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 1020,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "8645f2d681216512",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "A",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 1060,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6809dc08bcdf5324",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Mode: FLOW/REG/DOSE/GAS/RAMP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "815aff4df4aa6e25"
            ],
            [
                "eeb0e6d73f854d45"
            ],
            [
                "33acca1d18d90ac0"
            ],
            [
                "539fc17f353b1c26"
            ],
            [
                "350c028bf6e9b392"
            ]
        ]
    },
    {
        "id": "815aff4df4aa6e25",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "eeb0e6d73f854d45",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "33acca1d18d90ac0",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "539fc17f353b1c26",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "350c028bf6e9b392",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f76c5818dd3166c7",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampStart",
        "rules": [
            {
                "t": "set",
                "p": "rampStart",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.rampStart",
                "pt": "global",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStartRate",
                "pt": "global",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1360,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "f04379813ac186e2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampStop",
        "rules": [
            {
                "t": "set",
                "p": "rampStop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStopRate",
                "pt": "global",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1400,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "3ff97091e52e54b2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampTime",
        "rules": [
            {
                "t": "set",
                "p": "rampTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampTime",
                "pt": "global",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1440,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6b965ef404e068cc",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Buttons - Command in msg.payload",
        "info": "",
        "x": 500,
        "y": 960,
        "wires": []
    },
    {
        "id": "81dcdfdd83b8ec07",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Sliders (Variable values) - Variable Name in msg.topic & Variable Value in msg.payload",
        "info": "",
        "x": 660,
        "y": 1160,
        "wires": []
    },
    {
        "id": "91174aa6461588b8",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 710,
        "y": 740,
        "wires": [
            [
                "da665d69cb36b117"
            ],
            [
                "b1a808017b2c3651"
            ],
            [
                "c4bc66c944d26b0e"
            ],
            [
                "8d7f8124fdd6339e"
            ],
            [
                "036e01cd94b48b4e"
            ]
        ]
    },
    {
        "id": "f52aaeb71dfd32bb",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 140,
        "wires": []
    },
    {
        "id": "137c2b1dcc21a78f",
        "type": "json",
        "z": "3bf455a61dc4725c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "7b86772327da4f5a"
            ]
        ]
    },
    {
        "id": "da665d69cb36b117",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create REMOTEEN command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "REMOTEEN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 640,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "391660fa1def5aa7",
        "type": "json",
        "z": "3bf455a61dc4725c",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3770,
        "y": 920,
        "wires": [
            [
                "f96310d090f62782"
            ]
        ]
    },
    {
        "id": "8d7f8124fdd6339e",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create START command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "START",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "036e01cd94b48b4e",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create STOP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 860,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "b1a808017b2c3651",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create VALVE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "payload.settings.valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "VALVE @valve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@valve",
                "fromt": "str",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 680,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "c4bc66c944d26b0e",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1230,
        "y": 740,
        "wires": [
            [
                "05998983f073c8f2"
            ],
            [
                "48d9fdc1c99acf58"
            ],
            [
                "6152fe701a906236"
            ],
            [
                "0c31da3fd757fcb8"
            ],
            [
                "7cbb66135c97e02a"
            ]
        ]
    },
    {
        "id": "638aacb98d817013",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload.settings.flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @flowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@flowrate",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 540,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "4047a8c0070d250c",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "OUTPUT",
        "info": "",
        "x": 1200,
        "y": 140,
        "wires": []
    },
    {
        "id": "b55c3add3e132019",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 700,
        "wires": []
    },
    {
        "id": "099f151f40a6d504",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "8a048c2c79db9bcb",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\");\nvar timestamp = msg.myepoch;\nvar sentCommand = msg.request_payload || \"\";\nvar status = msg.status || \"\";\nvar response = msg.payload || {};\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nsf10Vapourtec1.tele.state.response = response;\nsf10Vapourtec1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec1.deviceName,\n        deviceType: sf10Vapourtec1.deviceType,\n        settings: {\n            cmnd: sentCommand,\n            mode: sf10Vapourtec1.tele.settings.mode,\n            flowrate: sf10Vapourtec1.tele.settings.flowrate,\n            pressure: sf10Vapourtec1.tele.settings.pressure,\n            dose: sf10Vapourtec1.tele.settings.dose,\n            gasflowrate: sf10Vapourtec1.tele.settings.gasflowrate,\n            rampStartRate: sf10Vapourtec1.tele.settings.rampStartRate,\n            rampStopRate: sf10Vapourtec1.tele.settings.rampStopRate,\n            rampTime: sf10Vapourtec1.tele.settings.rampTime\n        },\n        state: {\n            response: response,\n            status: status\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nstatusMsg = {\n    payload: sentCommand + ' - ' + status + ' [' + response + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 980,
        "wires": [
            [
                "391660fa1def5aa7"
            ],
            []
        ]
    },
    {
        "id": "b516025e7c90df87",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETREG command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload.settings.pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @pressure",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@pressure",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 580,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "50dc82d2bc7d1984",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETDOSE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload.settings.dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @dose",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@dose",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 620,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "998f3e84c168c75d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETGASFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload.settings.gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @gasflowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@gasflowrate",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 660,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "9902bef7282cee4d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETRAMP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "startRate",
                "pt": "msg",
                "to": "payload.settings.rampStartRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "stopRate",
                "pt": "msg",
                "to": "payload.settings.rampStopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "payload.settings.rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @startRate @stopRate @time",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@startRate",
                "fromt": "str",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@stopRate",
                "fromt": "str",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@time",
                "fromt": "str",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStartRate",
                "pt": "global",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStopRate",
                "pt": "global",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampTime",
                "pt": "global",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 700,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "7ed7660147cfd110",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 900,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "0b96b3f79cfa1f23",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 940,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "cb609a078cb166f0",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 980,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "d6820b0fb6d93474",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec1\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 2130,
        "y": 180,
        "wires": []
    },
    {
        "id": "c0234698772ed1c9",
        "type": "inject",
        "z": "3bf455a61dc4725c",
        "name": "TriggerSF10 Settings Send",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1700,
        "wires": [
            [
                "92148a79ab48e124"
            ]
        ]
    },
    {
        "id": "92148a79ab48e124",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "inUse?",
        "property": "sf10Vapourtec1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1700,
        "wires": [
            [
                "f9a0236060f30eb9"
            ]
        ]
    },
    {
        "id": "eb2b760381321ade",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "d": true,
        "name": "Settings NOT Empty",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "d8a42060ec9cb18a"
            ]
        ]
    },
    {
        "id": "f9a0236060f30eb9",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Read Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "eb2b760381321ade",
                "d8a42060ec9cb18a"
            ]
        ]
    },
    {
        "id": "d8a42060ec9cb18a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build response payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "settings",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.settings",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.state",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.state.valve",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1700,
        "wires": [
            [
                "3eb0c8c24c7eb23f"
            ]
        ]
    },
    {
        "id": "ab5be5d00382705a",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "When Settings is present, periodically send output message",
        "info": "",
        "x": 280,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4a9d3536862f4853",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\");\nvar timestamp = msg.myepoch;\n\nvar settings = msg.settings || {};\nvar state = msg.state || \"\";\n// var valve = msg.valve || \"\";\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\n// responseMsg = {\n//     payload: \"sf10Vapourtec1\",\n//     settings: settings,\n//     state: state,\n//     valve: valve\n//     };\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec1.deviceName,\n        deviceType: sf10Vapourtec1.deviceType,\n        cmnd: sf10Vapourtec1.tele.cmnd,\n        settings: settings,\n        state: state,\n        timestamp: timestamp\n    }\n};\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nstatusMsg = {\n    payload: 'MODE: ' + settings.mode + ' [State: ' + state + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1700,
        "wires": [
            [
                "391660fa1def5aa7"
            ],
            []
        ]
    },
    {
        "id": "bf027b162f5258b2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE FLOW Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 540,
        "wires": [
            [
                "34d9c7301ad792f9",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6389f737842c61ad",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE REG Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 580,
        "wires": [
            [
                "d1ba9896bcb9c574",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "c649fbca7f0991c3",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE DOSE Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 620,
        "wires": [
            [
                "2e7a7381b47ef82d",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "1526dccb80de3990",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE GAS Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 660,
        "wires": [
            [
                "05fe1cdeeded5311",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "3591a028dbcf13d2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE RAMP Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 700,
        "wires": [
            [
                "3f010c43bd61082b",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "34d9c7301ad792f9",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 540,
        "wires": [
            [
                "8caede5f4f5dda94"
            ]
        ]
    },
    {
        "id": "d1ba9896bcb9c574",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 580,
        "wires": [
            [
                "6968ead28a2462f1"
            ]
        ]
    },
    {
        "id": "2e7a7381b47ef82d",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 620,
        "wires": [
            [
                "39793d1694bbec65"
            ]
        ]
    },
    {
        "id": "05fe1cdeeded5311",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 660,
        "wires": [
            [
                "a0350420714b8d24"
            ]
        ]
    },
    {
        "id": "3f010c43bd61082b",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 700,
        "wires": [
            [
                "35c091610e2ea56a"
            ]
        ]
    },
    {
        "id": "05998983f073c8f2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 540,
        "wires": [
            [
                "bf027b162f5258b2"
            ]
        ]
    },
    {
        "id": "48d9fdc1c99acf58",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 580,
        "wires": [
            [
                "6389f737842c61ad"
            ]
        ]
    },
    {
        "id": "6152fe701a906236",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 620,
        "wires": [
            [
                "c649fbca7f0991c3"
            ]
        ]
    },
    {
        "id": "0c31da3fd757fcb8",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 660,
        "wires": [
            [
                "1526dccb80de3990"
            ]
        ]
    },
    {
        "id": "7cbb66135c97e02a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 700,
        "wires": [
            [
                "3591a028dbcf13d2"
            ]
        ]
    },
    {
        "id": "8caede5f4f5dda94",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 540,
        "wires": [
            [
                "638aacb98d817013"
            ]
        ]
    },
    {
        "id": "6968ead28a2462f1",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 580,
        "wires": [
            [
                "b516025e7c90df87"
            ]
        ]
    },
    {
        "id": "39793d1694bbec65",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 620,
        "wires": [
            [
                "50dc82d2bc7d1984"
            ]
        ]
    },
    {
        "id": "a0350420714b8d24",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 660,
        "wires": [
            [
                "998f3e84c168c75d"
            ]
        ]
    },
    {
        "id": "35c091610e2ea56a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 700,
        "wires": [
            [
                "9902bef7282cee4d"
            ]
        ]
    },
    {
        "id": "c93d19221938ba1e",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 370,
        "y": 180,
        "wires": []
    },
    {
        "id": "e1e8815c3fa4cca9",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\", \"inUse\":true, \"settings\":{\"command\":\"VALVE\", \"valve\":\"A\"}}}",
        "info": "",
        "x": 390,
        "y": 220,
        "wires": []
    },
    {
        "id": "9b457d457297e2a1",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}}}",
        "info": "",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "3fd7a1d2a5b1b37b",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}}}",
        "info": "",
        "x": 440,
        "y": 300,
        "wires": []
    },
    {
        "id": "4d2bcacf7c75b11f",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}}}",
        "info": "",
        "x": 440,
        "y": 340,
        "wires": []
    },
    {
        "id": "e18b7437db4cee0f",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}}}",
        "info": "",
        "x": 450,
        "y": 380,
        "wires": []
    },
    {
        "id": "186bd42ef204d069",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartSpeed\": 0.9, \"rampStopSpeed\": 1.9, \"rampTIme\": 1.5}}}",
        "info": "",
        "x": 600,
        "y": 420,
        "wires": []
    },
    {
        "id": "60fe5b28a2b69014",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"START\"}}}",
        "info": "",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "b6c0ef9bb67aac0d",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec1\",  \"inUse\":true, \"settings\":{\"command\":\"STOP\"}}}",
        "info": "",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "4b0e795ef5ee910f",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "94087ec57e5fbf5c",
        "type": "simpletime",
        "z": "3bf455a61dc4725c",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 3210,
        "y": 980,
        "wires": [
            [
                "8a048c2c79db9bcb"
            ]
        ]
    },
    {
        "id": "3eb0c8c24c7eb23f",
        "type": "simpletime",
        "z": "3bf455a61dc4725c",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 1410,
        "y": 1700,
        "wires": [
            [
                "4a9d3536862f4853"
            ]
        ]
    },
    {
        "id": "7b86772327da4f5a",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sf10Vapourtec1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 780,
        "wires": [
            [
                "91174aa6461588b8",
                "9a6fe1bf7019df9e"
            ],
            []
        ]
    },
    {
        "id": "9a6fe1bf7019df9e",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "416e771d68d0f37d",
        "type": "inject",
        "z": "ef63b0d123a76daa",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "f359c570b253314a"
            ]
        ]
    },
    {
        "id": "380641847c099cc2",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "f359c570b253314a",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Set InUse Flag",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nflowsynmaxi2.inUse = false;\n\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nmsg.payload = flowsynmaxi2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7f876d1500e15126",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ef3dc8a5ba0cc57",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{{\"payload\":{\"deviceName\":\"flowsynmaxi2\",\"deviceType\":\"PumpValveHeater\",\"settings\":{\"flowRatePumpA\":0,\"flowRatePumpB\":0,\"flowRatePumpC\":0,\"flowRatePumpD\":0,\"tempReactor1\":0,\"tempReactor2\":0,\"tempReactor3\":0,\"tempReactor4\":0,\"valveOpenA\":false,\"valveOpenB\":false,\"valveOpenC\":false,\"valveOpenD\":false,\"valveOpenCW\":false,\"injValveOpenA\":false,\"injValveOpenB\":false,\"injValveOpenC\":false,\"injValveOpenD\":false,\"heaterON\":false},\"state\":{\"pressSystem\":0.04,\"pressFlowSynA\":0,\"pressFlowSynB\":-0.22,\"pressBinaryC\":0,\"pressBinaryD\":0,\"tempReactor1\":21.73,\"tempReactor2\":22.72,\"tempReactor3\":999,\"tempReactor4\":999,\"valveOpenA\":false,\"valveOpenB\":false,\"valveOpenC\":false,\"valveOpenD\":false,\"valveOpenCW\":false,\"valveInjOpenA\":false,\"valveInjOpenB\":false,\"valveInjOpenC\":false,\"valveInjOpenD\":false,\"flowRatePumpA\":0.02,\"flowRatePumpB\":0.04,\"flowRatePumpC\":0.06,\"flowRatePumpD\":0.08,\"chillerDetected\":false},\"timestamp\":\"1706016452255\"},\"_msgid\":\"9d70f8965322d601\"}}",
        "info": "",
        "x": 2810,
        "y": 160,
        "wires": []
    },
    {
        "id": "8dea984eca3c1f5a",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "58a8b43bc3360ee9",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "Receive Command: Link to FlowSynMaxi 2",
        "info": "",
        "x": 200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5e4d284bebebb458",
        "type": "switch",
        "z": "ef63b0d123a76daa",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "flowsynmaxi2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "b41677142a4640e8",
                "1863efa38ee6eaca"
            ],
            []
        ]
    },
    {
        "id": "71d4794b07b6989a",
        "type": "json",
        "z": "ef63b0d123a76daa",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1030,
        "y": 1120,
        "wires": [
            [
                "0714fb46889200b9"
            ]
        ]
    },
    {
        "id": "b41677142a4640e8",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Build MQTT Payload",
        "func": "var deviceName = msg.payload.deviceName || \"\";\nvar subDevice = msg.payload.settings.subDevice || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar value = msg.payload.settings.value || 0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: deviceName,\n        inUse: inUse,\n        settings: {\n            subDevice: subDevice,\n            command: command,\n            value: value\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1120,
        "wires": [
            [
                "71d4794b07b6989a"
            ]
        ]
    },
    {
        "id": "5640eb18d22c645b",
        "type": "json",
        "z": "ef63b0d123a76daa",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "4b9b31baaed0db78"
            ]
        ]
    },
    {
        "id": "0714fb46889200b9",
        "type": "mqtt out",
        "z": "ef63b0d123a76daa",
        "name": "",
        "topic": "subflow/flowsynmaxi2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1240,
        "y": 1120,
        "wires": []
    },
    {
        "id": "fee0fdc680de2b68",
        "type": "mqtt in",
        "z": "ef63b0d123a76daa",
        "name": "",
        "topic": "subflow/flowsynmaxi2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1280,
        "wires": [
            [
                "5640eb18d22c645b"
            ]
        ]
    },
    {
        "id": "97837b7d30e60b4e",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "Return result from FlowSynMaxi 2",
        "info": "",
        "x": 180,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4b9b31baaed0db78",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\");\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: flowsynmaxi2.deviceName,\n        deviceType: flowsynmaxi2.deviceType,\n        settings: flowsynmaxi2.tele.settings,\n        state: flowsynmaxi2.tele.state,\n        timestamp: flowsynmaxi2.tele.timestamp\n    }\n};\n\n    \nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3e2d6817ff3bc39d",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "<<=== Check feedback from MAXI2",
        "info": "",
        "x": 1060,
        "y": 840,
        "wires": []
    },
    {
        "id": "7766a60387e9cf9b",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "<<=== Check feedback from MAXI2",
        "info": "",
        "x": 1060,
        "y": 940,
        "wires": []
    },
    {
        "id": "ba82de181f611976",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"PumpAFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e2353216a56e46a",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"PumpBFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "675442c84929f9e4",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"BinaryPumpCFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "0ab703ac1c11b686",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"BinaryPumpDFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 500,
        "y": 280,
        "wires": []
    },
    {
        "id": "c437bb108847dd7f",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"Reactor1Temp\", \"value\": 0.5}}}",
        "info": "",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "ee629048f24482c3",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"Reactor2Temp\", \"value\": 0.5}}}",
        "info": "",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "aa3fd1c23a6910aa",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"Reactor3Temp\", \"value\": 0.5}}}",
        "info": "",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "6796692b6eb53418",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"Reactor4Temp\", \"value\": 0.5}}}",
        "info": "",
        "x": 470,
        "y": 460,
        "wires": []
    },
    {
        "id": "b576233f5405573e",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowSynValveA\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 520,
        "wires": []
    },
    {
        "id": "eda0c790fd2fc0e7",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowSynValveB\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 560,
        "wires": []
    },
    {
        "id": "ad21fd5561741818",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowBinaryValveC\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 600,
        "wires": []
    },
    {
        "id": "c9de0a485ed358b0",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowBinaryValveD\", \"value\": 0.5}}}",
        "info": "",
        "x": 480,
        "y": 640,
        "wires": []
    },
    {
        "id": "65506847373182f0",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowCWValve\", \"value\": true}}",
        "info": "",
        "x": 470,
        "y": 700,
        "wires": []
    },
    {
        "id": "12ea8fca19711702",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowSynInjValveA\", \"value\": true}}",
        "info": "",
        "x": 480,
        "y": 760,
        "wires": []
    },
    {
        "id": "f09dc3f3009fe0ea",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowSynInjValveB\", \"value\": true}}",
        "info": "",
        "x": 480,
        "y": 800,
        "wires": []
    },
    {
        "id": "53b128d9f5547c3d",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowBinaryInjValveC\", \"value\": true}}",
        "info": "",
        "x": 490,
        "y": 840,
        "wires": []
    },
    {
        "id": "973f1e09c0c89b87",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"FlowBinaryInjValveD\", \"value\": true}}",
        "info": "",
        "x": 490,
        "y": 880,
        "wires": []
    },
    {
        "id": "ba3cd568a3ff9f61",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"Heater\", \"value\": true}}",
        "info": "",
        "x": 450,
        "y": 940,
        "wires": []
    },
    {
        "id": "5149611d84dfb02c",
        "type": "json",
        "z": "ef63b0d123a76daa",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "5e4d284bebebb458"
            ]
        ]
    },
    {
        "id": "1863efa38ee6eaca",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nflowsynmaxi2.inUse = inUse;\n\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nmsg.payload = flowsynmaxi2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a659a1dde18a78fd",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "Check topic for distribution",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PumpAFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PumpBFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpCFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpDFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor1Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor2Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor3Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor4Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowCWValve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heater",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 18,
        "x": 840,
        "y": 580,
        "wires": [
            [
                "d509917a514f6217"
            ],
            [
                "90514bb28a576c43"
            ],
            [
                "8eb769946bdab110"
            ],
            [
                "c0a61c92ee6f7d33"
            ],
            [
                "7e3ec68cf038bd35"
            ],
            [
                "59d3b5c729eacfcf"
            ],
            [
                "4d639e01107f981d"
            ],
            [
                "f19a77419a063783"
            ],
            [
                "15856c868b88289a"
            ],
            [
                "e93f493ea476249c"
            ],
            [
                "d157e407dc7d9d4e"
            ],
            [
                "dc4b30643a6eadcb"
            ],
            [
                "bb71a74f3c954cdf"
            ],
            [
                "048a9dbdb6f15a47"
            ],
            [
                "32027fc0b76f4b57"
            ],
            [
                "85b342c058962bbc"
            ],
            [
                "43d9bfff5af1afba"
            ],
            [
                "06d958263bd9540e"
            ]
        ]
    },
    {
        "id": "d509917a514f6217",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute & Store Global variable",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nvar valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\n\nflowsynmaxi2.tele.settings.flowRatePumpA = result;\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 140,
        "wires": [
            [
                "f00a3df07a43d7fa"
            ]
        ]
    },
    {
        "id": "f00a3df07a43d7fa",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 0 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 140,
        "wires": [
            [
                "16c02fd1a975ca82"
            ]
        ]
    },
    {
        "id": "16c02fd1a975ca82",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 140,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "15856c868b88289a",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 500,
        "wires": [
            [
                "e46591addddc9f45"
            ],
            [
                "b9e736ada0209289"
            ]
        ]
    },
    {
        "id": "e46591addddc9f45",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 500,
        "wires": [
            [
                "1f5025ddc7248c57"
            ]
        ]
    },
    {
        "id": "b9e736ada0209289",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 540,
        "wires": [
            [
                "ad1be83485f2d9de"
            ]
        ]
    },
    {
        "id": "1f5025ddc7248c57",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 500,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "ad1be83485f2d9de",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 540,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "18bca6363aea8424",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "cmdToSend",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 700,
        "wires": [
            [
                "c5c9a30fa232ce06"
            ]
        ]
    },
    {
        "id": "c5c9a30fa232ce06",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 700,
        "wires": [
            [
                "5979b1c9e48b19d6"
            ]
        ]
    },
    {
        "id": "5979b1c9e48b19d6",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3040,
        "y": 700,
        "wires": [
            [
                "1731ee58a10dca7c",
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "1731ee58a10dca7c",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3230,
        "y": 700,
        "wires": [
            [],
            [],
            [
                "f93efb1e88f9815a"
            ]
        ]
    },
    {
        "id": "94fb6dc79d426082",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3230,
        "y": 780,
        "wires": [
            [],
            [],
            [
                "85c996e0e9c192b2"
            ]
        ]
    },
    {
        "id": "673b6459d8e5751e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 780,
        "wires": [
            [
                "94fb6dc79d426082",
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "a684de3d98154a8c",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 780,
        "wires": [
            [
                "673b6459d8e5751e"
            ]
        ]
    },
    {
        "id": "f93efb1e88f9815a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 780,
        "wires": [
            [
                "a684de3d98154a8c"
            ]
        ]
    },
    {
        "id": "85c996e0e9c192b2",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 860,
        "wires": [
            [
                "d4e284ace434684e"
            ]
        ]
    },
    {
        "id": "d4e284ace434684e",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 860,
        "wires": [
            [
                "cebfb9e98cf2a644"
            ]
        ]
    },
    {
        "id": "cebfb9e98cf2a644",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 860,
        "wires": [
            [
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "d25f4dabfb42b5b1",
        "type": "mqtt in",
        "z": "bc1076baf3559e95",
        "name": "",
        "topic": "subflow/flowsynmaxi2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "36cb170d62e0d457"
            ]
        ]
    },
    {
        "id": "36cb170d62e0d457",
        "type": "json",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "707a3c166051bdda"
            ]
        ]
    },
    {
        "id": "106fe2fbbfe56877",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload.settings.subDevice",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PumpAFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PumpBFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpCFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpDFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor1Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor2Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor3Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor4Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowCWValve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heater",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 19,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ]
        ]
    },
    {
        "id": "9cf9c8db331c6bd3",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Convert Value",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp.settings.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp.settings.subDevice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 160,
        "wires": [
            [
                "a659a1dde18a78fd"
            ]
        ]
    },
    {
        "id": "939293b561c978aa",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp.settings.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp.settings.subDevice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "a659a1dde18a78fd"
            ]
        ]
    },
    {
        "id": "90514bb28a576c43",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute & Store Global variable",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nvar valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\n\nflowsynmaxi2.tele.settings.flowRatePumpB = result;\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "51c4b155c16f6a4a"
            ]
        ]
    },
    {
        "id": "51c4b155c16f6a4a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 1 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 180,
        "wires": [
            [
                "d200d8b89ea883f3"
            ]
        ]
    },
    {
        "id": "d200d8b89ea883f3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 180,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "4fc87f58583c214c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 2 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 220,
        "wires": [
            [
                "9211d8444fdf5a06"
            ]
        ]
    },
    {
        "id": "6bc5630cf5fa6728",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 3 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 260,
        "wires": [
            [
                "68990e390edc9d1a"
            ]
        ]
    },
    {
        "id": "9211d8444fdf5a06",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 220,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "68990e390edc9d1a",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 260,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "8eb769946bdab110",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute & Store Global variable",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nvar valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\n\nflowsynmaxi2.tele.settings.flowRatePumpC = result;\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 220,
        "wires": [
            [
                "4fc87f58583c214c"
            ]
        ]
    },
    {
        "id": "c0a61c92ee6f7d33",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute & Store Global variable",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nvar valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\n\nflowsynmaxi2.tele.settings.flowRatePumpD = result;\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 260,
        "wires": [
            [
                "6bc5630cf5fa6728"
            ]
        ]
    },
    {
        "id": "3b561bcb379322db",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 1 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.tempReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 320,
        "wires": [
            [
                "bfd740680db5df51"
            ]
        ]
    },
    {
        "id": "24f40de6add41f7d",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 2 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.tempReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 360,
        "wires": [
            [
                "4b9eabf8cc022014"
            ]
        ]
    },
    {
        "id": "a40abfcb34c4dbe6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 3 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.tempReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 400,
        "wires": [
            [
                "5ca8a2f96650a58e"
            ]
        ]
    },
    {
        "id": "b24ab6b5edd2a45f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 4 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.tempReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 440,
        "wires": [
            [
                "39e549305c4cf318"
            ]
        ]
    },
    {
        "id": "9a926ab00cf1bf1f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Set Temps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*& @1 @2 @3 @4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@1",
                "fromt": "str",
                "to": "flowsynmaxi2.tele.settings.tempReactor1-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@2",
                "fromt": "str",
                "to": "flowsynmaxi2.tele.settings.tempReactor2-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@3",
                "fromt": "str",
                "to": "flowsynmaxi2.tele.settings.tempReactor3-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@4",
                "fromt": "str",
                "to": "flowsynmaxi2.tele.settings.tempReactor4-hex",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 400,
        "wires": [
            [
                "7950e82a1c19201e"
            ]
        ]
    },
    {
        "id": "7950e82a1c19201e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 400,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "bfd740680db5df51",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor1-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 320,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "4b9eabf8cc022014",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor2-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 360,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "5ca8a2f96650a58e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor3-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 400,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "39e549305c4cf318",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor4-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 440,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "eb0612e620ac4af9",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 580,
        "wires": [
            [
                "008f1990e2609ce7"
            ]
        ]
    },
    {
        "id": "e93f493ea476249c",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 580,
        "wires": [
            [
                "eb0612e620ac4af9"
            ],
            [
                "35ebf0ba825dab7a"
            ]
        ]
    },
    {
        "id": "35ebf0ba825dab7a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 620,
        "wires": [
            [
                "b7207dc2e80ff5d5"
            ]
        ]
    },
    {
        "id": "008f1990e2609ce7",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 580,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "b7207dc2e80ff5d5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 620,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "42409cc4f2f37d37",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenC",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 660,
        "wires": [
            [
                "8e8fec2d3b189c1c"
            ]
        ]
    },
    {
        "id": "d157e407dc7d9d4e",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 660,
        "wires": [
            [
                "42409cc4f2f37d37"
            ],
            [
                "70a7f4889d280382"
            ]
        ]
    },
    {
        "id": "70a7f4889d280382",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenC",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 700,
        "wires": [
            [
                "aee078f2e1cd652c"
            ]
        ]
    },
    {
        "id": "e50de3b4eb4768f3",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 740,
        "wires": [
            [
                "acfe84c32d5c2ca4"
            ]
        ]
    },
    {
        "id": "dc4b30643a6eadcb",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 740,
        "wires": [
            [
                "e50de3b4eb4768f3"
            ],
            [
                "3e571ae0c7375828"
            ]
        ]
    },
    {
        "id": "3e571ae0c7375828",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 780,
        "wires": [
            [
                "c262fee6646430e2"
            ]
        ]
    },
    {
        "id": "b6c8e5a5cbaf8f89",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 8",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenCW",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 840,
        "wires": [
            [
                "ac0201c4d4d3c6a3"
            ]
        ]
    },
    {
        "id": "bb71a74f3c954cdf",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckCWValveSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1560,
        "y": 840,
        "wires": [
            [
                "b6c8e5a5cbaf8f89"
            ],
            [
                "0b3789096f796477"
            ]
        ]
    },
    {
        "id": "0b3789096f796477",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 9 \\r\\n",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.valveOpenCW",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 880,
        "wires": [
            [
                "69d8ef003732d9d1"
            ]
        ]
    },
    {
        "id": "76439ba9dc34e980",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 940,
        "wires": [
            [
                "05c56feec7baf02e"
            ]
        ]
    },
    {
        "id": "048a9dbdb6f15a47",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynInjValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 940,
        "wires": [
            [
                "76439ba9dc34e980"
            ],
            [
                "876db8675329024f"
            ]
        ]
    },
    {
        "id": "876db8675329024f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 980,
        "wires": [
            [
                "f18edf56642f0e90"
            ]
        ]
    },
    {
        "id": "ee753b4c3a7e427c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1020,
        "wires": [
            [
                "be69bb79ef0f32d5"
            ]
        ]
    },
    {
        "id": "32027fc0b76f4b57",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynInjValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 1020,
        "wires": [
            [
                "ee753b4c3a7e427c"
            ],
            [
                "d47d0892ee488835"
            ]
        ]
    },
    {
        "id": "d47d0892ee488835",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1060,
        "wires": [
            [
                "db49c1964b345ed5"
            ]
        ]
    },
    {
        "id": "e6173d06e6a28825",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenC",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1100,
        "wires": [
            [
                "d97c471052328e22"
            ]
        ]
    },
    {
        "id": "85b342c058962bbc",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryInjValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 1100,
        "wires": [
            [
                "e6173d06e6a28825"
            ],
            [
                "92b2832a908b519f"
            ]
        ]
    },
    {
        "id": "92b2832a908b519f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenC",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1140,
        "wires": [
            [
                "88854cb2eafc705f"
            ]
        ]
    },
    {
        "id": "89d2da7c6e45575d",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1180,
        "wires": [
            [
                "d35a24f9af7505a7"
            ]
        ]
    },
    {
        "id": "43d9bfff5af1afba",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryInjValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 1180,
        "wires": [
            [
                "89d2da7c6e45575d"
            ],
            [
                "69894063cf2bbb17"
            ]
        ]
    },
    {
        "id": "69894063cf2bbb17",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.injValveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1220,
        "wires": [
            [
                "d1d49b1fc96d3adc"
            ]
        ]
    },
    {
        "id": "a6d14d6d0e0da27a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.heaterON",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1280,
        "wires": [
            [
                "2ff5c957ba4856e3"
            ]
        ]
    },
    {
        "id": "06d958263bd9540e",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckHeaterSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 1280,
        "wires": [
            [
                "a6d14d6d0e0da27a"
            ],
            [
                "5d05788c040d1667"
            ]
        ]
    },
    {
        "id": "5d05788c040d1667",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.settings.heaterON",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1320,
        "wires": [
            [
                "bbc07fa2746d0824"
            ]
        ]
    },
    {
        "id": "8e8fec2d3b189c1c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 660,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "aee078f2e1cd652c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 700,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "acfe84c32d5c2ca4",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 740,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "c262fee6646430e2",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 780,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "ac0201c4d4d3c6a3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 840,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "69d8ef003732d9d1",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 880,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "05c56feec7baf02e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 940,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "f18edf56642f0e90",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 980,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "be69bb79ef0f32d5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1020,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "db49c1964b345ed5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1060,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d97c471052328e22",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1100,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "88854cb2eafc705f",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1140,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d35a24f9af7505a7",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1180,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d1d49b1fc96d3adc",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1220,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "2ff5c957ba4856e3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1280,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "bbc07fa2746d0824",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 1320,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "9f86ab9d06e188da",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Generate Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "response",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3260,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "be058b0c9c4007a6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.pressSystem",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "e598e5b3cfbc1aa6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.pressFlowSynA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "6bd59c219ee80631",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.pressFlowSynB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "429107892b4609b7",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.pressBinaryC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "c58c737cf0d9e1ec",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.pressBinaryD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "bd28e25cf23b069c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.tempReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "be8ca4f291cf5963",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.tempReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "34d7e17cdc1105ee",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.tempReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "4c7b76e658654e07",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.tempReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "183def7ccb2dcbf3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Extract Temp & Pressure",
        "func": "// < P Pa Pb Pc Pd T1 T2 T3 T4 >\nvar r = ' ';\n\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar systemPressure = output[1];\nvar flowSynAPressure = output[2];\nvar flowSynBPressure = output[3];\nvar flowBianryCPressure = output[4];\nvar flowBinaryDPressure = output[5];\nvar reactor1Temperature = output[6];\nvar reactor2Temperature = output[7];\nvar reactor3Temperature = output[8];\nvar reactor4Temperature = output[9];\n\nvar msg1 = { payload: parseFloat(systemPressure),      topic: \"System Pressure\"};\nvar msg2 = { payload: parseFloat(flowSynAPressure),    topic: \"Syn Flow A Pressure\"};\nvar msg3 = { payload: parseFloat(flowSynBPressure),    topic: \"Syn Flow B Pressure\"};\nvar msg4 = { payload: parseFloat(flowBianryCPressure), topic: \"Binary C Pressure\"};\nvar msg5 = { payload: parseFloat(flowBinaryDPressure), topic: \"Binary D Pressure\"};\nvar msg6 = { payload: parseFloat(reactor1Temperature), topic: \"Reactor 1 Temperature\"};\nvar msg7 = { payload: parseFloat(reactor2Temperature), topic: \"Reactor 2 Temperature\"};\nvar msg8 = { payload: parseFloat(reactor3Temperature), topic: \"Reactor 3 Temperature\"};\nvar msg9 = { payload: parseFloat(reactor4Temperature), topic: \"Reactor 4 Temperature\"};\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9]];",
        "outputs": 9,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1640,
        "wires": [
            [
                "be058b0c9c4007a6"
            ],
            [
                "e598e5b3cfbc1aa6"
            ],
            [
                "6bd59c219ee80631"
            ],
            [
                "429107892b4609b7"
            ],
            [
                "c58c737cf0d9e1ec"
            ],
            [
                "bd28e25cf23b069c"
            ],
            [
                "be8ca4f291cf5963"
            ],
            [
                "34d7e17cdc1105ee"
            ],
            [
                "4c7b76e658654e07"
            ]
        ]
    },
    {
        "id": "6712c5295a4abbac",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1600,
        "wires": [
            [
                "c778b786cb23ed60"
            ]
        ]
    },
    {
        "id": "bb2fac7ffc7d23ba",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1640,
        "wires": [
            [
                "183def7ccb2dcbf3"
            ]
        ]
    },
    {
        "id": "e0bc43ab7492de99",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "connect failed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c778b786cb23ed60",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 440,
        "y": 1640,
        "wires": [
            [
                "bb2fac7ffc7d23ba",
                "e0bc43ab7492de99"
            ]
        ]
    },
    {
        "id": "dd94318c446e2e7c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(\"*Q 0\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1600,
        "wires": [
            [
                "6712c5295a4abbac"
            ]
        ]
    },
    {
        "id": "06d6edcfb6f2e458",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerReadingsTempPress",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 0",
        "payloadType": "str",
        "x": 180,
        "y": 1560,
        "wires": [
            [
                "d125886b71b4234d"
            ]
        ]
    },
    {
        "id": "6983099e82650470",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 480,
        "y": 2200,
        "wires": [
            [
                "d04bf05bf1552a63"
            ]
        ]
    },
    {
        "id": "ec858eccb625edae",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerReadingsValvesRatesChillers",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 1",
        "payloadType": "str",
        "x": 190,
        "y": 2120,
        "wires": [
            [
                "6a8ddb80aeaa8f6a"
            ]
        ]
    },
    {
        "id": "d04bf05bf1552a63",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 2200,
        "wires": [
            [
                "7b6a099305579d0c"
            ]
        ]
    },
    {
        "id": "f3cddb2d71130cb0",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(\"*Q 1\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2160,
        "wires": [
            [
                "5b1a54a9eaa53af0"
            ]
        ]
    },
    {
        "id": "5b1a54a9eaa53af0",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 2160,
        "wires": [
            [
                "6983099e82650470"
            ]
        ]
    },
    {
        "id": "7b6a099305579d0c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ExtractValvesFlows",
        "func": "// * Vs Vi F1 F2 F3 F4 C *\nvar r = ' ';\n\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar Vs = output[1];\nvar Vi = output[2];\nvar F1 = output[3];\nvar F2 = output[4];\nvar F3 = output[5];\nvar F4 = output[6];\nvar C  = output[7];\n\nvar msg1 = {};\nif ((Vs & 0x01) == 0x01) {\n    msg1 = {payload: true}    \n} else {\n    msg1 = {payload: false} \n}\nvar msg2 = {};\nif ((Vs & 0x02) == 0x02) {\n    msg2 = {payload: true}    \n} else {\n    msg2 = {payload: false} \n}\nvar msg3 = {};\nif ((Vs & 0x04) == 0x04) {\n    msg3 = {payload: true}    \n} else {\n    msg3 = {payload: false} \n}\nvar msg4 = {};\nif ((Vs & 0x08) == 0x08) {\n    msg4 = {payload: true}    \n} else {\n    msg4 = {payload: false} \n}\nvar msg5 = {};\nif ((Vs & 0x10) == 0x10) {\n    msg5 = {payload: true}    \n} else {\n    msg5 = {payload: false} \n}\nvar msg6 = {};\nif ((Vi & 0x01) == 0x01) {\n    msg6 = {payload: true}    \n} else {\n    msg6 = {payload: false} \n}\nvar msg7 = {};\nif ((Vi & 0x02) == 0x02) {\n    msg7 = {payload: true}    \n} else {\n    msg7 = {payload: false} \n}\nvar msg8 = {};\nif ((Vi & 0x04) == 0x04) {\n    msg8 = {payload: true}    \n} else {\n    msg8 = {payload: false} \n}\nvar msg9 = {};\nif ((Vi & 0x08) == 0x08) {\n    msg9 = {payload: true}    \n} else {\n    msg9 = {payload: false} \n}\nvar msg10 = {payload: parseFloat(F1), topic: \"Pump A Flow Rate\"};\nvar msg11 = {payload: parseFloat(F2), topic: \"Pump B Flow Rate\"};\nvar msg12 = {payload: parseFloat(F3), topic: \"Pump C Flow Rate\"};\nvar msg13 = {payload: parseFloat(F4), topic: \"Pump D Flow Rate\"};\nvar msg14 = {};\nif (C == '1') {\n    msg14 = {payload: true}    \n} else {\n    msg14 = {payload: false} \n}\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9], [msg10],\n       [msg11], [msg12], [msg13], [msg14]];",
        "outputs": 14,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2200,
        "wires": [
            [
                "54d163fa25d30758"
            ],
            [
                "46fbf74f6d0a4d58"
            ],
            [
                "119a15f4281f386b"
            ],
            [
                "e6ea0f428a7212ac"
            ],
            [
                "7eb333b77173e0cb"
            ],
            [
                "1deb412d7ad763b5"
            ],
            [
                "b00b8f99d1021bb6"
            ],
            [
                "b175945d78ece3fb"
            ],
            [
                "be70597374b39bd6"
            ],
            [
                "0efe25b60d01f7b2"
            ],
            [
                "8284f21d94d6e971"
            ],
            [
                "131ba306a43f6d7a"
            ],
            [
                "e8a35164cf76fd74"
            ],
            [
                "0f99fb6864016ce9"
            ]
        ],
        "outputLabels": [
            "Flow Syn Valve A",
            "Flow Syn Valve B",
            "Binary Valve C",
            "Binary Valve D",
            "C/W Valve",
            "Flow Syn Inj Valve A",
            "Flow Syn Inj Valve B",
            "Binary Inj Valve C",
            "Binary Inj Valve D",
            "Pump A Flow Rate",
            "Pump B Flow Rate",
            "Pump C Flow Rate",
            "Pump D Flow Rate",
            "Chiller Detected"
        ]
    },
    {
        "id": "54d163fa25d30758",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "46fbf74f6d0a4d58",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "119a15f4281f386b",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e6ea0f428a7212ac",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb333b77173e0cb",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveOpenCW",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "0efe25b60d01f7b2",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.flowRatePumpA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "8284f21d94d6e971",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.flowRatePumpB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "131ba306a43f6d7a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.flowRatePumpC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a35164cf76fd74",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.flowRatePumpD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "1deb412d7ad763b5",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveInjOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "b00b8f99d1021bb6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveInjOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "b175945d78ece3fb",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveInjOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "be70597374b39bd6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.valveInjOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "0f99fb6864016ce9",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.tele.state.chillerDetected",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "1bac10e36db908aa",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "Status lights of valves is not needed anymore becuase the Set valves option gets updated if a chnage is made manually on the reactor",
        "info": "",
        "x": 1570,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f8be3d5e81ced4bc",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "INIT: Variables at startup",
        "info": "",
        "x": 170,
        "y": 20,
        "wires": []
    },
    {
        "id": "1e0b7c3200055b7e",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "cf72d6d263c5b06c"
            ]
        ]
    },
    {
        "id": "cf72d6d263c5b06c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Set Global Init values (FlowSynMaxi2)",
        "func": "var initVariable00 = 0.0;\nvar initVariable0 = 0;\nvar initBooleanFalse = false;\n\nvar flowsynmaxi2 = {\n    deviceName: 'flowsynmaxi2',\n    deviceType: 'PumpValveHeater',\n    inUse: false,\n    tele: {\n        settings: {\n            flowRatePumpA: initVariable00,\n            flowRatePumpB: initVariable00,\n            flowRatePumpC: initVariable00,\n            flowRatePumpD: initVariable00,\n\n            tempReactor1: initVariable00,\n            tempReactor2: initVariable00,\n            tempReactor3: initVariable00,\n            tempReactor4: initVariable00,\n\n            valveOpenA: initBooleanFalse,\n            valveOpenB: initBooleanFalse,\n            valveOpenC: initBooleanFalse,\n            valveOpenD: initBooleanFalse,\n\n            valveOpenCW: initBooleanFalse,\n\n            injValveOpenA: initBooleanFalse,\n            injValveOpenB: initBooleanFalse,\n            injValveOpenC: initBooleanFalse,\n            injValveOpenD: initBooleanFalse,\n\n            heaterON: initBooleanFalse\n        },\n        state: {\n            pressSystem: initVariable00,\n            pressFlowSynA: initVariable00,\n            pressFlowSynB: initVariable00,\n            pressBinaryC: initVariable00,\n            pressBinaryD: initVariable00,\n\n            tempReactor1: initVariable00,\n            tempReactor2: initVariable00,\n            tempReactor3: initVariable00,\n            tempReactor4: initVariable00,\n\n            valveOpenA: initBooleanFalse,\n            valveOpenB: initBooleanFalse,\n            valveOpenC: initBooleanFalse,\n            valveOpenD: initBooleanFalse,\n\n            valveOpenCW: initBooleanFalse,\n\n            valveInjOpenA: initBooleanFalse,\n            valveInjOpenB: initBooleanFalse,\n            valveInjOpenC: initBooleanFalse,\n            valveInjOpenD: initBooleanFalse,\n\n            flowRatePumpA: initVariable00,\n            flowRatePumpB: initVariable00,\n            flowRatePumpC: initVariable00,\n            flowRatePumpD: initVariable00,\n\n            chillerDetected: initBooleanFalse\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set('flowsynmaxi2', flowsynmaxi2);\n\nmsg.payload = flowsynmaxi2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d125886b71b4234d",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "inUse?",
        "property": "flowsynmaxi2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1560,
        "wires": [
            [
                "dd94318c446e2e7c"
            ]
        ]
    },
    {
        "id": "7e3ec68cf038bd35",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "3b561bcb379322db"
            ]
        ]
    },
    {
        "id": "59d3b5c729eacfcf",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "24f40de6add41f7d"
            ]
        ]
    },
    {
        "id": "4d639e01107f981d",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "a40abfcb34c4dbe6"
            ]
        ]
    },
    {
        "id": "f19a77419a063783",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 440,
        "wires": [
            [
                "b24ab6b5edd2a45f"
            ]
        ]
    },
    {
        "id": "305c7a1a6b37f12e",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerFlowSynMaxi2Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2660,
        "wires": [
            [
                "3e0b50a7515b1337"
            ]
        ]
    },
    {
        "id": "3e0b50a7515b1337",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "inUse?",
        "property": "flowsynmaxi2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 2660,
        "wires": [
            [
                "949917a812c5d563"
            ]
        ]
    },
    {
        "id": "26447723398dbb0a",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "Periodic Read Readings",
        "info": "",
        "x": 150,
        "y": 2620,
        "wires": []
    },
    {
        "id": "dc37f87f9db28957",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Build result package",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\");\n\nvar newMsg = {};\nvar timestamp = msg.myepoch;\n\nnewMsg = {\n    payload: {\n        deviceName: flowsynmaxi2.deviceName,\n        deviceType: flowsynmaxi2.deviceType,\n        settings: flowsynmaxi2.tele.settings,\n        state: flowsynmaxi2.tele.state,\n        timestamp: timestamp\n    }\n};\n\nflowsynmaxi2.tele.timestamp = timestamp;\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2700,
        "wires": [
            [
                "7c72c44e611ff792"
            ]
        ]
    },
    {
        "id": "7c72c44e611ff792",
        "type": "json",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 850,
        "y": 2700,
        "wires": [
            [
                "e33baa909ff20958"
            ]
        ]
    },
    {
        "id": "e33baa909ff20958",
        "type": "mqtt out",
        "z": "bc1076baf3559e95",
        "name": "",
        "topic": "subflow/flowsynmaxi2/tele",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1050,
        "y": 2700,
        "wires": []
    },
    {
        "id": "cdb4e161511ea10b",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "Send & 2 x Retries",
        "info": "",
        "x": 2750,
        "y": 660,
        "wires": []
    },
    {
        "id": "6a8ddb80aeaa8f6a",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "inUse?",
        "property": "flowsynmaxi2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 2120,
        "wires": [
            [
                "f3cddb2d71130cb0"
            ]
        ]
    },
    {
        "id": "0de8ce259df3d311",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\",  \"inUse\":true, \"settings\":{\"command\":\"SET\", \"subDevice\":\"PumpAFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 960,
        "y": 60,
        "wires": []
    },
    {
        "id": "949917a812c5d563",
        "type": "simpletime",
        "z": "bc1076baf3559e95",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 610,
        "y": 2660,
        "wires": [
            [
                "dc37f87f9db28957"
            ]
        ]
    },
    {
        "id": "707a3c166051bdda",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "flowsynmaxi2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "69fb0277b9ef442c",
                "106fe2fbbfe56877"
            ],
            []
        ]
    },
    {
        "id": "69fb0277b9ef442c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4af4d2e17d39a262",
        "type": "mqtt in",
        "z": "fadba47737eca3c5",
        "name": "",
        "topic": "subflow/reactIR702L1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "382b4b8f7cd0bce4"
            ]
        ]
    },
    {
        "id": "3d361ceb3f893235",
        "type": "mqtt out",
        "z": "fadba47737eca3c5",
        "name": "",
        "topic": "subflow/reactIR702L1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 400,
        "y": 140,
        "wires": []
    },
    {
        "id": "9c0d8a74d86339c8",
        "type": "function",
        "z": "fadba47737eca3c5",
        "name": "Set InUse Flag",
        "func": "var reactIR702L1 = global.get(\"reactIR702L1\") || {};\n\nreactIR702L1.inUse = false;\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nmsg.payload = reactIR702L1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "3417a603ca42533b",
        "type": "inject",
        "z": "fadba47737eca3c5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 90,
        "y": 20,
        "wires": [
            [
                "9c0d8a74d86339c8"
            ]
        ]
    },
    {
        "id": "382b4b8f7cd0bce4",
        "type": "json",
        "z": "fadba47737eca3c5",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "6098ac14dfb7e66f"
            ]
        ]
    },
    {
        "id": "f2636ec4404f3497",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "OUTPUT",
        "info": "",
        "x": 800,
        "y": 60,
        "wires": []
    },
    {
        "id": "dcc9123075ca095c",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "{\"payload\": {\"deviceName\": \"reactIR702L1\", \"deviceType\": \"IR\", settings:{}, state: {\"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 1260,
        "y": 100,
        "wires": []
    },
    {
        "id": "6098ac14dfb7e66f",
        "type": "switch",
        "z": "fadba47737eca3c5",
        "name": "Array / otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1d1d6ccf0772de25",
        "type": "json",
        "z": "fadba47737eca3c5",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "3d361ceb3f893235"
            ]
        ]
    },
    {
        "id": "6c1ec1abb8134dab",
        "type": "switch",
        "z": "fadba47737eca3c5",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reactIR702L1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 200,
        "wires": [
            [
                "416887585496505f"
            ],
            []
        ]
    },
    {
        "id": "416887585496505f",
        "type": "function",
        "z": "fadba47737eca3c5",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar reactIR702L1 = global.get(\"reactIR702L1\") || {};\n\nreactIR702L1.inUse = inUse;\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nmsg.payload = reactIR702L1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "94fcaa498c1f109e",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "514d9f8797599d93",
        "type": "json",
        "z": "fadba47737eca3c5",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 200,
        "wires": [
            [
                "6c1ec1abb8134dab"
            ]
        ]
    },
    {
        "id": "7770570edbf6df8b",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "{\"payload\":{\"deviceName\":\"reactIR702L1\", \"inUse\":true, \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "ffca4f23913f62d6",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Init reactIR702L1 (Temp., State & Clear InUse)",
        "func": "var reactIR702L1 = {\n    deviceName: 'reactIR702L1',\n    deviceType: 'IR',\n\n    inUse : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n        },\n        state: {\n            data: []\n        },\n        timestamp: ''\n    }\n};\n\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nmsg.payload = reactIR702L1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "314222b24e93604d",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "dfb0e16e6899e9d3",
        "type": "inject",
        "z": "fc608604922b7267",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "ffca4f23913f62d6"
            ]
        ]
    },
    {
        "id": "f232b840397fa915",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "554fe8b91ceea7f6",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "Periodic Read RAW Values",
        "info": "",
        "x": 150,
        "y": 380,
        "wires": []
    },
    {
        "id": "b47de409faf4c396",
        "type": "inject",
        "z": "fc608604922b7267",
        "name": "TriggerReactIR702L1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "af34727910bcfb83"
            ]
        ]
    },
    {
        "id": "af34727910bcfb83",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "inUse?",
        "property": "reactIR702L1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "29a7223a71b5f9b4"
            ]
        ]
    },
    {
        "id": "7623cc801b2754ba",
        "type": "mqtt in",
        "z": "fc608604922b7267",
        "name": "",
        "topic": "subflow/reactIR702L1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "62e746c74626ae76"
            ]
        ]
    },
    {
        "id": "d05e77efd684aa55",
        "type": "mqtt out",
        "z": "fc608604922b7267",
        "name": "",
        "topic": "subflow/reactIR702L1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1870,
        "y": 280,
        "wires": []
    },
    {
        "id": "1bda8f923f4efebe",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Read RAW data [ns=2;s=Local.iCIR.Probe1.SpectraTreated]",
        "func": "var newMsg = {};\n\nnewMsg.payload = \"ns=2;s=Local.iCIR.Probe1.SpectraTreated\";\nnewMsg.topic = \"ns=2;s=Local.iCIR.Probe1.SpectraTreated\";\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 180,
        "wires": [
            [
                "21c59bea644bdf2c"
            ]
        ]
    },
    {
        "id": "eb3680040fb1bbbe",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "READ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "1bda8f923f4efebe"
            ],
            []
        ]
    },
    {
        "id": "29a7223a71b5f9b4",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Read RAW data [ns=2;s=Local.iCIR.Probe1.SpectraTreated]",
        "func": "var newMsg = {};\n\nnewMsg.payload = \"ns=2;s=Local.iCIR.Probe1.SpectraTreated\";\nnewMsg.topic = \"ns=2;s=Local.iCIR.Probe1.SpectraTreated\";\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "312c2782008f0729"
            ]
        ]
    },
    {
        "id": "e587e3195d5f29b4",
        "type": "json",
        "z": "fc608604922b7267",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1810,
        "y": 240,
        "wires": [
            [
                "d05e77efd684aa55"
            ]
        ]
    },
    {
        "id": "abbc4709f6a7d7ab",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Convert JSON Object -> Array",
        "func": "var resultObject = msg.payload;\nvar timestamp = msg.myepoch;\n\nvar reactIR702L1 = global.get(\"reactIR702L1\") || {};\n\nvar newMsg = {};\n\nconst resultArray = Object.values(resultObject);\n\nreactIR702L1.tele.state.data = resultArray;\nreactIR702L1.tele.timestamp = timestamp;\n\nnewMsg = {\n    payload: {\n        deviceName: reactIR702L1.deviceName,\n        deviceType: reactIR702L1.deviceType,\n        settings: {},\n        state: {\n            data: resultArray\n        },\n        timestamp: timestamp\n    }\n}\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 240,
        "wires": [
            [
                "e587e3195d5f29b4"
            ]
        ]
    },
    {
        "id": "f3ecbb4dc9efede2",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "OUTPUT",
        "info": "",
        "x": 780,
        "y": 100,
        "wires": []
    },
    {
        "id": "2b6231fcef4f5e26",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "{\"payload\": {\"deviceName\": \"reactIR702L1\", \"deviceType\": \"IR\", settings:{}, state: {\"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "b4991e429f32edaf",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "Empty / Otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 180,
        "wires": [
            [],
            [
                "fd8e12b0e3745dd4"
            ]
        ]
    },
    {
        "id": "fd8e12b0e3745dd4",
        "type": "simpletime",
        "z": "fc608604922b7267",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 1350,
        "y": 240,
        "wires": [
            [
                "abbc4709f6a7d7ab"
            ]
        ]
    },
    {
        "id": "21c59bea644bdf2c",
        "type": "OpcUa-Client",
        "z": "fc608604922b7267",
        "endpoint": "30f895097d6aac5b",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "b4991e429f32edaf"
            ],
            []
        ]
    },
    {
        "id": "312c2782008f0729",
        "type": "OpcUa-Client",
        "z": "fc608604922b7267",
        "endpoint": "30f895097d6aac5b",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "5",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "",
        "x": 1080,
        "y": 420,
        "wires": [
            [
                "b4991e429f32edaf"
            ],
            []
        ]
    },
    {
        "id": "ce4ba071edcc9edd",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "reactIR702L1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 260,
        "wires": [
            [
                "d55fa2e58d2c7194",
                "466b1b77c5a2b4aa"
            ],
            []
        ]
    },
    {
        "id": "d55fa2e58d2c7194",
        "type": "change",
        "z": "fc608604922b7267",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "reactIR702L1.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "dfb6849a6dc6a654",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 100,
        "wires": []
    },
    {
        "id": "62e746c74626ae76",
        "type": "json",
        "z": "fc608604922b7267",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "ce4ba071edcc9edd"
            ]
        ]
    },
    {
        "id": "466b1b77c5a2b4aa",
        "type": "change",
        "z": "fc608604922b7267",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 240,
        "wires": [
            [
                "eb3680040fb1bbbe"
            ]
        ]
    },
    {
        "id": "ea29186a19bc0f1d",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "{\"payload\":{\"deviceName\":\"reactIR702L1\", \"inUse\":true, \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "9da3c186fb1c2f43",
        "type": "inject",
        "z": "17061720ba0331b7",
        "name": "TriggerHotChip2TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "5230384dcf385667"
            ]
        ]
    },
    {
        "id": "dca8abbcec8c7008",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 800,
        "wires": [
            [
                "cafd6ef609e09e1e",
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "028aa30d829799b8",
        "type": "tcp request",
        "z": "17061720ba0331b7",
        "name": "HotChip2TCPIPReq",
        "server": "192.168.1.214",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 660,
        "y": 880,
        "wires": [
            [
                "3e24aa1e823b2a06"
            ]
        ]
    },
    {
        "id": "cafd6ef609e09e1e",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 840,
        "wires": [
            [
                "028aa30d829799b8"
            ]
        ]
    },
    {
        "id": "ec5fdcd5f369d69d",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Init HotChip2 (Temp., State & InUse)",
        "func": "var hotchip2 = {\n    deviceName: 'hotchip2',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotchip2\", hotchip2);\n\nmsg.payload = hotchip2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2c2cc516c08b36",
        "type": "inject",
        "z": "17061720ba0331b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "ec5fdcd5f369d69d"
            ]
        ]
    },
    {
        "id": "cceead96cb7ec02b",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "a395c2413cefc1a6",
        "type": "mqtt in",
        "z": "17061720ba0331b7",
        "name": "",
        "topic": "subflow/hotchip2/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "fe73c50f908c2262"
            ]
        ]
    },
    {
        "id": "edf3dc8ee89c058a",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "805419d0239b14f5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotchip2.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "3055e667257cf31b",
        "type": "tcp request",
        "z": "17061720ba0331b7",
        "name": "HotChip2TCPIPCommand",
        "server": "192.168.1.214",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "810d184ebc13193a",
                "3e24aa1e823b2a06"
            ]
        ]
    },
    {
        "id": "9e6d23b85e367ba6",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "3055e667257cf31b"
            ]
        ]
    },
    {
        "id": "810d184ebc13193a",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "be5d1d5e6be6aa30",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "9e6d23b85e367ba6",
                "eb1555eb5bab060e"
            ]
        ]
    },
    {
        "id": "4cbf4adeac8e5322",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "9e6d23b85e367ba6",
                "fad63a8d2a608c79"
            ]
        ]
    },
    {
        "id": "135b8b59fd589dd6",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "4cbf4adeac8e5322"
            ],
            [
                "be5d1d5e6be6aa30"
            ],
            [
                "dca8abbcec8c7008",
                "0ecb2499b1b9a3f2"
            ],
            [
                "805419d0239b14f5",
                "0f5f1de8686b591d",
                "17576dbd73544cd5"
            ]
        ]
    },
    {
        "id": "5230384dcf385667",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "inUse? Yes / No",
        "property": "hotchip2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "dca8abbcec8c7008"
            ],
            [
                "329d8aa0e3d25ac4"
            ]
        ]
    },
    {
        "id": "138c4ba58c6fa5af",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "401d60722a03b559",
        "type": "mqtt out",
        "z": "17061720ba0331b7",
        "name": "",
        "topic": "subflow/hotchip2/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "3e24aa1e823b2a06",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "d8a962a03f968368"
            ]
        ]
    },
    {
        "id": "0ae694a3e26312b7",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "96455dc9a24e3124",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "fe73c50f908c2262",
        "type": "json",
        "z": "17061720ba0331b7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "d48a48e4f2ab85b7"
            ]
        ]
    },
    {
        "id": "ab62f7d4afdd50f9",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "8caffbf7f1a0ce64",
                "eb1555eb5bab060e"
            ],
            [
                "04db0f06540a8c06"
            ]
        ]
    },
    {
        "id": "8caffbf7f1a0ce64",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "b4d5c4a00b43a754",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "9b4c7829c3af9cdb",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "393408e9b51ddf9f",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "OUTPUT",
        "info": "",
        "x": 1180,
        "y": 120,
        "wires": []
    },
    {
        "id": "4441c8147f286566",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "12964da3946ae83e",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip2 = global.get(\"hotchip2\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip2.tele.cmnd = 'POLL';\nhotchip2.tele.state.temp = temperature;\nhotchip2.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip2.deviceName,\n        deviceType: hotchip2.deviceType,\n        cmnd: hotchip2.tele.cmnd,\n        settings: {\n            temp: hotchip2.tele.settings.temp\n        },\n        state: {\n            temp: hotchip2.tele.state.temp,\n            state: hotchip2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotchip2\", hotchip2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip2.tele.settings.temp + ' [Temp. Read: ' + hotchip2.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "a620620b25aa5c90"
            ],
            []
        ]
    },
    {
        "id": "a620620b25aa5c90",
        "type": "json",
        "z": "17061720ba0331b7",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1650,
        "y": 920,
        "wires": [
            [
                "401d60722a03b559"
            ]
        ]
    },
    {
        "id": "e1dc4da98ed1ac1f",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "c61a18f0e44c6b33",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "bfa3f5f5c56bc672",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "4a58499a6d55a2f0"
            ],
            [
                "a04733dcf3cbbee5"
            ]
        ]
    },
    {
        "id": "4a58499a6d55a2f0",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a04733dcf3cbbee5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fad63a8d2a608c79",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "eb1555eb5bab060e",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0ecb2499b1b9a3f2",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0f5f1de8686b591d",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "17576dbd73544cd5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "bfa3f5f5c56bc672"
            ]
        ]
    },
    {
        "id": "04db0f06540a8c06",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "bfa3f5f5c56bc672",
                "b4d5c4a00b43a754"
            ]
        ]
    },
    {
        "id": "75b66a97dae27377",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{\"payload\": {\"deviceName\":\"hotchip2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1580,
        "y": 160,
        "wires": []
    },
    {
        "id": "44f759d99b8a18d9",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{payload: {\"deviceName\":\"hotchip2\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "d8a962a03f968368",
        "type": "simpletime",
        "z": "17061720ba0331b7",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "12964da3946ae83e"
            ]
        ]
    },
    {
        "id": "d48a48e4f2ab85b7",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "1bb7d1aa4aa42a6d",
                "ab62f7d4afdd50f9"
            ],
            []
        ]
    },
    {
        "id": "1bb7d1aa4aa42a6d",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c2397d6d02105f7e",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{payload: {\"deviceName\":\"hotchip2\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "091bbef5b742d0d2",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "!!! WORKAROUND !!!",
        "info": "",
        "x": 460,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f17638a161313f29",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "Write Temp = 0 degC (OFF) to device when not inUse",
        "info": "",
        "x": 560,
        "y": 1040,
        "wires": []
    },
    {
        "id": "329d8aa0e3d25ac4",
        "type": "change",
        "z": "17061720ba0331b7",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.temperatureSet",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "04db0f06540a8c06"
            ]
        ]
    },
    {
        "id": "bbe24a9d57c092dc",
        "type": "inject",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "3cd5a8d122c65283"
            ]
        ]
    },
    {
        "id": "02dd201741347e10",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "3cd5a8d122c65283",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Set InUse Flag",
        "func": "var hotchip2 = global.get(\"hotchip2\") || {};\n\nhotchip2.inUse = false;\n\nglobal.set(\"hotchip2\", hotchip2);\n\nmsg.payload = hotchip2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba062fea9355dbf",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a49f4da66d0fd89",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "OUTPUT",
        "info": "",
        "x": 1220,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ef16427ae4dcdcc",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "Receive Command: Link to HotChip 2",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "abd8c202aa7d9ff5",
        "type": "switch",
        "z": "9dfeb25ce4f7592b",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "5ef1387b46536e18",
                "cdad6b10a4ddacf3"
            ],
            []
        ]
    },
    {
        "id": "384ff75c0dc09486",
        "type": "json",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "2852ca90bd14310b"
            ]
        ]
    },
    {
        "id": "5ef1387b46536e18",
        "type": "switch",
        "z": "9dfeb25ce4f7592b",
        "name": "Check Command: REMOTEEN / SET",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "f1f7d8d6ecf18b6a",
                "b91b2c1bbae07560"
            ],
            [
                "bc0245b353d52219",
                "27cce9e4252346fe"
            ]
        ]
    },
    {
        "id": "bc0245b353d52219",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar temperatureSet = msg.payload.settings.temp || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "384ff75c0dc09486"
            ]
        ]
    },
    {
        "id": "76c28278e87aede7",
        "type": "json",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "ae68d5caf7717793"
            ]
        ]
    },
    {
        "id": "2852ca90bd14310b",
        "type": "mqtt out",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "topic": "subflow/hotchip2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "b008c84473462c2e",
        "type": "mqtt in",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "topic": "subflow/hotchip2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "76c28278e87aede7"
            ]
        ]
    },
    {
        "id": "27cce9e4252346fe",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Status string & Set Global variable",
        "func": "var hotchip2 = global.get(\"hotchip2\");\n\nvar command = msg.payload.settings.command || \"\";\nvar setTemperature = msg.payload.settings.temp || 0.0;\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotchip2.tele.state.temp + ')]';\n\nhotchip2.tele.settings.temp = setTemperature;\nglobal.set(\"hotchip2\", hotchip2);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1d94edd96a9cfe02",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "f1f7d8d6ecf18b6a",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "384ff75c0dc09486"
            ]
        ]
    },
    {
        "id": "b91b2c1bbae07560",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Status string",
        "func": "var command = msg.payload.settings.command || \"\";\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "02d0590d63b41a7c",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "7eb1ea9d3b61c8f1",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip2 = global.get(\"hotchip2\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip2.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip2.deviceName,\n        deviceType: hotchip2.deviceType,\n        cmnd: hotchip2.tele.cmnd,\n        settings: {\n            temp: hotchip2.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotchip2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotchip2\", hotchip2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip2.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e4067ee07c411ad8",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{\"payload\": {\"deviceName\":\"hotchip2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1620,
        "y": 160,
        "wires": []
    },
    {
        "id": "2caa206c6360a8dc",
        "type": "json",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "abd8c202aa7d9ff5"
            ]
        ]
    },
    {
        "id": "ae68d5caf7717793",
        "type": "simpletime",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "7eb1ea9d3b61c8f1"
            ]
        ]
    },
    {
        "id": "cdad6b10a4ddacf3",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar hotchip2 = global.get(\"hotchip2\") || {};\n\nhotchip2.inUse = inUse;\n\nglobal.set(\"hotchip2\", hotchip2);\n\nmsg.payload = hotchip2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "144b261011568c13",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{payload: {\"deviceName\":\"hotchip2\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "200900bb22971eaa",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{payload: {\"deviceName\":\"hotchip2\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "f84ff2e52af68dd9",
        "type": "inject",
        "z": "39878a8b7ca6b377",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "e38003923033293e"
            ]
        ]
    },
    {
        "id": "ddb5681e3b359622",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "e38003923033293e",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Set InUse Flag",
        "func": "var hotchip1 = global.get(\"hotchip1\") || {};\n\nhotchip1.inUse = false;\n\nglobal.set(\"hotchip1\", hotchip1);\n\nmsg.payload = hotchip1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "71bd888717c5a66d",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "cb443e561027166c",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "OUTPUT",
        "info": "",
        "x": 1200,
        "y": 120,
        "wires": []
    },
    {
        "id": "88d4863465ebe4df",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "0ac0700d6f1a2850",
        "type": "switch",
        "z": "39878a8b7ca6b377",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "171beb0ef6752731",
                "8afdfe4fae6f334e"
            ],
            []
        ]
    },
    {
        "id": "fbe707e3de56aa41",
        "type": "json",
        "z": "39878a8b7ca6b377",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "d6ad750996cc9f75"
            ]
        ]
    },
    {
        "id": "171beb0ef6752731",
        "type": "switch",
        "z": "39878a8b7ca6b377",
        "name": "Check Command: REMOTEEN / SET",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "55a20a7ebe32da7d",
                "f21fa7687ded114e"
            ],
            [
                "abdfc62e3ac3f1a6",
                "c10453785d7371ca"
            ]
        ]
    },
    {
        "id": "abdfc62e3ac3f1a6",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar temperatureSet = msg.payload.settings.temp || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "fbe707e3de56aa41"
            ]
        ]
    },
    {
        "id": "c285fc3c65487a8f",
        "type": "json",
        "z": "39878a8b7ca6b377",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "ca801faaa88db028"
            ]
        ]
    },
    {
        "id": "d6ad750996cc9f75",
        "type": "mqtt out",
        "z": "39878a8b7ca6b377",
        "name": "",
        "topic": "subflow/hotchip1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "dbe9cafb550fe75e",
        "type": "mqtt in",
        "z": "39878a8b7ca6b377",
        "name": "",
        "topic": "subflow/hotchip1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "c285fc3c65487a8f"
            ]
        ]
    },
    {
        "id": "c10453785d7371ca",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Status string & Set Global variable",
        "func": "var hotchip1 = global.get(\"hotchip1\");\n\nvar command = msg.payload.settings.command || \"\";\nvar setTemperature = msg.payload.settings.temp || 0.0;\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotchip1.tele.state.temp + ')]';\n\nhotchip1.tele.settings.temp = setTemperature;\nglobal.set(\"hotchip1\", hotchip1);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9db35f754462080b",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "55a20a7ebe32da7d",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "fbe707e3de56aa41"
            ]
        ]
    },
    {
        "id": "f21fa7687ded114e",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Status string",
        "func": "var command = msg.payload.settings.command || \"\";\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d29a9f4f6063fcd7",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "732bc28c498bd671",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip1 = global.get(\"hotchip1\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip1.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip1.deviceName,\n        deviceType: hotchip1.deviceType,\n        cmnd: hotchip1.tele.cmnd,\n        settings: {\n            temp: hotchip1.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotchip1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotchip1\", hotchip1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip1.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8958939e977cec21",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{\"payload\": {\"deviceName\":\"hotchip1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1600,
        "y": 160,
        "wires": []
    },
    {
        "id": "9ed40d547d35102f",
        "type": "json",
        "z": "39878a8b7ca6b377",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "0ac0700d6f1a2850"
            ]
        ]
    },
    {
        "id": "ca801faaa88db028",
        "type": "simpletime",
        "z": "39878a8b7ca6b377",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "732bc28c498bd671"
            ]
        ]
    },
    {
        "id": "8afdfe4fae6f334e",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar hotchip1 = global.get(\"hotchip1\") || {};\n\nhotchip1.inUse = inUse;\n\nglobal.set(\"hotchip1\", hotchip1);\n\nmsg.payload = hotchip1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2e9c7627d8ffeaba",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{payload: {\"deviceName\":\"hotchip1\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "39a80bf20b3aedd9",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{payload: {\"deviceName\":\"hotchip1\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "de01e19d86d2da8f",
        "type": "inject",
        "z": "dcba5a408b90db4f",
        "name": "TriggerHotChip1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "f2d4cd16e91cc15c"
            ]
        ]
    },
    {
        "id": "917ffc7959255bf7",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 800,
        "wires": [
            [
                "f4a806380b8d733a",
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "3c8d9d45fb51adba",
        "type": "tcp request",
        "z": "dcba5a408b90db4f",
        "name": "HotChip1TCPIPReq",
        "server": "192.168.1.211",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 660,
        "y": 880,
        "wires": [
            [
                "dba7fd01d5ddc1d8"
            ]
        ]
    },
    {
        "id": "f4a806380b8d733a",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 840,
        "wires": [
            [
                "3c8d9d45fb51adba"
            ]
        ]
    },
    {
        "id": "8104e9c1a3162e9a",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Init HotChip1 (Temp., State & InUse)",
        "func": "var hotchip1 = {\n    deviceName: 'hotchip1',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotchip1\", hotchip1);\n\nmsg.payload = hotchip1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "242c4357e6c8db87",
        "type": "inject",
        "z": "dcba5a408b90db4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "8104e9c1a3162e9a"
            ]
        ]
    },
    {
        "id": "6e81a66ddde75a15",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "c04e3382240a2633",
        "type": "mqtt in",
        "z": "dcba5a408b90db4f",
        "name": "",
        "topic": "subflow/hotchip1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "ed298fbe0fea6459"
            ]
        ]
    },
    {
        "id": "7252b476732cb991",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "3a930747071ced7f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotchip1.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "786250deaf848d37",
        "type": "tcp request",
        "z": "dcba5a408b90db4f",
        "name": "HotChip1TCPIPCommand",
        "server": "192.168.1.211",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "28c74b19d1cc23ea",
                "dba7fd01d5ddc1d8"
            ]
        ]
    },
    {
        "id": "3846a3c9beccbf46",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "786250deaf848d37"
            ]
        ]
    },
    {
        "id": "28c74b19d1cc23ea",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e1e8451629e12c95",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "3846a3c9beccbf46",
                "cb7b6df64ec26f35"
            ]
        ]
    },
    {
        "id": "424dd5b139a4b24f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "3846a3c9beccbf46",
                "d6d3f5c2c913d8e0"
            ]
        ]
    },
    {
        "id": "b99f99462611d243",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "424dd5b139a4b24f"
            ],
            [
                "e1e8451629e12c95"
            ],
            [
                "917ffc7959255bf7",
                "25d807fa95278cd7"
            ],
            [
                "3a930747071ced7f",
                "68cb939c1b4eb9b8",
                "546e029b34ac4d75"
            ]
        ]
    },
    {
        "id": "f2d4cd16e91cc15c",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "inUse? Yes / No",
        "property": "hotchip1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "917ffc7959255bf7"
            ],
            [
                "b542714b9a6a67b3"
            ]
        ]
    },
    {
        "id": "d2f9b465e12339aa",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "b411eb333e518f88",
        "type": "mqtt out",
        "z": "dcba5a408b90db4f",
        "name": "",
        "topic": "subflow/hotchip1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "dba7fd01d5ddc1d8",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "efe91eece4def278"
            ]
        ]
    },
    {
        "id": "14d44121fb257440",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "0e262f20cb9ce518",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "ed298fbe0fea6459",
        "type": "json",
        "z": "dcba5a408b90db4f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "91c73b2b02f2d170"
            ]
        ]
    },
    {
        "id": "55b0930c449142c2",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "32868cddab2034af",
                "cb7b6df64ec26f35"
            ],
            [
                "78ed937388ac0a19"
            ]
        ]
    },
    {
        "id": "32868cddab2034af",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "84e7250687507d9f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "c24815286e2cdbd6",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ecd9823a3f97764e",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "OUTPUT",
        "info": "",
        "x": 1220,
        "y": 120,
        "wires": []
    },
    {
        "id": "aa7c5044ce0f15f0",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "735f2b7821eee391",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip1 = global.get(\"hotchip1\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip1.tele.cmnd = 'POLL';\nhotchip1.tele.state.temp = temperature;\nhotchip1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip1.deviceName,\n        deviceType: hotchip1.deviceType,\n        cmnd: hotchip1.tele.cmnd,\n        settings: {\n            temp: hotchip1.tele.settings.temp\n        },\n        state: {\n            temp: hotchip1.tele.state.temp,\n            state: hotchip1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotchip1\", hotchip1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip1.tele.settings.temp + ' [Temp. Read: ' + hotchip1.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "74c7ad0627dd3039"
            ],
            []
        ]
    },
    {
        "id": "74c7ad0627dd3039",
        "type": "json",
        "z": "dcba5a408b90db4f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1650,
        "y": 920,
        "wires": [
            [
                "b411eb333e518f88"
            ]
        ]
    },
    {
        "id": "e63f3d2ac36a9083",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "8dd61fa18415fab7",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "87dfab6a05f4b103",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "01463e1ac22832a6"
            ],
            [
                "f46fc9a59a8e79f9"
            ]
        ]
    },
    {
        "id": "01463e1ac22832a6",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f46fc9a59a8e79f9",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d6d3f5c2c913d8e0",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "cb7b6df64ec26f35",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "25d807fa95278cd7",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "68cb939c1b4eb9b8",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "546e029b34ac4d75",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "87dfab6a05f4b103"
            ]
        ]
    },
    {
        "id": "78ed937388ac0a19",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "87dfab6a05f4b103",
                "84e7250687507d9f"
            ]
        ]
    },
    {
        "id": "287316858e9e0e79",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{\"payload\": {\"deviceName\":\"hotchip1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1620,
        "y": 160,
        "wires": []
    },
    {
        "id": "efe91eece4def278",
        "type": "simpletime",
        "z": "dcba5a408b90db4f",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "735f2b7821eee391"
            ]
        ]
    },
    {
        "id": "91c73b2b02f2d170",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "3bb2ab5ab1d3af1c",
                "55b0930c449142c2"
            ],
            []
        ]
    },
    {
        "id": "3bb2ab5ab1d3af1c",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "968dc2b7a7fd69fe",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{payload: {\"deviceName\":\"hotchip1\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "a2a8c7f9b75e7a9e",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{payload: {\"deviceName\":\"hotchip1\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "4d44e80d0f46f084",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "!!! WORKAROUND !!!",
        "info": "",
        "x": 460,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d2159597194c2eb6",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "Write Temp = 0 degC (OFF) to device when not inUse",
        "info": "",
        "x": 560,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b542714b9a6a67b3",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.temperatureSet",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "78ed937388ac0a19"
            ]
        ]
    },
    {
        "id": "533006f689d4d242",
        "type": "inject",
        "z": "755f6eaaa7c0cddd",
        "name": "TriggerHotCoil1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "7cbf81c9d13b361f"
            ]
        ]
    },
    {
        "id": "cd2b6f237a9f46a3",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 800,
        "wires": [
            [
                "46936ab8acd787e9",
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "5f55480eb5c5ee73",
        "type": "tcp request",
        "z": "755f6eaaa7c0cddd",
        "name": "HotCoil1TCPIPReq",
        "server": "192.168.1.213",
        "port": "81",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 660,
        "y": 880,
        "wires": [
            [
                "e06ba5a6d036ed54"
            ]
        ]
    },
    {
        "id": "46936ab8acd787e9",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "d": true,
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 840,
        "wires": [
            [
                "5f55480eb5c5ee73"
            ]
        ]
    },
    {
        "id": "0d0d1ebf278091c2",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Init HotCoil1 (Temp., State & InUse)",
        "func": "var hotcoil1 = {\n    deviceName: 'hotcoil1',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotcoil1\", hotcoil1);\n\nmsg.payload = hotcoil1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c825c6bc72e2e561",
        "type": "inject",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "0d0d1ebf278091c2"
            ]
        ]
    },
    {
        "id": "4bc4b828901d0c75",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "1688a619dcdf4a3c",
        "type": "mqtt in",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "9d19353cf8452c7c"
            ]
        ]
    },
    {
        "id": "3212a6abb0d4e07f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "aa19797c5e20bb88",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotcoil1.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "14d08990fa9d543a",
        "type": "tcp request",
        "z": "755f6eaaa7c0cddd",
        "name": "HotCoil1TCPIPCommand",
        "server": "192.168.1.213",
        "port": "81",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "8641490c595e2416",
                "e06ba5a6d036ed54"
            ]
        ]
    },
    {
        "id": "fec6fb7eb06d7d5e",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "14d08990fa9d543a"
            ]
        ]
    },
    {
        "id": "8641490c595e2416",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6d95ce023e8e3ae1",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "fec6fb7eb06d7d5e",
                "915b61cf052f5f0c"
            ]
        ]
    },
    {
        "id": "1cf9ed2c757c65ef",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "fec6fb7eb06d7d5e",
                "bb633f3ddf4dc1cb"
            ]
        ]
    },
    {
        "id": "c13ee86cd1f9e261",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "1cf9ed2c757c65ef"
            ],
            [
                "6d95ce023e8e3ae1"
            ],
            [
                "cd2b6f237a9f46a3",
                "6b7add81527aaaf2"
            ],
            [
                "aa19797c5e20bb88",
                "87a61b92dad7344c",
                "bd3fa1721ba66d61"
            ]
        ]
    },
    {
        "id": "7cbf81c9d13b361f",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "inUse? Yes / No",
        "property": "hotcoil1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "cd2b6f237a9f46a3"
            ],
            [
                "3ce7d255a5033bf3"
            ]
        ]
    },
    {
        "id": "52f5c345c28ecc3a",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "a642922dee098a3b",
        "type": "mqtt out",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "topic": "subflow/hotcoil1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1840,
        "y": 920,
        "wires": []
    },
    {
        "id": "e06ba5a6d036ed54",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "996c5ce1fc629fd2"
            ]
        ]
    },
    {
        "id": "1e3dcd697101492e",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "15ae42c93fda9d4a",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "9d19353cf8452c7c",
        "type": "json",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "97d2dd981f1a6832"
            ]
        ]
    },
    {
        "id": "05eb4710db350d14",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "0334f01b97266708",
                "915b61cf052f5f0c"
            ],
            [
                "edc0bc8fef3f37e9"
            ]
        ]
    },
    {
        "id": "0334f01b97266708",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "e3998a5cc1e1dffa",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "a192b1565bef1c71",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "31ccc53920fc6398",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ac09c83f9d9c617f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{\"payload\":\"hotcoil1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "26a41f3b5bcfe548",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "0a0c60410998a429",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil1.tele.cmnd = 'POLL';\nhotcoil1.tele.state.temp = temperature;\nhotcoil1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil1.deviceName,\n        deviceType: hotcoil1.deviceType,\n        cmnd: hotcoil1.tele.cmnd,\n        settings: {\n            temp: hotcoil1.tele.settings.temp\n        },\n        state: {\n            temp: hotcoil1.tele.state.temp,\n            state: hotcoil1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotcoil1\", hotcoil1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil1.tele.settings.temp + ' [Temp. Read: ' + hotcoil1.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "1fa8e72ced61e962"
            ],
            []
        ]
    },
    {
        "id": "1fa8e72ced61e962",
        "type": "json",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1650,
        "y": 920,
        "wires": [
            [
                "a642922dee098a3b"
            ]
        ]
    },
    {
        "id": "520bfb9a5092190f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "6bf341666f19ab8e",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "b1b995b543eb1ee6",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "0376014355675892"
            ],
            [
                "23d1c010e87796cc"
            ]
        ]
    },
    {
        "id": "0376014355675892",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "23d1c010e87796cc",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "bb633f3ddf4dc1cb",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "915b61cf052f5f0c",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6b7add81527aaaf2",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "87a61b92dad7344c",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "bd3fa1721ba66d61",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "b1b995b543eb1ee6"
            ]
        ]
    },
    {
        "id": "edc0bc8fef3f37e9",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "b1b995b543eb1ee6",
                "e3998a5cc1e1dffa"
            ]
        ]
    },
    {
        "id": "b590fcd17d887b88",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "151061d1d6d3f94d",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{payload: {\"deviceName\":\"hotcoil1\", settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 320,
        "y": 200,
        "wires": []
    },
    {
        "id": "996c5ce1fc629fd2",
        "type": "simpletime",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "0a0c60410998a429"
            ]
        ]
    },
    {
        "id": "97d2dd981f1a6832",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "bd0bb4079df80bc8",
                "05eb4710db350d14"
            ],
            []
        ]
    },
    {
        "id": "bd0bb4079df80bc8",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "77189dce30e47fb9",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "!!! WORKAROUND !!!",
        "info": "",
        "x": 460,
        "y": 980,
        "wires": []
    },
    {
        "id": "c38b82b90c92a579",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "Write Temp = 0 degC (OFF) to device when not inUse",
        "info": "",
        "x": 560,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3ce7d255a5033bf3",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.temperatureSet",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1060,
        "wires": [
            [
                "edc0bc8fef3f37e9"
            ]
        ]
    },
    {
        "id": "6c4727bab7feb439",
        "type": "inject",
        "z": "9ff174e82057e50f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "294004eab9d6bf37"
            ]
        ]
    },
    {
        "id": "b422767506baea0b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "294004eab9d6bf37",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Set InUse Flag",
        "func": "var hotcoil1 = global.get(\"hotcoil1\") || {};\n\nhotcoil1.inUse = false;\n\nglobal.set(\"hotcoil1\", hotcoil1);\n\nmsg.payload = hotcoil1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5618709313295055",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "2128f3d739130824",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "OUTPUT",
        "info": "",
        "x": 1240,
        "y": 120,
        "wires": []
    },
    {
        "id": "600c98f9c12dfc16",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "Receive Command: Link to HotCoil 1",
        "info": "",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "03134e6cba211cfc",
        "type": "switch",
        "z": "9ff174e82057e50f",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "0392f20db8722b42",
                "958202e71e17ebd7"
            ],
            []
        ]
    },
    {
        "id": "2ab6506c3a96ab95",
        "type": "json",
        "z": "9ff174e82057e50f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "269bf77fece8ee4a"
            ]
        ]
    },
    {
        "id": "0392f20db8722b42",
        "type": "switch",
        "z": "9ff174e82057e50f",
        "name": "Check Command: REMOTEEN / SET",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e8ec2f1b9b42d365",
                "ef31a38bfa5d7fe6"
            ],
            [
                "7d4e8a7581120f64",
                "a3c9f5a4d619fb99"
            ]
        ]
    },
    {
        "id": "7d4e8a7581120f64",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar temperatureSet = msg.payload.settings.temp || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "2ab6506c3a96ab95"
            ]
        ]
    },
    {
        "id": "cba8bd5e7cc2a3bd",
        "type": "json",
        "z": "9ff174e82057e50f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "89babd35b34ee087"
            ]
        ]
    },
    {
        "id": "269bf77fece8ee4a",
        "type": "mqtt out",
        "z": "9ff174e82057e50f",
        "name": "",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "e90106d4528996ba",
        "type": "mqtt in",
        "z": "9ff174e82057e50f",
        "name": "",
        "topic": "subflow/hotcoil1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "cba8bd5e7cc2a3bd"
            ]
        ]
    },
    {
        "id": "a3c9f5a4d619fb99",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Status string & Set Global variable",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\n\nvar command = msg.payload.settings.command || \"\";\nvar setTemperature = msg.payload.settings.temp || 0.0;\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotcoil1.tele.state.temp + ')]';\n\nhotcoil1.tele.settings.temp = setTemperature;\nglobal.set(\"hotcoil1\", hotcoil1);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "02a8a2d7fcc65e9c",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "e8ec2f1b9b42d365",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "2ab6506c3a96ab95"
            ]
        ]
    },
    {
        "id": "ef31a38bfa5d7fe6",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Status string",
        "func": "var command = msg.payload.settings.command || \"\";\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "77e152622daa830b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "7a66fc3787892aa4",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil1.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil1.deviceName,\n        deviceType: hotcoil1.deviceType,\n        cmnd: hotcoil1.tele.cmnd,\n        settings: {\n            temp: hotcoil1.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotcoil1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotcoil1\", hotcoil1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil1.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4841e304d0b0067b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1640,
        "y": 160,
        "wires": []
    },
    {
        "id": "bb7ce8165e3e1241",
        "type": "json",
        "z": "9ff174e82057e50f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "03134e6cba211cfc"
            ]
        ]
    },
    {
        "id": "89babd35b34ee087",
        "type": "simpletime",
        "z": "9ff174e82057e50f",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "7a66fc3787892aa4"
            ]
        ]
    },
    {
        "id": "958202e71e17ebd7",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "READ & SET  InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar hotcoil1 = global.get(\"hotcoil1\") || {};\n\nhotcoil1.inUse = inUse;\n\nglobal.set(\"hotcoil1\", hotcoil1);\n\nmsg.payload = hotcoil1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa37030fbcc14ab",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{payload: {\"deviceName\":\"hotcoil1\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "8271fa6a6c8c283a",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{payload: {\"deviceName\":\"hotcoil1\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "38f8b4b2ec2cde1a",
        "type": "inject",
        "z": "e5d36bc87bf46f25",
        "name": "TriggerHotCoil2TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "572ed1b02b044040"
            ]
        ]
    },
    {
        "id": "0f77923f267ec37d",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 800,
        "wires": [
            [
                "314cf2f58c5f839a",
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "a302e90c65747dc4",
        "type": "tcp request",
        "z": "e5d36bc87bf46f25",
        "name": "HotCoil2TCPIPReq",
        "server": "192.168.1.202",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 660,
        "y": 880,
        "wires": [
            [
                "e37ed1bda0277d4e"
            ]
        ]
    },
    {
        "id": "314cf2f58c5f839a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 840,
        "wires": [
            [
                "a302e90c65747dc4"
            ]
        ]
    },
    {
        "id": "a491a51fe7dff604",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Init HotCoil2 (Temp., State & InUse)",
        "func": "var hotcoil2 = {\n    deviceName: 'hotcoil2',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotcoil2\", hotcoil2);\n\nmsg.payload = hotcoil2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4c8e4951c21c2f93",
        "type": "inject",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "a491a51fe7dff604"
            ]
        ]
    },
    {
        "id": "99285f3d446a3404",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "19802acccb217358",
        "type": "mqtt in",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "topic": "subflow/hotcoil2/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "d8dd0e632dc0d12b"
            ]
        ]
    },
    {
        "id": "f97df2402b75f168",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ebfb1ddb0eda5ec",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotcoil2.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "c8cc3351106d4b22",
        "type": "tcp request",
        "z": "e5d36bc87bf46f25",
        "name": "HotCoil2TCPIPCommand",
        "server": "192.168.1.202",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "61b7a2336faa6eab",
                "e37ed1bda0277d4e"
            ]
        ]
    },
    {
        "id": "d463d43e918d022c",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "c8cc3351106d4b22"
            ]
        ]
    },
    {
        "id": "61b7a2336faa6eab",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a2702bcbf49c018a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "d463d43e918d022c",
                "78b0bd72bd5902e0"
            ]
        ]
    },
    {
        "id": "9c1d1fc3dcb4f27f",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "d463d43e918d022c",
                "78a9f0e787a8d2ee"
            ]
        ]
    },
    {
        "id": "255fca3e1a8a0462",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "9c1d1fc3dcb4f27f"
            ],
            [
                "a2702bcbf49c018a"
            ],
            [
                "0f77923f267ec37d",
                "93eda2f48aaadb18"
            ],
            [
                "5ebfb1ddb0eda5ec",
                "726651f72bf66f9c",
                "5a49523fe2453792"
            ]
        ]
    },
    {
        "id": "572ed1b02b044040",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "inUse? Yes / No",
        "property": "hotcoil2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "0f77923f267ec37d"
            ],
            [
                "cf3d1ef2ebabbb14"
            ]
        ]
    },
    {
        "id": "dbef06cd44c743f3",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "2ea9aa761418c6c6",
        "type": "mqtt out",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "topic": "subflow/hotcoil2/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "e37ed1bda0277d4e",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "b523cdfe78a19bf0"
            ]
        ]
    },
    {
        "id": "98fbac360dd5f720",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "6a8b983ef1f02c35",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "d8dd0e632dc0d12b",
        "type": "json",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "5a81a647abe1cf46"
            ]
        ]
    },
    {
        "id": "0a34118182fb6f65",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "9953cd44614d5636",
                "78b0bd72bd5902e0"
            ],
            [
                "3bbfc946209a1586"
            ]
        ]
    },
    {
        "id": "9953cd44614d5636",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "eedb38cbd2e8529a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "2e0972077d3b5bad",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ffec8f5c52b4f48",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "OUTPUT",
        "info": "",
        "x": 1240,
        "y": 120,
        "wires": []
    },
    {
        "id": "b30b8c93121ee84a",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "0550af75819c144d",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil2.tele.cmnd = 'POLL';\nhotcoil2.tele.state.temp = temperature;\nhotcoil2.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil2.deviceName,\n        deviceType: hotcoil2.deviceType,\n        cmnd: hotcoil2.tele.cmnd,\n        settings: {\n            temp: hotcoil2.tele.settings.temp\n        },\n        state: {\n            temp: hotcoil2.tele.state.temp,\n            state: hotcoil2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotcoil2\", hotcoil2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil2.tele.settings.temp + ' [Temp. Read: ' + hotcoil2.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "6f97bd4da8216159"
            ],
            []
        ]
    },
    {
        "id": "6f97bd4da8216159",
        "type": "json",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "2ea9aa761418c6c6"
            ]
        ]
    },
    {
        "id": "2d85aea8ac80f3f4",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "47570587fd37535e",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "336d6e73111722dc",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "6019df0046c78f58"
            ],
            [
                "c1f0472fae27bfb4"
            ]
        ]
    },
    {
        "id": "6019df0046c78f58",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c1f0472fae27bfb4",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "78a9f0e787a8d2ee",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "78b0bd72bd5902e0",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "93eda2f48aaadb18",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "726651f72bf66f9c",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5a49523fe2453792",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "336d6e73111722dc"
            ]
        ]
    },
    {
        "id": "3bbfc946209a1586",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "336d6e73111722dc",
                "eedb38cbd2e8529a"
            ]
        ]
    },
    {
        "id": "861082e798a8c1bf",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1640,
        "y": 160,
        "wires": []
    },
    {
        "id": "b523cdfe78a19bf0",
        "type": "simpletime",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "0550af75819c144d"
            ]
        ]
    },
    {
        "id": "5a81a647abe1cf46",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "328572bc4bdfcb58",
                "0a34118182fb6f65"
            ],
            []
        ]
    },
    {
        "id": "328572bc4bdfcb58",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b4763b59e0ba98c5",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{payload: {\"deviceName\":\"hotcoil2\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "908d66951bd74756",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{payload: {\"deviceName\":\"hotcoil2\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "cecda7b543ad4372",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "!!! WORKAROUND !!!",
        "info": "",
        "x": 460,
        "y": 980,
        "wires": []
    },
    {
        "id": "b6392c1323953a6a",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "Write Temp = 0 degC (OFF) to device when not inUse",
        "info": "",
        "x": 560,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cf3d1ef2ebabbb14",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.temperatureSet",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1060,
        "wires": [
            [
                "3bbfc946209a1586"
            ]
        ]
    },
    {
        "id": "468d35971b6709a3",
        "type": "inject",
        "z": "100af8884419f9cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "9a11bf88aca7d525"
            ]
        ]
    },
    {
        "id": "7b8f14f8f21af733",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "9a11bf88aca7d525",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Set InUse Flag",
        "func": "var hotcoil2 = global.get(\"hotcoil2\") || {};\n\nhotcoil2.inUse = false;\n\nglobal.set(\"hotcoil2\", hotcoil2);\n\nmsg.payload = hotcoil2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d1258f9d7be3fd59",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "20b13c3c9598d210",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "OUTPUT",
        "info": "",
        "x": 1220,
        "y": 120,
        "wires": []
    },
    {
        "id": "a7a0992c40dc7248",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "Receive Command: Link to HotCoil 2",
        "info": "",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "590abe5d6566ccc0",
        "type": "switch",
        "z": "100af8884419f9cb",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "64ba0278c157bb89",
                "43cffaf3e678cbab"
            ],
            []
        ]
    },
    {
        "id": "508c93994e70c134",
        "type": "json",
        "z": "100af8884419f9cb",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "c81c81cedbe7105d"
            ]
        ]
    },
    {
        "id": "64ba0278c157bb89",
        "type": "switch",
        "z": "100af8884419f9cb",
        "name": "Check Command: REMOTEEN / SET",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "a633901488293363",
                "2a2785decd8f7504"
            ],
            [
                "629a59e94de507dc",
                "478273ed9e778df8"
            ]
        ]
    },
    {
        "id": "629a59e94de507dc",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar temperatureSet = msg.payload.settings.temp || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "508c93994e70c134"
            ]
        ]
    },
    {
        "id": "b6433249d8d9edaf",
        "type": "json",
        "z": "100af8884419f9cb",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "58493ab233c080e6"
            ]
        ]
    },
    {
        "id": "c81c81cedbe7105d",
        "type": "mqtt out",
        "z": "100af8884419f9cb",
        "name": "",
        "topic": "subflow/hotcoil2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "baa6f8d30e54b7f8",
        "type": "mqtt in",
        "z": "100af8884419f9cb",
        "name": "",
        "topic": "subflow/hotcoil2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "b6433249d8d9edaf"
            ]
        ]
    },
    {
        "id": "478273ed9e778df8",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Status string & Set Global variable",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\n\nvar command = msg.payload.settings.command || \"\";\nvar setTemperature = msg.payload.settings.temp || 0.0;\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotcoil2.tele.state.temp + ')]';\n\nhotcoil2.tele.settings.temp = setTemperature;\nglobal.set(\"hotcoil2\", hotcoil2);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "dcdb36dc37922aab",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "a633901488293363",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "508c93994e70c134"
            ]
        ]
    },
    {
        "id": "2a2785decd8f7504",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Status string",
        "func": "var command = msg.payload.settings.command || \"\";\n\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c6d675f024c656f3",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "f75079bc0eff60ac",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil2.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil2.deviceName,\n        deviceType: hotcoil2.deviceType,\n        cmnd: hotcoil2.tele.cmnd,\n        settings: {\n            temp: hotcoil2.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotcoil2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotcoil2\", hotcoil2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil2.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c55ed514fb48fe58",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1620,
        "y": 160,
        "wires": []
    },
    {
        "id": "abfa55f3b320907d",
        "type": "json",
        "z": "100af8884419f9cb",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "590abe5d6566ccc0"
            ]
        ]
    },
    {
        "id": "58493ab233c080e6",
        "type": "simpletime",
        "z": "100af8884419f9cb",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "f75079bc0eff60ac"
            ]
        ]
    },
    {
        "id": "43cffaf3e678cbab",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar hotcoil2 = global.get(\"hotcoil2\") || {};\n\nhotcoil2.inUse = inUse;\n\nglobal.set(\"hotcoil2\", hotcoil2);\n\nmsg.payload = hotcoil2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "748103dc5fd14872",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{payload: {\"deviceName\":\"hotcoil2\",  \"inUse\":true, settings:{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "a514681e63c4d9e9",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{payload: {\"deviceName\":\"hotcoil2\",  \"inUse\":true, settings:{\"command\":\"SET\", \"temp\": 30.8}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "41f2d9adf1180111",
        "type": "function",
        "z": "033e19cbbcf6ab20",
        "name": "Init SF10 vapourtec 2 (State, Mode, values & InUse)",
        "func": "var sf10Vapourtec2 = {\n        deviceName: \"sf10Vapourtec2\",\n        deviceType: \"Pump\",\n        inUse: false,\n        remoteEnabled: false,\n        tele: {\n            cmnd: '',\n            settings: {\n                mode: '',\n                flowrate: 0.0,\n                pressure: 0.0,\n                dose: 0.0,\n                gasflowrate: 0.0,\n                rampStartRate: 0.0,\n                rampStopRate: 0.0,\n                rampTime: 0.0\n            },\n            state: {\n                status: 'STOP',\n                valve: 'A',\n                response: '',\n            },\n            timestamp: ''\n        }\n};\n\n\nglobal.set(\"sf10Vapourtec2\", sf10Vapourtec2);\n\nmsg.payload = sf10Vapourtec2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a9092d1d4bba1f8e",
        "type": "inject",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 70,
        "y": 60,
        "wires": [
            [
                "41f2d9adf1180111"
            ]
        ]
    },
    {
        "id": "14fe8d48698a8fc6",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "INIT: Variables at startup",
        "info": "",
        "x": 130,
        "y": 20,
        "wires": []
    },
    {
        "id": "3f8ac665b3a8ed52",
        "type": "mqtt in",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "topic": "subflow/sf10vapourtec2/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "28b78cf40b6a1fbb"
            ]
        ]
    },
    {
        "id": "33391df3457ce735",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "Incoming CMND",
        "info": "",
        "x": 100,
        "y": 580,
        "wires": []
    },
    {
        "id": "8ddd6445706a6b88",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "REMOTEEN/ START/ STOP/ VALVE/MODE/FLOW/GASFLOW/REG/DOSE/RAMP/GV",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STOP",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "MODE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GV",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 640,
        "y": 1040,
        "wires": [
            [
                "bb9b3263553a2f77"
            ],
            [
                "5c0cc6194d31e9f2"
            ],
            [
                "eb81671aec5d4240"
            ],
            [
                "35c6ba677ebb9566"
            ],
            [
                "f761539c54a58cd8",
                "934e8cd64a7494db"
            ],
            [
                "f761539c54a58cd8"
            ],
            []
        ]
    },
    {
        "id": "780110c7711eb47b",
        "type": "mqtt out",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "topic": "subflow/sf10vapourtec2/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 4000,
        "y": 920,
        "wires": []
    },
    {
        "id": "f761539c54a58cd8",
        "type": "serial request",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "serial": "7faba9fcd11fb567",
        "x": 3010,
        "y": 980,
        "wires": [
            [
                "c6c7fae573ad4ce3"
            ]
        ]
    },
    {
        "id": "7cf6df6c50fd9641",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "Slider: Flow/GasFlow/Pressure/Dose/RampStart/RampStop/RampTime",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "SliderFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderGasFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderPressure",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderDose",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStart",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStop",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampTime",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 570,
        "y": 1240,
        "wires": [
            [
                "7cf84469882b82c2"
            ],
            [
                "71b68c0d0dcfdeaa"
            ],
            [
                "a102871cd1d2fe03"
            ],
            [
                "40d2eb38c918cb82"
            ],
            [
                "f235ce057bc00d30"
            ],
            [
                "a7f142434ad03e4a"
            ],
            [
                "596dc41e5168d528"
            ],
            []
        ]
    },
    {
        "id": "7cf84469882b82c2",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETFLOW command & Set flow",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1200,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "71b68c0d0dcfdeaa",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETGASFLOW command & Set gasflow",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1240,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "a102871cd1d2fe03",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETREG command & Set pressure",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 1280,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "40d2eb38c918cb82",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETDOSE command & Set dose",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1320,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "35c6ba677ebb9566",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "Valve: B / A",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "B",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1020,
        "wires": [
            [
                "4c9d11769f8a5655",
                "f761539c54a58cd8"
            ],
            [
                "ab17986211fb7fe4",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "4c9d11769f8a5655",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.valve",
                "pt": "global",
                "to": "B",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 1020,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "ab17986211fb7fe4",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.valve",
                "pt": "global",
                "to": "A",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 1060,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "934e8cd64a7494db",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "Mode: FLOW/REG/DOSE/GAS/RAMP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1190,
        "y": 1120,
        "wires": [
            [
                "ba0fed0fe259af7b"
            ],
            [
                "f3a41eb1c7ddb2f5"
            ],
            [
                "d45fe35ae4397484"
            ],
            [
                "feb01b184bdfab79"
            ],
            [
                "ab97af65f36a0ac4"
            ]
        ]
    },
    {
        "id": "ba0fed0fe259af7b",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "f3a41eb1c7ddb2f5",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "d45fe35ae4397484",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "feb01b184bdfab79",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "ab97af65f36a0ac4",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f235ce057bc00d30",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETRAMP command & Set rampStart",
        "rules": [
            {
                "t": "set",
                "p": "rampStart",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.rampStart",
                "pt": "global",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampStartRate",
                "pt": "global",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1360,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "a7f142434ad03e4a",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETRAMP command & Set rampStop",
        "rules": [
            {
                "t": "set",
                "p": "rampStop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampStopRate",
                "pt": "global",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1400,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "596dc41e5168d528",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build SETRAMP command & Set rampTime",
        "rules": [
            {
                "t": "set",
                "p": "rampTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec2.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampTime",
                "pt": "global",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1440,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "be0d46f3d6ef538e",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "Buttons - Command in msg.payload",
        "info": "",
        "x": 480,
        "y": 960,
        "wires": []
    },
    {
        "id": "375b257a0d41177b",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "Sliders (Variable values) - Variable Name in msg.topic & Variable Value in msg.payload",
        "info": "",
        "x": 620,
        "y": 1160,
        "wires": []
    },
    {
        "id": "15ce2fa48e30c1c0",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 670,
        "y": 740,
        "wires": [
            [
                "031d6d7005ea9944"
            ],
            [
                "72b462e355c8da73"
            ],
            [
                "805139b0c7232803"
            ],
            [
                "60f15755964af4c5"
            ],
            [
                "c155883fd19c1d4e"
            ]
        ]
    },
    {
        "id": "9cad53ce0b06b510",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "INPUTS",
        "info": "",
        "x": 80,
        "y": 140,
        "wires": []
    },
    {
        "id": "28b78cf40b6a1fbb",
        "type": "json",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 740,
        "wires": [
            [
                "5e5e8e68f2dbcc6c"
            ]
        ]
    },
    {
        "id": "031d6d7005ea9944",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create REMOTEEN command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "REMOTEEN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 640,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "6856ba4124710cc5",
        "type": "json",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3750,
        "y": 920,
        "wires": [
            [
                "780110c7711eb47b"
            ]
        ]
    },
    {
        "id": "60f15755964af4c5",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create START command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "START",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 820,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "c155883fd19c1d4e",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create STOP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 860,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "72b462e355c8da73",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create VALVE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "payload.settings.valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "VALVE @valve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@valve",
                "fromt": "str",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.valve",
                "pt": "global",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 680,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "805139b0c7232803",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 740,
        "wires": [
            [
                "378c48e9c9a8b438"
            ],
            [
                "121795f062a67c0e"
            ],
            [
                "1453cf30d968a5f9"
            ],
            [
                "e9abc26d0ffda720"
            ],
            [
                "18a5bffb6c3d40f6"
            ]
        ]
    },
    {
        "id": "3e45faf807bed3a8",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create SETFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload.settings.flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @flowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@flowrate",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 540,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "d3277668e8a868e4",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "OUTPUT",
        "info": "",
        "x": 1180,
        "y": 140,
        "wires": []
    },
    {
        "id": "15bb2b7a24132d51",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "From MQTT",
        "info": "",
        "x": 90,
        "y": 700,
        "wires": []
    },
    {
        "id": "0a50332448d5abfa",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "From Manual Input",
        "info": "",
        "x": 110,
        "y": 920,
        "wires": []
    },
    {
        "id": "1f794aafeaa668a6",
        "type": "function",
        "z": "033e19cbbcf6ab20",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec2 = global.get(\"sf10Vapourtec2\");\nvar timestamp = msg.myepoch;\nvar sentCommand = msg.request_payload || \"\";\nvar status = msg.status || \"\";\nvar response = msg.payload || {};\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nsf10Vapourtec2.tele.state.response = response;\nsf10Vapourtec2.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec2.deviceName,\n        deviceType: sf10Vapourtec2.deviceType,\n        settings: {\n            cmnd: sentCommand,\n            mode: sf10Vapourtec2.tele.settings.mode,\n            flowrate: sf10Vapourtec2.tele.settings.flowrate,\n            pressure: sf10Vapourtec2.tele.settings.pressure,\n            dose: sf10Vapourtec2.tele.settings.dose,\n            gasflowrate: sf10Vapourtec2.tele.settings.gasflowrate,\n            rampStartRate: sf10Vapourtec2.tele.settings.rampStartRate,\n            rampStopRate: sf10Vapourtec2.tele.settings.rampStopRate,\n            rampTime: sf10Vapourtec2.tele.settings.rampTime\n        },\n        state: {\n            response: response,\n            status: status\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"sf10Vapourtec2\", sf10Vapourtec2);\n\nstatusMsg = {\n    payload: sentCommand + ' - ' + status + ' [' + response + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 980,
        "wires": [
            [
                "6856ba4124710cc5"
            ],
            []
        ]
    },
    {
        "id": "275d5789f3120873",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create SETREG command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload.settings.pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @pressure",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@pressure",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 580,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "81802592211afb94",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create SETDOSE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload.settings.dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @dose",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@dose",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 620,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "14dc423bdb597282",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create SETGASFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload.settings.gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @gasflowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@gasflowrate",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 660,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "df01b91d43c7e926",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Create SETRAMP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "startRate",
                "pt": "msg",
                "to": "payload.settings.rampStartRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "stopRate",
                "pt": "msg",
                "to": "payload.settings.rampStopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "payload.settings.rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.settings.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @startRate @stopRate @time",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@startRate",
                "fromt": "str",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@stopRate",
                "fromt": "str",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@time",
                "fromt": "str",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampStartRate",
                "pt": "global",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampStopRate",
                "pt": "global",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.rampTime",
                "pt": "global",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 700,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "bb9b3263553a2f77",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 900,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "5c0cc6194d31e9f2",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 940,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "eb81671aec5d4240",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec2.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 980,
        "wires": [
            [
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "d0620a7d2f7a2572",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec2\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 2140,
        "y": 180,
        "wires": []
    },
    {
        "id": "891fa6b4e08cefe9",
        "type": "inject",
        "z": "033e19cbbcf6ab20",
        "name": "TriggerSF10 Settings Send",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1700,
        "wires": [
            [
                "b81d7b75fef46a42"
            ]
        ]
    },
    {
        "id": "b81d7b75fef46a42",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "inUse?",
        "property": "sf10Vapourtec2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 1700,
        "wires": [
            [
                "5a3b105fc79ebd57"
            ]
        ]
    },
    {
        "id": "56fa2b79f1522bbd",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "d": true,
        "name": "Settings NOT Empty",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 820,
        "y": 1760,
        "wires": [
            [
                "d6f1bdfce51b2128"
            ]
        ]
    },
    {
        "id": "5a3b105fc79ebd57",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Read Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1700,
        "wires": [
            [
                "56fa2b79f1522bbd",
                "d6f1bdfce51b2128"
            ]
        ]
    },
    {
        "id": "d6f1bdfce51b2128",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Build response payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "settings",
                "pt": "msg",
                "to": "sf10Vapourtec2.tele.settings",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "sf10Vapourtec2.tele.state",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "sf10Vapourtec2.tele.state.valve",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1700,
        "wires": [
            [
                "27c66d3f9ee60b71"
            ]
        ]
    },
    {
        "id": "159812bb097cf7ae",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "When Settings is present, periodically send output message",
        "info": "",
        "x": 260,
        "y": 1660,
        "wires": []
    },
    {
        "id": "98cf3a6c7bb9576a",
        "type": "function",
        "z": "033e19cbbcf6ab20",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec2 = global.get(\"sf10Vapourtec2\");\nvar timestamp = msg.myepoch;\n\nvar settings = msg.settings || {};\nvar state = msg.state || \"\";\n// var valve = msg.valve || \"\";\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\n// responseMsg = {\n//     payload: \"sf10Vapourtec2\",\n//     settings: settings,\n//     state: state,\n//     valve: valve\n//     };\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec2.deviceName,\n        deviceType: sf10Vapourtec2.deviceType,\n        cmnd: sf10Vapourtec2.tele.cmnd,\n        settings: settings,\n        state: state,\n        timestamp: timestamp\n    }\n};\n\nglobal.set(\"sf10Vapourtec2\", sf10Vapourtec2);\n\nstatusMsg = {\n    payload: 'MODE: ' + settings.mode + ' [State: ' + state + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1700,
        "wires": [
            [
                "6856ba4124710cc5"
            ],
            []
        ]
    },
    {
        "id": "73abe1a00596d277",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "MODE FLOW Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 540,
        "wires": [
            [
                "5810273a5ba51fbc",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "013e28e43472a276",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "MODE REG Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 580,
        "wires": [
            [
                "f74ed9a294fcfba2",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "dcc85391c8bfcf94",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "MODE DOSE Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 620,
        "wires": [
            [
                "1ecfa9e777f0391f",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "871f8f2e19bff9d3",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "MODE GAS Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 660,
        "wires": [
            [
                "8e2f30db586d7716",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "c212f664bd34b813",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "MODE RAMP Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 700,
        "wires": [
            [
                "3586057f28094948",
                "f761539c54a58cd8"
            ]
        ]
    },
    {
        "id": "5810273a5ba51fbc",
        "type": "delay",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 540,
        "wires": [
            [
                "3dfacbe201dbefe8"
            ]
        ]
    },
    {
        "id": "f74ed9a294fcfba2",
        "type": "delay",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 580,
        "wires": [
            [
                "473f905966513a4d"
            ]
        ]
    },
    {
        "id": "1ecfa9e777f0391f",
        "type": "delay",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 620,
        "wires": [
            [
                "6c52565c3055b7a1"
            ]
        ]
    },
    {
        "id": "8e2f30db586d7716",
        "type": "delay",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 660,
        "wires": [
            [
                "e928c65dbfe4e99f"
            ]
        ]
    },
    {
        "id": "3586057f28094948",
        "type": "delay",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 700,
        "wires": [
            [
                "455829588a3b35d2"
            ]
        ]
    },
    {
        "id": "378c48e9c9a8b438",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 540,
        "wires": [
            [
                "73abe1a00596d277"
            ]
        ]
    },
    {
        "id": "121795f062a67c0e",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 580,
        "wires": [
            [
                "013e28e43472a276"
            ]
        ]
    },
    {
        "id": "1453cf30d968a5f9",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 620,
        "wires": [
            [
                "dcc85391c8bfcf94"
            ]
        ]
    },
    {
        "id": "e9abc26d0ffda720",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 660,
        "wires": [
            [
                "871f8f2e19bff9d3"
            ]
        ]
    },
    {
        "id": "18a5bffb6c3d40f6",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 700,
        "wires": [
            [
                "c212f664bd34b813"
            ]
        ]
    },
    {
        "id": "3dfacbe201dbefe8",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 540,
        "wires": [
            [
                "3e45faf807bed3a8"
            ]
        ]
    },
    {
        "id": "473f905966513a4d",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 580,
        "wires": [
            [
                "275d5789f3120873"
            ]
        ]
    },
    {
        "id": "6c52565c3055b7a1",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 620,
        "wires": [
            [
                "81802592211afb94"
            ]
        ]
    },
    {
        "id": "e928c65dbfe4e99f",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 660,
        "wires": [
            [
                "14dc423bdb597282"
            ]
        ]
    },
    {
        "id": "455829588a3b35d2",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 700,
        "wires": [
            [
                "df01b91d43c7e926"
            ]
        ]
    },
    {
        "id": "f65ecc48930d22a4",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 310,
        "y": 180,
        "wires": []
    },
    {
        "id": "51353316e5bbc861",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"VALVE\", \"valve\":\"A\"}}}",
        "info": "",
        "x": 330,
        "y": 220,
        "wires": []
    },
    {
        "id": "d67c45f56df9a9e0",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}}}",
        "info": "",
        "x": 390,
        "y": 260,
        "wires": []
    },
    {
        "id": "04ab17698f3eea0f",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}}}",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "1ad12eac50befea7",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}}}",
        "info": "",
        "x": 380,
        "y": 340,
        "wires": []
    },
    {
        "id": "8b153f0cd30802c0",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}}}",
        "info": "",
        "x": 390,
        "y": 380,
        "wires": []
    },
    {
        "id": "03d735dbb3683f0b",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartSpeed\": 0.9, \"rampStopSpeed\": 1.9, \"rampTIme\": 1.5}}}",
        "info": "",
        "x": 540,
        "y": 420,
        "wires": []
    },
    {
        "id": "be8eb4a6a639b465",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"START\"}}}",
        "info": "",
        "x": 290,
        "y": 460,
        "wires": []
    },
    {
        "id": "8e3aab94e85c358a",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"settings\":{\"command\":\"STOP\"}}}",
        "info": "",
        "x": 290,
        "y": 500,
        "wires": []
    },
    {
        "id": "ee716b0526565dde",
        "type": "comment",
        "z": "033e19cbbcf6ab20",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 840,
        "y": 180,
        "wires": []
    },
    {
        "id": "c6c7fae573ad4ce3",
        "type": "simpletime",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 3190,
        "y": 980,
        "wires": [
            [
                "1f794aafeaa668a6"
            ]
        ]
    },
    {
        "id": "27c66d3f9ee60b71",
        "type": "simpletime",
        "z": "033e19cbbcf6ab20",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 1390,
        "y": 1700,
        "wires": [
            [
                "98cf3a6c7bb9576a"
            ]
        ]
    },
    {
        "id": "5e5e8e68f2dbcc6c",
        "type": "switch",
        "z": "033e19cbbcf6ab20",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sf10Vapourtec2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 780,
        "wires": [
            [
                "a8ceccba77341a7c",
                "15ce2fa48e30c1c0"
            ],
            []
        ]
    },
    {
        "id": "a8ceccba77341a7c",
        "type": "change",
        "z": "033e19cbbcf6ab20",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e18868f59be62257",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "68d034f9eff862fb",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Set InUse Flag",
        "func": "var sf10Vapourtec2 = global.get(\"sf10Vapourtec2\") || {};\n\nsf10Vapourtec2.inUse = false;\n\nglobal.set(\"sf10Vapourtec2\", sf10Vapourtec2);\n\nmsg.payload = sf10Vapourtec2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6a13ab26b349a5f3",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "Receive Command: Link to SF10 Vapourtec 2",
        "info": "",
        "x": 190,
        "y": 560,
        "wires": []
    },
    {
        "id": "4cc563886033ae0c",
        "type": "mqtt out",
        "z": "2ebe29b6d5387454",
        "name": "",
        "topic": "subflow/sf10vapourtec2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1950,
        "y": 640,
        "wires": []
    },
    {
        "id": "f08c0d45da169690",
        "type": "mqtt in",
        "z": "2ebe29b6d5387454",
        "name": "",
        "topic": "subflow/sf10vapourtec2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 980,
        "wires": [
            [
                "c063016a1bcfe99d"
            ]
        ]
    },
    {
        "id": "588d5407520598da",
        "type": "inject",
        "z": "2ebe29b6d5387454",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "68d034f9eff862fb"
            ]
        ]
    },
    {
        "id": "274e8f6cc3cb9054",
        "type": "json",
        "z": "2ebe29b6d5387454",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "e19482d2ef7ab896"
            ]
        ]
    },
    {
        "id": "e19482d2ef7ab896",
        "type": "switch",
        "z": "2ebe29b6d5387454",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "sf10Vapourtec2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 600,
        "wires": [
            [
                "ca868bf8796302f2",
                "6ff78db9c7251495",
                "79acf3d366edbb15"
            ],
            []
        ]
    },
    {
        "id": "a8f029334e7bcd1b",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 140,
        "wires": []
    },
    {
        "id": "50aaa7088f79459e",
        "type": "json",
        "z": "2ebe29b6d5387454",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1730,
        "y": 640,
        "wires": [
            [
                "4cc563886033ae0c"
            ]
        ]
    },
    {
        "id": "ae44052baa05e339",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "ca868bf8796302f2",
        "type": "change",
        "z": "2ebe29b6d5387454",
        "name": "Command received",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "091a5e8f89b438c2",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "Return result from Serial port",
        "info": "",
        "x": 140,
        "y": 940,
        "wires": []
    },
    {
        "id": "f835749afb061fd9",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"START\"}}}",
        "info": "",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "87e667e7d8d10d56",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"STOP\"}}}",
        "info": "",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "5baa814268703e0a",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"REMOTEEN\"}}}",
        "info": "",
        "x": 370,
        "y": 180,
        "wires": []
    },
    {
        "id": "1d52751dbddf059e",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}}}",
        "info": "",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "242bed1260ae65f6",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}}}",
        "info": "",
        "x": 440,
        "y": 300,
        "wires": []
    },
    {
        "id": "53ed065539322818",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}}}",
        "info": "",
        "x": 440,
        "y": 340,
        "wires": []
    },
    {
        "id": "11dd1986b074586e",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}}}",
        "info": "",
        "x": 450,
        "y": 380,
        "wires": []
    },
    {
        "id": "11c6cb4bbd9f6e2f",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartSpeed\": 0.9, \"rampStopSpeed\": 1.9, \"rampTIme\": 1.5}}}",
        "info": "",
        "x": 600,
        "y": 420,
        "wires": []
    },
    {
        "id": "4343a52ea0c2149e",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\":{\"deviceName\":\"sf10Vapourtec2\", \"inUse\":true, \"settings\":{\"command\":\"VALVE\", \"valve\":\"A\"}}}",
        "info": "",
        "x": 390,
        "y": 220,
        "wires": []
    },
    {
        "id": "7fe6550af03678f7",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "OUTPUT",
        "info": "",
        "x": 1320,
        "y": 120,
        "wires": []
    },
    {
        "id": "d9b48d30e751b9c9",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "Receive Response: Link to SF10 Vapourtec 1",
        "info": "",
        "x": 190,
        "y": 880,
        "wires": []
    },
    {
        "id": "b395d0c134144d00",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Generate Status / Output",
        "func": "var timestamp = msg.myepoch;\n\nvar responseString = \"\";\nvar statusMsg = {};\nvar outputMsg = {};\n\nresponseString = \"Mode: \" + msg.payload.settings.mode + ' [State: ' + msg.payload.state + ']';\n\nstatusMsg.payload = responseString;\noutputMsg.payload = msg.payload;\n\nreturn [statusMsg, outputMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a762600a3fb78298",
        "type": "switch",
        "z": "2ebe29b6d5387454",
        "name": "Check Response: Success / Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 980,
        "wires": [
            [
                "ccb9f85ca4363645",
                "98d03a5c46960a20"
            ],
            []
        ]
    },
    {
        "id": "6aa70f80d4745e31",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 660,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "6ff78db9c7251495",
        "type": "switch",
        "z": "2ebe29b6d5387454",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 680,
        "wires": [
            [
                "6aa70f80d4745e31"
            ],
            [
                "7424bfc41d25c2e8"
            ],
            [
                "ec4a84e19f1a8b36"
            ],
            [
                "6aa70f80d4745e31"
            ],
            [
                "6aa70f80d4745e31"
            ]
        ]
    },
    {
        "id": "7424bfc41d25c2e8",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar valve = msg.payload.settings.valve || \"A\";\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        devicename: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            valve: valve\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 700,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "ec4a84e19f1a8b36",
        "type": "switch",
        "z": "2ebe29b6d5387454",
        "name": "FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "dc42f20cff9d0035"
            ],
            [
                "cae40dd5ce3edb80"
            ],
            [
                "e439c7414bb9cc6c"
            ],
            [
                "4c2a7917053049e4"
            ],
            [
                "e9f7f0d8b7eed692"
            ]
        ]
    },
    {
        "id": "dc42f20cff9d0035",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar flowrate = msg.payload.settings.flowrate || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            flowrate: flowrate\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 740,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "cae40dd5ce3edb80",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar pressure = msg.payload.settings.pressure || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            pressure: pressure\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 780,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "e439c7414bb9cc6c",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar dose = msg.payload.settings.dose || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        devicename: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            dose: dose\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 820,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "4c2a7917053049e4",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar gasflowrate = msg.payload.settings.gasflowrate || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            gasflowrate: gasflowrate\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 860,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "e9f7f0d8b7eed692",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload.deviceName || \"\";\nvar command = msg.payload.settings.command || \"\";\nvar mode = msg.payload.settings.mode || \"\";\nvar rampStartRate = msg.payload.settings.rampStartRate || 0.0;\nvar rampStopRate = msg.payload.settings.rampStopRate || 0.0;\nvar rampTime = msg.payload.settings.rampTime || 0.0;\nvar inUse = msg.payload.inUse || false;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        deviceName: device,\n        inUse: inUse,\n        settings: {\n            command: command,\n            mode: mode,\n            rampStartRate: rampStartRate,\n            rampStopRate: rampStopRate,\n            rampTime: rampTime\n        }\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 900,
        "wires": [
            [
                "50aaa7088f79459e"
            ]
        ]
    },
    {
        "id": "c063016a1bcfe99d",
        "type": "json",
        "z": "2ebe29b6d5387454",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 980,
        "wires": [
            [
                "a762600a3fb78298"
            ]
        ]
    },
    {
        "id": "ccb9f85ca4363645",
        "type": "switch",
        "z": "2ebe29b6d5387454",
        "d": true,
        "name": "Check Settings payload present: Yes / No ",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "b395d0c134144d00"
            ],
            []
        ]
    },
    {
        "id": "5a156508fd3a71fe",
        "type": "comment",
        "z": "2ebe29b6d5387454",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec2\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 2250,
        "y": 180,
        "wires": []
    },
    {
        "id": "98d03a5c46960a20",
        "type": "simpletime",
        "z": "2ebe29b6d5387454",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 960,
        "wires": [
            [
                "b395d0c134144d00"
            ]
        ]
    },
    {
        "id": "79acf3d366edbb15",
        "type": "function",
        "z": "2ebe29b6d5387454",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar sf10Vapourtec2 = global.get(\"sf10Vapourtec2\") || {};\n\nsf10Vapourtec2.inUse = inUse;\n\nglobal.set(\"sf10Vapourtec2\", sf10Vapourtec2);\n\nmsg.payload = sf10Vapourtec2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "eee44fc331052894",
        "type": "function",
        "z": "fad566f5d6b0591c",
        "name": "Init nmr1(Temp., State & Clear InUse)",
        "func": "var nmr1 = {\n    deviceName: 'nmr1',\n    deviceType: 'NMR',\n\n    inUse : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            'protocol': ''\n        },\n        state: {\n            data:{}\n        },\n        timestamp: ''\n    }\n};\n\n\nglobal.set(\"nmr1\", nmr1);\n\nmsg.payload = nmr1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6ef358275663d939",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "548d9022d6c6e948",
        "type": "inject",
        "z": "fad566f5d6b0591c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "eee44fc331052894"
            ]
        ]
    },
    {
        "id": "db99bcfaacd14eec",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 140,
        "wires": []
    },
    {
        "id": "7b735d9014bd50fe",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "Periodic Get RAW Values (POST) from Python script on NMR Laptop",
        "info": "",
        "x": 280,
        "y": 480,
        "wires": []
    },
    {
        "id": "89304e466b64a716",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "inUse? / Otherwise",
        "property": "nmr1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "d9d758fb4dce347e"
            ],
            [
                "80b2129e4d5c1750"
            ]
        ]
    },
    {
        "id": "84779381a443952d",
        "type": "mqtt in",
        "z": "fad566f5d6b0591c",
        "name": "",
        "topic": "subflow/nmr1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 340,
        "wires": [
            [
                "3eff06f4becb55e6"
            ]
        ]
    },
    {
        "id": "722f337895ac40a2",
        "type": "mqtt out",
        "z": "fad566f5d6b0591c",
        "name": "",
        "topic": "subflow/nmr1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1510,
        "y": 520,
        "wires": []
    },
    {
        "id": "44373c270b1085b1",
        "type": "json",
        "z": "fad566f5d6b0591c",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1330,
        "y": 520,
        "wires": [
            [
                "722f337895ac40a2"
            ]
        ]
    },
    {
        "id": "b417d3d3ccf6a613",
        "type": "function",
        "z": "fad566f5d6b0591c",
        "name": "Convert JSON Object -> Array, store in GLOBAL",
        "func": "var resultArray = msg.payload.data || {};\nvar timestamp = msg.myepoch;\n\nvar nmr1 = global.get(\"nmr1\") || {};\n\nvar newMsg = {};\n\nnmr1.tele.state.data = resultArray;\nnmr1.tele.timestamp = timestamp;\n\nnewMsg = {\n    payload: {\n        deviceName: nmr1.deviceName,\n        deviceType: nmr1.deviceType,\n        settings: nmr1.tele.settings,\n        state: {\n            data: resultArray\n        },\n        timestamp: timestamp\n    }\n}\n\nglobal.set(\"nmr1\", nmr1);\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 520,
        "wires": [
            [
                "44373c270b1085b1"
            ]
        ]
    },
    {
        "id": "dda4f3304312adc6",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "OUTPUT",
        "info": "",
        "x": 1200,
        "y": 140,
        "wires": []
    },
    {
        "id": "b1fd0df96f06989a",
        "type": "http in",
        "z": "fad566f5d6b0591c",
        "name": "",
        "url": "/nmr1Data",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "89304e466b64a716"
            ]
        ]
    },
    {
        "id": "6db9462375b6b19e",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "Command data is POLLED from NMR Laptop side on URL: /nmr1Cmnd",
        "info": "",
        "x": 290,
        "y": 180,
        "wires": []
    },
    {
        "id": "44b62add7e2acbcd",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "NMR should send Data results in JSON format to URL: /nmr1Data",
        "info": "",
        "x": 1690,
        "y": 180,
        "wires": []
    },
    {
        "id": "72ce2c4893233c05",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "{\"payload\":{\"deviceName\":\"nmr1\",  \"inUse\":true, \"settings\":{\"command\":\"START\", \"protocol\":\"1D\"}}}",
        "info": "",
        "x": 370,
        "y": 220,
        "wires": []
    },
    {
        "id": "53e812bff00f8507",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 940,
        "y": 260,
        "wires": []
    },
    {
        "id": "b860cc3ea85f5f25",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "{\"payload\":{\"deviceName\":\"nmr1\",  \"inUse\":true, \"settings\":{\"command\":\"STOP\", \"protocol\":\"\"}}}",
        "info": "",
        "x": 360,
        "y": 260,
        "wires": []
    },
    {
        "id": "ebd5b554a8246587",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "{\"payload\": {\"deviceName\": \"nmr1\", \"deviceType\": \"NMR\", settings:{}, state: {\"protocol\":\"1D\", \"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 1690,
        "y": 220,
        "wires": []
    },
    {
        "id": "827352b102cf4669",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "Input data received on URL: /nmr1Data",
        "info": "",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "e61836a13c552da1",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "Periodic Get COMMAND Poll (POST) from Python script on NMR Laptop => RESPONSE = Command",
        "info": "",
        "x": 390,
        "y": 700,
        "wires": []
    },
    {
        "id": "e6374c283ecb6108",
        "type": "http in",
        "z": "fad566f5d6b0591c",
        "name": "",
        "url": "/nmr1CommandPoll",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "a9a2beb029e623af"
            ]
        ]
    },
    {
        "id": "a9a2beb029e623af",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "inUse? / Otherwise",
        "property": "nmr1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 740,
        "wires": [
            [
                "2e3f2769c8c11565"
            ],
            [
                "42c335f0cd9320ef"
            ]
        ]
    },
    {
        "id": "8e68014bc44156bb",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1480,
        "y": 560,
        "wires": []
    },
    {
        "id": "44dfeb512ef45233",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1480,
        "y": 640,
        "wires": []
    },
    {
        "id": "4a3d8479e8aaa660",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1480,
        "y": 860,
        "wires": []
    },
    {
        "id": "f3dc26ca94deaa4c",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1480,
        "y": 740,
        "wires": []
    },
    {
        "id": "42c335f0cd9320ef",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Error Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not in Use\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 860,
        "wires": [
            [
                "4a3d8479e8aaa660"
            ]
        ]
    },
    {
        "id": "53f470aef3e13d66",
        "type": "function",
        "z": "fad566f5d6b0591c",
        "name": "Create Response (Command & Protocol)",
        "func": "var nmr1 = global.get(\"nmr1\") || {};\n\nmsg.payload = {\n    \"deviceName\": nmr1.deviceName,\n    \"settings\" :{\n        \"command\": nmr1.tele.cmnd,\n        \"protocol\": nmr1.tele.settings.protocol\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 740,
        "wires": [
            [
                "f3dc26ca94deaa4c"
            ]
        ]
    },
    {
        "id": "2e3f2769c8c11565",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "For NMR1 device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nmr1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 740,
        "wires": [
            [
                "9cb93ef60fa3120a"
            ],
            [
                "1e585fd50e05e803"
            ]
        ]
    },
    {
        "id": "1e585fd50e05e803",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Error Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not meant for this device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 820,
        "wires": [
            [
                "d69f58697dc2107a"
            ]
        ]
    },
    {
        "id": "d69f58697dc2107a",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1480,
        "y": 820,
        "wires": []
    },
    {
        "id": "d9d758fb4dce347e",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "For NMR1 device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nmr1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "53a5cbfd4f8d3723",
                "d397fd42e41f0e84"
            ],
            [
                "abaec7d4e16b6058"
            ]
        ]
    },
    {
        "id": "0094be91558519e1",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1480,
        "y": 600,
        "wires": []
    },
    {
        "id": "80b2129e4d5c1750",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Error Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not in Use\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 640,
        "wires": [
            [
                "44dfeb512ef45233"
            ]
        ]
    },
    {
        "id": "abaec7d4e16b6058",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Error Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not meant for this device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "0094be91558519e1"
            ]
        ]
    },
    {
        "id": "d397fd42e41f0e84",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Success Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "8e68014bc44156bb"
            ]
        ]
    },
    {
        "id": "9c387fb8330dbd38",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "d": true,
        "name": "inUse? / Otherwise",
        "property": "nmr1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "3bcf6ac519bcaefb"
            ],
            []
        ]
    },
    {
        "id": "3bcf6ac519bcaefb",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "For NMR1 device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nmr1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "0edaef4290773e92",
                "d141353dfa1f1841"
            ],
            []
        ]
    },
    {
        "id": "0edaef4290773e92",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Store Command in GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "nmr1.tele.cmnd",
                "pt": "global",
                "to": "payload.settings.command",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "nmr1.tele.settings.protocol",
                "pt": "global",
                "to": "payload.settings.protocol",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "3eff06f4becb55e6",
        "type": "json",
        "z": "fad566f5d6b0591c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "9c387fb8330dbd38",
                "3bcf6ac519bcaefb"
            ]
        ]
    },
    {
        "id": "21989db55f2725b3",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "myrawdate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "17fae5bce32f9f7a",
        "type": "comment",
        "z": "fad566f5d6b0591c",
        "name": "{\"payload\":{\"deviceName\":\"nmr1\",  \"inUse\":true, \"settings\":{\"command\":\"POLL\", \"protocol\":\"\"}}}",
        "info": "",
        "x": 360,
        "y": 300,
        "wires": []
    },
    {
        "id": "9cb93ef60fa3120a",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "For POLL command?",
        "property": "payload.settings.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "POLL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 740,
        "wires": [
            [
                "53f470aef3e13d66"
            ],
            [
                "e7a862f93955ab39"
            ]
        ]
    },
    {
        "id": "e7a862f93955ab39",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "Error Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not a Poll command\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "28ebed2a7cb3773a"
            ]
        ]
    },
    {
        "id": "28ebed2a7cb3773a",
        "type": "http response",
        "z": "fad566f5d6b0591c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1480,
        "y": 780,
        "wires": []
    },
    {
        "id": "53a5cbfd4f8d3723",
        "type": "simpletime",
        "z": "fad566f5d6b0591c",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 770,
        "y": 520,
        "wires": [
            [
                "b417d3d3ccf6a613",
                "21989db55f2725b3"
            ]
        ]
    },
    {
        "id": "09bfb56294f01b19",
        "type": "switch",
        "z": "fad566f5d6b0591c",
        "name": "For this device / Not for this device",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nmr1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 380,
        "wires": [
            [
                "d141353dfa1f1841"
            ],
            []
        ]
    },
    {
        "id": "d141353dfa1f1841",
        "type": "change",
        "z": "fad566f5d6b0591c",
        "name": "SET inUse",
        "rules": [
            {
                "t": "set",
                "p": "nmr1.inUse",
                "pt": "global",
                "to": "payload.inUse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d0b56a9f3ab70769",
        "type": "mqtt in",
        "z": "948c434f9f4c530f",
        "name": "",
        "topic": "subflow/nmr1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 380,
        "wires": [
            [
                "04a8bfb7fe4e3f26"
            ]
        ]
    },
    {
        "id": "4bd277874407c73d",
        "type": "mqtt out",
        "z": "948c434f9f4c530f",
        "name": "",
        "topic": "subflow/nmr1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 970,
        "y": 280,
        "wires": []
    },
    {
        "id": "c9ea4564dbd69de4",
        "type": "function",
        "z": "948c434f9f4c530f",
        "name": "Set InUse Flag",
        "func": "var nmr1 = global.get(\"nmr1\") || {};\n\nnmr1.inUse = false;\n\nglobal.set(\"nmr1\", nmr1);\n\nmsg.payload = nmr1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "49f203160792c42b",
        "type": "inject",
        "z": "948c434f9f4c530f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "c9ea4564dbd69de4"
            ]
        ]
    },
    {
        "id": "04a8bfb7fe4e3f26",
        "type": "json",
        "z": "948c434f9f4c530f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "c17df383734ea306"
            ]
        ]
    },
    {
        "id": "cdd6bcd8c530c598",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "OUTPUT",
        "info": "",
        "x": 1180,
        "y": 80,
        "wires": []
    },
    {
        "id": "c17df383734ea306",
        "type": "switch",
        "z": "948c434f9f4c530f",
        "name": "Array / otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "f9ef06df437c4100"
            ],
            [
                "333903d0a0822b55"
            ]
        ]
    },
    {
        "id": "5a9fd01028475a39",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "{\"payload\": {\"deviceName\": \"nmr1\", \"deviceType\": \"NMR\", settings:{}, state: {\"protocol\":\"1D\", \"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 1670,
        "y": 160,
        "wires": []
    },
    {
        "id": "dbea0be03e84a5a1",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "INPUT",
        "info": "",
        "x": 90,
        "y": 80,
        "wires": []
    },
    {
        "id": "403b029bc0044461",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "{\"payload\":{\"deviceName\":\"nmr1\", \"inUse\":true, \"settings\":{\"command\":\"STOP\", \"protocol\":\"\"}}}",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "50a45c8cd7c8b5e7",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "{\"payload\":{\"deviceName\":\"nmr1\", \"inUse\":true, \"settings\":{\"command\":\"START\", \"protocol\":\"1D\"}}}",
        "info": "",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "0d30dc0964048f49",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "Input data received on URL: /nmr1Data",
        "info": "",
        "x": 1270,
        "y": 120,
        "wires": []
    },
    {
        "id": "01ba80a16ed852b8",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "c88c69d8ad6853e4",
        "type": "json",
        "z": "948c434f9f4c530f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "8e09b47a594f2a05"
            ]
        ]
    },
    {
        "id": "8e09b47a594f2a05",
        "type": "switch",
        "z": "948c434f9f4c530f",
        "name": "Command for this Device?",
        "property": "payload.deviceName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nmr1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "8b8c9cdab2edef99",
                "43c6898c89c3eab3"
            ],
            []
        ]
    },
    {
        "id": "7068c77405b88179",
        "type": "json",
        "z": "948c434f9f4c530f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 790,
        "y": 280,
        "wires": [
            [
                "4bd277874407c73d"
            ]
        ]
    },
    {
        "id": "8b8c9cdab2edef99",
        "type": "change",
        "z": "948c434f9f4c530f",
        "name": "Save in Global",
        "rules": [
            {
                "t": "set",
                "p": "nmr1.tele.cmnd",
                "pt": "global",
                "to": "payload.settings.command",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "nmr1.tele.settings.protocol",
                "pt": "global",
                "to": "payload.settings.protocol",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "7068c77405b88179"
            ]
        ]
    },
    {
        "id": "66ae1ca3f53ec7ac",
        "type": "comment",
        "z": "948c434f9f4c530f",
        "name": "Command data is POLLED from NMR Laptop side on URL: /nmr1Cmnd",
        "info": "",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "f9ef06df437c4100",
        "type": "change",
        "z": "948c434f9f4c530f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NO DATA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "333903d0a0822b55",
        "type": "change",
        "z": "948c434f9f4c530f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "timestamp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "43c6898c89c3eab3",
        "type": "function",
        "z": "948c434f9f4c530f",
        "name": "READ & SET InUse Flag",
        "func": "var inUse = msg.payload.inUse || false;\nvar nmr1 = global.get(\"nmr1\") || {};\n\nnmr1.inUse = inUse;\n\nglobal.set(\"nmr1\", nmr1);\n\nmsg.payload = nmr1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "67c0ea51c99244cf",
        "type": "ui_text_input",
        "z": "9ae6e4df5dd67ca7",
        "name": "",
        "label": "Shell Terminal",
        "tooltip": "Sends user submitted string to Python shell",
        "group": "9db79d9e41b441a1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 460,
        "y": 200,
        "wires": [
            [
                "80ac39f87d967518"
            ]
        ]
    },
    {
        "id": "80ac39f87d967518",
        "type": "ui_template",
        "z": "9ae6e4df5dd67ca7",
        "group": "56c7a41708ec20f4",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <h2>Terminal</h2>\n    <label for=\"input\">Input:</label>\n    <input type=\"text\" id=\"input\" ng-model=\"inputText\" ng-keypress=\"sendInput($event)\">\n    <br>\n    <label for=\"output\">Output:</label>\n    <div id=\"output\">{{outputText}}</div>\n</div>\n\n<script>\n    // Function to handle sending input\n    $scope.sendInput = function(event) {\n        if (event.keyCode === 13) { // Enter key pressed\n            // Send input to output\n            $scope.outputText = $scope.inputText;\n            // Clear input field\n            $scope.inputText = '';\n        }\n    };\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "71de27c4452063b9",
        "type": "ui_text_input",
        "z": "9f06e317cceaf3a2",
        "name": "",
        "label": "Shell Terminal",
        "tooltip": "",
        "group": "1853ba21.f1b306",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 340,
        "y": 220,
        "wires": [
            [
                "6e5458dfc7c99e05"
            ]
        ]
    },
    {
        "id": "6e5458dfc7c99e05",
        "type": "function",
        "z": "9f06e317cceaf3a2",
        "name": "function 58",
        "func": "msg.terminal=msg.payload\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "c323183afcb2b95e"
            ]
        ]
    },
    {
        "id": "c323183afcb2b95e",
        "type": "ui_text",
        "z": "9f06e317cceaf3a2",
        "group": "2f705b1352bd912f",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Terminal input",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "ee13c0aef809fcc8",
        "type": "change",
        "z": "db23fe724cb2791c",
        "name": "Enable UI component",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7c7e234781577c35",
        "type": "change",
        "z": "db23fe724cb2791c",
        "name": "Disable UI component",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "595ad7b9acdfe50c",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "8323754c9bd9ad4b",
        "type": "catch",
        "z": "e4a949dd53517857",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "4f9dddd480142920"
            ]
        ]
    },
    {
        "id": "4f9dddd480142920",
        "type": "debug",
        "z": "e4a949dd53517857",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "aa7978283e8f70b9",
        "type": "ui_switch",
        "z": "e4a949dd53517857",
        "name": "Switch RECORD",
        "label": "RECORD",
        "tooltip": "",
        "group": "c0b5f15fd7e09a38",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 1420,
        "wires": [
            [
                "fb5df71aea246fcd"
            ]
        ]
    },
    {
        "id": "10ddc220861d42ce",
        "type": "ui_text_input",
        "z": "e4a949dd53517857",
        "name": "EditText Test Name",
        "label": "Test Name",
        "tooltip": "Less than 100 Chars",
        "group": "16125889e6fb2165",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "4f481e257abd48df"
            ]
        ]
    },
    {
        "id": "7627ae4ce1b3be45",
        "type": "ui_text_input",
        "z": "e4a949dd53517857",
        "name": "EditText Test Description",
        "label": "Test Description",
        "tooltip": "Less than 2048 Chars",
        "group": "16125889e6fb2165",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "be01f6800366c950"
            ]
        ]
    },
    {
        "id": "f94174539e8e04a8",
        "type": "ui_text_input",
        "z": "e4a949dd53517857",
        "name": "EditText Tester Name",
        "label": "Tester Name",
        "tooltip": "Less than 2048 Chars",
        "group": "16125889e6fb2165",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "3dcaddab84ff6e99"
            ]
        ]
    },
    {
        "id": "5307b96d5c21c373",
        "type": "ui_button",
        "z": "e4a949dd53517857",
        "name": "Button RUN",
        "group": "c0b5f15fd7e09a38",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "RUN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 860,
        "wires": [
            [
                "21c32104bca95639",
                "2afe0428c241179a",
                "05a7a63bc3f2dae9"
            ]
        ]
    },
    {
        "id": "8d5f5c609bb95357",
        "type": "ui_button",
        "z": "e4a949dd53517857",
        "name": "Button STOP",
        "group": "c0b5f15fd7e09a38",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "STOP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "b2c067fa79fcd0c8",
                "d1365488592a3e4a",
                "a235b69ea83e0646"
            ]
        ]
    },
    {
        "id": "89980974a5c317eb",
        "type": "ui_list",
        "z": "e4a949dd53517857",
        "group": "c0b5f15fd7e09a38",
        "name": "List TestList",
        "order": 1,
        "width": 6,
        "height": 8,
        "lineType": "one",
        "actionType": "click",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1110,
        "y": 840,
        "wires": [
            [
                "97ea8f2f3d7dbce2"
            ]
        ]
    },
    {
        "id": "aecda73a4846894f",
        "type": "ui_button",
        "z": "e4a949dd53517857",
        "name": "Button CREATE",
        "group": "16125889e6fb2165",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CREATE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 580,
        "wires": [
            [
                "aa3f3f295d7d9ebc"
            ]
        ]
    },
    {
        "id": "3f24224f2fdaef4d",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Get Test List",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "SELECT * from testlist;",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "74dd95b275dc67a5"
            ]
        ]
    },
    {
        "id": "e0f601ac68790fad",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "c692e3d68400496a"
            ]
        ]
    },
    {
        "id": "c0e04fc655bf08b5",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Enable",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "aecda73a4846894f"
            ]
        ]
    },
    {
        "id": "ade2b4de549a6064",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Disable",
        "props": [
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 100,
        "y": 860,
        "wires": [
            [
                "8d5f5c609bb95357",
                "5307b96d5c21c373"
            ]
        ]
    },
    {
        "id": "c692e3d68400496a",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Empty / Otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "ff12fb8960f71c61"
            ],
            [
                "32df988f2cc8b935"
            ]
        ]
    },
    {
        "id": "ff12fb8960f71c61",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create empty Test List",
        "func": "msg.payload = \n    [\n        {\n            \"title\": \"Test Name\",\n            \"description\": -1\n        }\n    ]\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 720,
        "wires": [
            [
                "89980974a5c317eb"
            ]
        ]
    },
    {
        "id": "94ecc6d0b26bf67e",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Clear (Empty)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "10ddc220861d42ce",
                "7627ae4ce1b3be45",
                "f94174539e8e04a8",
                "36feb5e5f0f0c518"
            ]
        ]
    },
    {
        "id": "f81f5e37132739d0",
        "type": "ui_ui_control",
        "z": "e4a949dd53517857",
        "name": "",
        "events": "all",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "74dd95b275dc67a5"
            ]
        ]
    },
    {
        "id": "5c992a3077e94298",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "CREATE Test",
        "info": "",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "58e7715dfe94f32e",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "SELECT Test",
        "info": "",
        "x": 90,
        "y": 640,
        "wires": []
    },
    {
        "id": "4f481e257abd48df",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testName",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "be01f6800366c950",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testDescription",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3dcaddab84ff6e99",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testerName",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "aa3f3f295d7d9ebc",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Add Test to DB",
        "func": "var testName = flow.get(\"testName\") || \"\";\nvar testDescription = flow.get(\"testDescription\") || \"\";\nvar testerName = flow.get(\"testerName\") || \"\";\nvar testScript = flow.get(\"testScript\") || \"\";\nvar TestSetup = global.get(\"TestSetup\") || \"\";\n\nvar msgError = {};\n\nmsg.topic = \"INSERT INTO testlist (nameTest, description, nameTester, testScript, fumehoodId) VALUES ('\" + testName + \"', '\" + \n                                                                                                            testDescription + \"', '\" +\n                                                                                                            testerName + \"' , '\" + \n                                                                                                            testScript+ \"', '\" +\n                                                                                                            TestSetup.fumehoodId + \"');\"\n\nif ((testName === \"\") || (testDescription === \"\") || (testerName === \"\") || (testScript === \"\")) {\n    return [null, msgError]\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 580,
        "wires": [
            [
                "894ef68ed5b4db06"
            ],
            [
                "b969cb78ea3d0ec4"
            ]
        ]
    },
    {
        "id": "894ef68ed5b4db06",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "aa538ec09cd593ae"
            ]
        ]
    },
    {
        "id": "aa538ec09cd593ae",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "REFRESH Testlist",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 640,
        "wires": [
            [
                "74dd95b275dc67a5"
            ]
        ]
    },
    {
        "id": "32df988f2cc8b935",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create Test List & Python Script",
        "func": "var testlist = msg.payload || {};\nvar testlistLength = testlist.length;\n\nvar testlistArray = [];\nvar testlistEntry = {};\n\nfor (var cntr = 0; cntr < testlistLength; cntr++) {\n    testlistEntry = {\n        title : testlist[cntr].id + \" - \" + testlist[cntr].nameTester + \" - \" + testlist[cntr].nameTest + \" - \" + testlist[cntr].description,\n        description : testlist[cntr].id\n    }\n    testlistArray.push(testlistEntry);\n    testlistEntry = {};\n} \n\nvar newMsgTestlist = {\n    payload : testlistArray\n    };\n   \nreturn [newMsgTestlist];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 760,
        "wires": [
            [
                "89980974a5c317eb"
            ]
        ]
    },
    {
        "id": "5ba1451ecb8e9e7b",
        "type": "ui_text",
        "z": "e4a949dd53517857",
        "group": "c0b5f15fd7e09a38",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Text Selected Test",
        "label": "Test Selected",
        "format": "{{msg.payload.title}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1310,
        "y": 880,
        "wires": []
    },
    {
        "id": "97ea8f2f3d7dbce2",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Empty / Otherwise",
        "property": "payload.title",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Test Name",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 840,
        "wires": [
            [],
            [
                "5ba1451ecb8e9e7b",
                "c98e8740a0cef5a4",
                "a4342878d6d483db",
                "32f0c0ca4df867ae",
                "85fb5915e074bfc5"
            ]
        ]
    },
    {
        "id": "557b07fc1001e6a7",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Disable",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "0b7546f3019568ae"
            ]
        ]
    },
    {
        "id": "763aadc8cea68db6",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "INIT: Selected Testlist ID",
        "info": "",
        "x": 130,
        "y": 160,
        "wires": []
    },
    {
        "id": "b3f19d2575186a9a",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "INIT TestSetup.testlistNrSelected & TestSetup.record",
        "func": "var macAddr = msg.payload || \"\";\n\nvar TestSetup = {\n    testlistNrSelected: -1,\n    testrunSelected: -1,\n    fumehoodId: macAddr,\n    record : false,\n    testRunning : false,\n    testScript : \"\",\n    testScriptLock: false\n}\n\nglobal.set(\"TestSetup\", TestSetup);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c98e8740a0cef5a4",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "STORE: TestSetup.testlistNrSelected",
        "rules": [
            {
                "t": "set",
                "p": "TestSetup.testlistNrSelected",
                "pt": "global",
                "to": "payload.description",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "TestSetup.record",
                "pt": "global",
                "to": "TestSetup.record",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "fb5df71aea246fcd",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "STORE: TestSetup.record to GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "TestSetup.record",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "8ecacd522b47f067",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "INIT: STOP Recording",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "aa7978283e8f70b9"
            ]
        ]
    },
    {
        "id": "62685875d7078a24",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 830,
        "y": 860,
        "wires": [
            [
                "8d5f5c609bb95357"
            ],
            [
                "5307b96d5c21c373",
                "aa7978283e8f70b9",
                "e6932ab439001af1",
                "36feb5e5f0f0c518",
                "f94174539e8e04a8",
                "7627ae4ce1b3be45",
                "10ddc220861d42ce",
                "aecda73a4846894f",
                "c04d5b3c3afaa2e5",
                "89980974a5c317eb"
            ]
        ]
    },
    {
        "id": "6805d4015a0e2aba",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 750,
        "y": 1140,
        "wires": [
            [
                "5307b96d5c21c373",
                "aa7978283e8f70b9",
                "e6932ab439001af1",
                "36feb5e5f0f0c518",
                "aecda73a4846894f",
                "f94174539e8e04a8",
                "7627ae4ce1b3be45",
                "10ddc220861d42ce",
                "c04d5b3c3afaa2e5",
                "89980974a5c317eb"
            ],
            [
                "8d5f5c609bb95357"
            ]
        ]
    },
    {
        "id": "a4342878d6d483db",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 1550,
        "y": 780,
        "wires": [
            [
                "5307b96d5c21c373"
            ],
            []
        ]
    },
    {
        "id": "36feb5e5f0f0c518",
        "type": "ui_upload",
        "z": "e4a949dd53517857",
        "group": "16125889e6fb2165",
        "title": "Upload Python Script",
        "accept": "",
        "name": "Upload Python Script",
        "order": 6,
        "width": 0,
        "height": 0,
        "chunk": 256,
        "transfer": "text",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "228a2344c737eaf4"
            ]
        ]
    },
    {
        "id": "e6932ab439001af1",
        "type": "ui_button",
        "z": "e4a949dd53517857",
        "name": "Button Lock Script",
        "group": "c0b5f15fd7e09a38",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Lock Script",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Are you sure?",
        "payloadType": "str",
        "topic": "Lock Python Script",
        "topicType": "str",
        "x": 370,
        "y": 440,
        "wires": [
            [
                "68f288c1ba5b020c"
            ]
        ]
    },
    {
        "id": "68f288c1ba5b020c",
        "type": "ui_toast",
        "z": "e4a949dd53517857",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "30485dd3409490ce"
            ]
        ]
    },
    {
        "id": "fb45af5509cec5d7",
        "type": "ui_list",
        "z": "e4a949dd53517857",
        "group": "c0b5f15fd7e09a38",
        "name": "List TestRuns",
        "order": 2,
        "width": 6,
        "height": 8,
        "lineType": "one",
        "actionType": "click",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1940,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "32f0c0ca4df867ae",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "SELECT Testrun list data for selected testlist item",
        "func": "var testlistId = msg.payload.description || -1;\n\nvar newMsg = {};\n\nif (testlistId >= 0) {\n    newMsg = {\n        topic: \"SELECT * FROM testruns where testlistId = \" + testlistId + \";\"\n    }\n} else {\n    return;\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 960,
        "wires": [
            [
                "436b1bba9953f9b2"
            ]
        ]
    },
    {
        "id": "436b1bba9953f9b2",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "6dc293a953bca401"
            ]
        ]
    },
    {
        "id": "6dc293a953bca401",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Empty / Otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1020,
        "wires": [
            [
                "d890d7d5cbdda392"
            ],
            [
                "4fab0aaa8c0e7424"
            ]
        ]
    },
    {
        "id": "d890d7d5cbdda392",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create empty Testrun List",
        "func": "msg.payload = \n    [\n        {\n            \"title\": \"No Testruns\",\n            \"description\": -1\n        }\n    ]\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1020,
        "wires": [
            [
                "fb45af5509cec5d7"
            ]
        ]
    },
    {
        "id": "4fab0aaa8c0e7424",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create Testrun List",
        "func": "var testruns = msg.payload || {};\nvar testrunlistLength = testruns.length;\n\nvar testrunlistArray = [];\nvar testrunlistEntry = {};\n\nvar formatDate = \"DD.MM.YYYY HH:mm:ss\"; // the string that represents desired format.\n\nfor (var cntr = 0; cntr < testrunlistLength; cntr++) {\n    var startDate = new Date(testruns[cntr].startTime);\n    var stopDate = new Date(testruns[cntr].stopTime);\n    var newStartDateTime = \"\";\n    var newStopDateTime = \"\";\n\n    var momObjStart = moment(testruns[cntr].startTime);\n    var momObjStartString = momObjStart.format(formatDate);\n\n    var momObjStop = moment(testruns[cntr].stopTime);\n    var momObjStopString = momObjStop.format(formatDate);\n\n    testrunlistEntry = {\n        title: testruns[cntr].id + \" - Start (\" + momObjStartString + \") - Stop (\" + momObjStopString + \")\",\n        description : testruns[cntr].id\n    }\n    testrunlistArray.push(testrunlistEntry);\n    testrunlistEntry = {};\n} \n\nvar newMsg = {\n    payload : testrunlistArray\n    };\n   \nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 1670,
        "y": 1060,
        "wires": [
            [
                "fb45af5509cec5d7"
            ]
        ]
    },
    {
        "id": "85fb5915e074bfc5",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "SELECT Python script from testlist",
        "func": "var testlistId = msg.payload.description || -1;\n\nvar newMsg = {};\n\nif (testlistId >= 0) {\n    newMsg = {\n        topic: \"SELECT id, testScript, lockScript FROM testlist where id = \" + testlistId + \";\"\n    }\n} else {\n    return;\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1100,
        "wires": [
            [
                "477894dd46dc3c53"
            ]
        ]
    },
    {
        "id": "477894dd46dc3c53",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 1730,
        "y": 1100,
        "wires": [
            [
                "a886ab0869168df4",
                "a246f93fd94cb42d"
            ]
        ]
    },
    {
        "id": "a886ab0869168df4",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Empty / Otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1160,
        "wires": [
            [
                "5b8bc3f5b5431ec3"
            ],
            [
                "208b6b69d4404c68"
            ]
        ]
    },
    {
        "id": "5b8bc3f5b5431ec3",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create empty Python Script",
        "func": "msg.payload = \n    [\n        {\n            \"title\": \"No Python Script\",\n            \"description\": -1\n        }\n    ]\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "208b6b69d4404c68",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Create Python Script",
        "func": "var pythonScript = msg.payload || {};\nvar pythonScriptlistLength = pythonScript.length;\n\nvar pythonScriptArray = [];\nvar pythonScriptEntry = {};\n\nfor (var cntr = 0; cntr < pythonScriptlistLength; cntr++) {\n    pythonScriptEntry = {\n        title: pythonScript[cntr].testScript.toString(),\n        description: pythonScript[cntr].id,\n        locked: pythonScript[cntr].lockScript\n    }\n    pythonScriptArray.push(pythonScriptEntry);\n    pythonScriptEntry = {};\n} \n\nvar newMsg = {\n    payload: pythonScriptArray\n    };\n   \nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1200,
        "wires": [
            [
                "fa6feb353d47138c",
                "5cbc9b3c98b92b81"
            ]
        ]
    },
    {
        "id": "228a2344c737eaf4",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testScript",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4dfbf30de7c65b28",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "ALL fields above must be present before test can be created !!!",
        "info": "",
        "x": 240,
        "y": 540,
        "wires": []
    },
    {
        "id": "30485dd3409490ce",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testScriptLock",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 480,
        "wires": [
            [
                "a64eab2468833462"
            ]
        ]
    },
    {
        "id": "ee9cd82df34debdb",
        "type": "debug",
        "z": "e4a949dd53517857",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1560,
        "y": 420,
        "wires": []
    },
    {
        "id": "fa6feb353d47138c",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "Store Selected to GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "TestSetup.testScript",
                "pt": "global",
                "to": "payload[0].title",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "TestSetup.testScriptLock",
                "pt": "global",
                "to": "payload[0].locked",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a6db3cfe7e25722e",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "STORE New Test settings in FLOW",
        "info": "",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "fd451880a8647810",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 1090,
        "y": 480,
        "wires": [
            [],
            [
                "36feb5e5f0f0c518"
            ]
        ]
    },
    {
        "id": "21c32104bca95639",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "Clear Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 860,
        "wires": [
            [
                "62685875d7078a24"
            ]
        ]
    },
    {
        "id": "b2c067fa79fcd0c8",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "Clear Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1140,
        "wires": [
            [
                "6805d4015a0e2aba"
            ]
        ]
    },
    {
        "id": "a64eab2468833462",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "OK / Cancel",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 480,
        "wires": [
            [
                "fd451880a8647810",
                "561568cdf8cc15d8"
            ],
            []
        ]
    },
    {
        "id": "5cbc9b3c98b92b81",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Not Locked / Locked",
        "property": "payload[0].locked",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1680,
        "y": 1240,
        "wires": [
            [
                "faac3da60e0bd1b4"
            ],
            [
                "9bb06eaec592c0b5"
            ]
        ]
    },
    {
        "id": "faac3da60e0bd1b4",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 1950,
        "y": 1240,
        "wires": [
            [
                "36feb5e5f0f0c518"
            ],
            []
        ]
    },
    {
        "id": "9bb06eaec592c0b5",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 1950,
        "y": 1280,
        "wires": [
            [],
            [
                "36feb5e5f0f0c518"
            ]
        ]
    },
    {
        "id": "3448337a91c6e7bf",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 1370,
        "y": 420,
        "wires": [
            [
                "ee9cd82df34debdb"
            ]
        ]
    },
    {
        "id": "561568cdf8cc15d8",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "UPDATE Lock Script in DB",
        "func": "var TestSetup = global.get(\"TestSetup\") || -1;\n\nmsg.topic = \"UPDATE testlist SET lockScript = 1 WHERE id = \" + TestSetup.testlistNrSelected + \";\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "3448337a91c6e7bf"
            ]
        ]
    },
    {
        "id": "ece5ff7fe8a4515d",
        "type": "mqtt out",
        "z": "e4a949dd53517857",
        "name": "",
        "topic": "test/settings/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 990,
        "y": 940,
        "wires": []
    },
    {
        "id": "2afe0428c241179a",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "TEST Run Script command & STORE in GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.running",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.script",
                "pt": "msg",
                "to": "TestSetup.testScript",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "TestSetup.testRunning",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 940,
        "wires": [
            [
                "ece5ff7fe8a4515d"
            ]
        ]
    },
    {
        "id": "d1365488592a3e4a",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "TEST Stop Script command & STORE in GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.running",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.script",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "TestSetup.testRunning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1180,
        "wires": [
            [
                "1ddc15c182174427"
            ]
        ]
    },
    {
        "id": "1ddc15c182174427",
        "type": "mqtt out",
        "z": "e4a949dd53517857",
        "name": "",
        "topic": "test/settings/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 990,
        "y": 1180,
        "wires": []
    },
    {
        "id": "218ec16429eae4e5",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "TEST Commands (N.R -> Python)",
        "info": "",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ddd21eb1a0e88ed",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Topic: test/settings/",
        "info": "",
        "x": 530,
        "y": 80,
        "wires": []
    },
    {
        "id": "5cfebd97bc0dd265",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "payload = {running: true, script: {[      {         \"deviceName\":\"sf10Vapourtec1\",         \"inUse\":true,         \"settings\":{\"command\":\"SET\",\"mode\":\"FLOW\",\"flowrate\":0.1},         \"topic\":\"topic_SF10\",         \"client\":\"client\"     },     {         \"deviceName\": \"flowsynmaxi2\",         \"settings\": {             \"subDevice\": \"PumpBFlowRate\",             \"command\": \"SET\",             \"value\": 0         },         \"topic\":\"topic_flowsynmax2\",         \"client\":\"client\"     }]}}",
        "info": "",
        "x": 1430,
        "y": 120,
        "wires": []
    },
    {
        "id": "b969cb78ea3d0ec4",
        "type": "ui_toast",
        "z": "e4a949dd53517857",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "ERROR: Enter all values",
        "name": "",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "f4481f8ba4af6177",
        "type": "inject",
        "z": "e4a949dd53517857",
        "name": "Clear (Empty)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"\",\"description\":\"\"}",
        "payloadType": "json",
        "x": 1660,
        "y": 1320,
        "wires": [
            [
                "866daaea1926cedd",
                "8104b02b4c4553f3"
            ]
        ]
    },
    {
        "id": "866daaea1926cedd",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "Store Selected to GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "testScript",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "006510d3ca648169",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "START command to Python",
        "info": "",
        "x": 1040,
        "y": 900,
        "wires": []
    },
    {
        "id": "fd939ed8d1103139",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "STOP command to Python",
        "info": "",
        "x": 1030,
        "y": 1140,
        "wires": []
    },
    {
        "id": "dd58f4c6b9491010",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "CREATE TestRun DB Entry",
        "info": "",
        "x": 1040,
        "y": 1000,
        "wires": []
    },
    {
        "id": "05a7a63bc3f2dae9",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "INSERT into testruns",
        "func": "var TestSetup = global.get(\"TestSetup\") || -1;\n\nmsg.topic = \"INSERT INTO testruns (testlistId, recorded) VALUES (\" + TestSetup.testlistNrSelected + \", \" + TestSetup.record + \");\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "10d0c991c6134866"
            ]
        ]
    },
    {
        "id": "10d0c991c6134866",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "8b6f7584a1ae5e2b"
            ]
        ]
    },
    {
        "id": "3fb93d28abaa8cca",
        "type": "ui_text",
        "z": "e4a949dd53517857",
        "group": "c0b5f15fd7e09a38",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Text Test Status",
        "label": "Test Status",
        "format": "{{msg.payload.status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 400,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d76c09d6f8ee3624",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "",
        "topic": "test/status/",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 1560,
        "wires": [
            [
                "7ff4340e9f5f33ad",
                "9bb0821cc5c9c00b"
            ]
        ]
    },
    {
        "id": "a1df19675f88067b",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "TEST Status(Python -> N.R)",
        "info": "",
        "x": 2720,
        "y": 40,
        "wires": []
    },
    {
        "id": "51166f0476b94217",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Topic: test/status/",
        "info": "",
        "x": 2680,
        "y": 80,
        "wires": []
    },
    {
        "id": "4f0363ff394e97b1",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "payload = {running: false, status: \" Status to display\"}",
        "info": "",
        "x": 2790,
        "y": 120,
        "wires": []
    },
    {
        "id": "c04d5b3c3afaa2e5",
        "type": "delay",
        "z": "e4a949dd53517857",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 800,
        "wires": [
            [
                "aa538ec09cd593ae"
            ]
        ]
    },
    {
        "id": "8b6f7584a1ae5e2b",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "STORE testrunId in GLOBAL",
        "rules": [
            {
                "t": "set",
                "p": "TestSetup.testrunSelected",
                "pt": "global",
                "to": "payload.insertId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a235b69ea83e0646",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "4adae06be7f1b00d"
            ]
        ]
    },
    {
        "id": "4adae06be7f1b00d",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "UPDATE testrun with STOP details",
        "func": "var myymd = msg.myymd  || \"\";\nvar mytimes = msg.mytimes || \"\";\nvar TestSetup = global.get(\"TestSetup\") || -1; \nvar date = myymd + \" \" + mytimes;\n\nmsg.topic = \"UPDATE testruns SET stopTime = \\\"\" + date + \"\\\" WHERE id = \" + TestSetup.testrunSelected + \";\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1240,
        "wires": [
            [
                "6e6d0dd5e45ae16a"
            ]
        ]
    },
    {
        "id": "6e6d0dd5e45ae16a",
        "type": "mysql",
        "z": "e4a949dd53517857",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "7497a33bd07235e8"
            ]
        ]
    },
    {
        "id": "5a9e5704fdc0de8e",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Display Status Msgs from Python",
        "info": "",
        "x": 150,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7497a33bd07235e8",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "SELECT testruns for selected testlist",
        "func": "var TestSetup = global.get(\"TestSetup\") || -1;\n\nvar newMsg = {};\n\nif (TestSetup.testlistNrSelected >= 0) {\n    newMsg = {\n        topic: \"SELECT * FROM testruns where testlistId = \" + TestSetup.testlistNrSelected + \";\"\n    }\n} else {\n    return;\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1300,
        "wires": [
            [
                "436b1bba9953f9b2"
            ]
        ]
    },
    {
        "id": "74dd95b275dc67a5",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "SELECT * from Testlist WHERE fumehoodId = {this Pi]",
        "func": "var TestSetup = global.get(\"TestSetup\") || {};\n\nmsg.topic = \"SELECT * from testlist WHERE fumehoodId = '\" + TestSetup.fumehoodId + \"';\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 680,
        "wires": [
            [
                "e0f601ac68790fad"
            ]
        ]
    },
    {
        "id": "288c3f507ba178b1",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Read ALL MQTT device Command & Status topics, Package & write to MongoDB",
        "info": "",
        "x": 300,
        "y": 1680,
        "wires": []
    },
    {
        "id": "4ddc47e5fdd1d5be",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotchip1 CMND",
        "topic": "subflow/hotchip1/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1740,
        "wires": [
            [
                "003dec913c667033"
            ]
        ]
    },
    {
        "id": "d215a07307c40d5c",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotchip1 TELE",
        "topic": "subflow/hotchip1/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1800,
        "wires": [
            [
                "6ef43ff2362c5218"
            ]
        ]
    },
    {
        "id": "7e123a08bd9fc927",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create CMND Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"temperature\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 1740,
        "wires": [
            [
                "d95bd2dd5eb8f847"
            ]
        ]
    },
    {
        "id": "003dec913c667033",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 1740,
        "wires": [
            [
                "7e123a08bd9fc927"
            ]
        ]
    },
    {
        "id": "015365232b2d2503",
        "type": "link out",
        "z": "e4a949dd53517857",
        "name": "MongoDB Commands",
        "mode": "link",
        "links": [
            "dcfe1a1f2c81a787"
        ],
        "x": 1475,
        "y": 1740,
        "wires": []
    },
    {
        "id": "6ef43ff2362c5218",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 1800,
        "wires": [
            [
                "7368fbd55431b0fd"
            ]
        ]
    },
    {
        "id": "b2c826526698be0b",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotchip2 CMND",
        "topic": "subflow/hotchip2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1860,
        "wires": [
            [
                "003dec913c667033"
            ]
        ]
    },
    {
        "id": "6bf52ff6b02cc48d",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotchip2 TELE",
        "topic": "subflow/hotchip2/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1920,
        "wires": [
            [
                "6ef43ff2362c5218"
            ]
        ]
    },
    {
        "id": "7368fbd55431b0fd",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create DATA Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"temperature\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 1800,
        "wires": [
            [
                "4dfdc0c8cde8488a"
            ]
        ]
    },
    {
        "id": "44039dab1a2459e5",
        "type": "link out",
        "z": "e4a949dd53517857",
        "name": "MongoDB Data",
        "mode": "link",
        "links": [
            "c8ee7a3892706b86"
        ],
        "x": 1475,
        "y": 1800,
        "wires": []
    },
    {
        "id": "5af03c8796f947b9",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotcoil1 CMND",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1980,
        "wires": [
            [
                "003dec913c667033"
            ]
        ]
    },
    {
        "id": "687504086182cc70",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotcoil1 TELE",
        "topic": "subflow/hotcoil1/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 2040,
        "wires": [
            [
                "6ef43ff2362c5218"
            ]
        ]
    },
    {
        "id": "689bccdd2a6d5253",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotcoil2 CMND",
        "topic": "subflow/hotcoil2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 2100,
        "wires": [
            [
                "003dec913c667033"
            ]
        ]
    },
    {
        "id": "9ced334a9ffe430c",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "Hotcoil2 TELE",
        "topic": "subflow/hotcoil2/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 2160,
        "wires": [
            [
                "6ef43ff2362c5218"
            ]
        ]
    },
    {
        "id": "b9fbe7f53c8ade09",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "FlowSynMaxi2 CMND",
        "topic": "subflow/flowsynmaxi2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2220,
        "wires": [
            [
                "2a05299cb1794dff"
            ]
        ]
    },
    {
        "id": "c0c24c0ab463bc6c",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "FlowSynMaxi2 TELE",
        "topic": "subflow/flowsynmaxi2/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 2280,
        "wires": [
            [
                "5375d256b191ea3d"
            ]
        ]
    },
    {
        "id": "d95bd2dd5eb8f847",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Test: Running / Not Running",
        "property": "TestSetup.testRunning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 1740,
        "wires": [
            [
                "14a9b26be977a98d"
            ],
            []
        ]
    },
    {
        "id": "14a9b26be977a98d",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Record Test: Yes / No",
        "property": "TestSetup.record",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1300,
        "y": 1740,
        "wires": [
            [
                "015365232b2d2503"
            ],
            []
        ]
    },
    {
        "id": "4dfdc0c8cde8488a",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Test: Running / Not Running",
        "property": "TestSetup.testRunning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 1800,
        "wires": [
            [
                "049f389104f64de3"
            ],
            []
        ]
    },
    {
        "id": "049f389104f64de3",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Record Test: Yes / No",
        "property": "TestSetup.record",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1300,
        "y": 1800,
        "wires": [
            [
                "44039dab1a2459e5"
            ],
            []
        ]
    },
    {
        "id": "2a05299cb1794dff",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2220,
        "wires": [
            [
                "db6a96e51b3b8fb4"
            ]
        ]
    },
    {
        "id": "5375d256b191ea3d",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2280,
        "wires": [
            [
                "11f7229131730b7e"
            ]
        ]
    },
    {
        "id": "db6a96e51b3b8fb4",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create CMND Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"various\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2220,
        "wires": [
            [
                "d95bd2dd5eb8f847",
                "cde7eebd64756813"
            ]
        ]
    },
    {
        "id": "11f7229131730b7e",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create DATA Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"various\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2280,
        "wires": [
            [
                "4dfdc0c8cde8488a",
                "cde7eebd64756813"
            ]
        ]
    },
    {
        "id": "cde7eebd64756813",
        "type": "debug",
        "z": "e4a949dd53517857",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 2220,
        "wires": []
    },
    {
        "id": "40797c3b0ac40a5f",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "SF10Vapourtec1 CMND",
        "topic": "subflow/sf10vapourtec1/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2340,
        "wires": [
            [
                "3f80b5788fa5f29e"
            ]
        ]
    },
    {
        "id": "b377866806e766a0",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "SF10Vapourtec1 TELE",
        "topic": "subflow/sf10vapourtec1/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2400,
        "wires": [
            [
                "a52ab4d8500f234a"
            ]
        ]
    },
    {
        "id": "3f80b5788fa5f29e",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2340,
        "wires": [
            [
                "0f0792704ee6397b"
            ]
        ]
    },
    {
        "id": "a52ab4d8500f234a",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2400,
        "wires": [
            [
                "b7d331b0c83d51c5"
            ]
        ]
    },
    {
        "id": "ba0cc526ff06cc66",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "SF10Vapourtec2 CMND",
        "topic": "subflow/sf10vapourtec2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2460,
        "wires": [
            [
                "3f80b5788fa5f29e"
            ]
        ]
    },
    {
        "id": "b06de6c3d094a678",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "SF10Vapourtec2 TELE",
        "topic": "subflow/sf10vapourtec2/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2520,
        "wires": [
            [
                "a52ab4d8500f234a"
            ]
        ]
    },
    {
        "id": "0f0792704ee6397b",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create CMND Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"pump\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2340,
        "wires": [
            [
                "d95bd2dd5eb8f847",
                "cde7eebd64756813"
            ]
        ]
    },
    {
        "id": "b7d331b0c83d51c5",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create DATA Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"pump\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2400,
        "wires": [
            [
                "4dfdc0c8cde8488a",
                "cde7eebd64756813"
            ]
        ]
    },
    {
        "id": "df88ebe2c68e3ce2",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "ReactIR702L1 CMND",
        "topic": "subflow/reactIR702L1/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 2580,
        "wires": [
            [
                "104a5d48d29f276a"
            ]
        ]
    },
    {
        "id": "fed2027158c0b30d",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "ReactIR702L1 TELE",
        "topic": "subflow/reactIR702L1/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 2640,
        "wires": [
            [
                "3892ec0b11bc6c91"
            ]
        ]
    },
    {
        "id": "104a5d48d29f276a",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2580,
        "wires": [
            [
                "f6435f6ff7328fe6"
            ]
        ]
    },
    {
        "id": "3892ec0b11bc6c91",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2640,
        "wires": [
            [
                "4ffdd04e3ddb12d7"
            ]
        ]
    },
    {
        "id": "f6435f6ff7328fe6",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create CMND Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"IR\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2580,
        "wires": [
            [
                "d95bd2dd5eb8f847",
                "cd98349729a14310"
            ]
        ]
    },
    {
        "id": "4ffdd04e3ddb12d7",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create DATA Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"IR\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2640,
        "wires": [
            [
                "4dfdc0c8cde8488a",
                "cd98349729a14310"
            ]
        ]
    },
    {
        "id": "919a0d486f189418",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "NMR1 CMND",
        "topic": "subflow/nmr1/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 2700,
        "wires": [
            [
                "923adc8b34b6dd54"
            ]
        ]
    },
    {
        "id": "f8c78a623838bdfe",
        "type": "mqtt in",
        "z": "e4a949dd53517857",
        "name": "NMR1 TELE",
        "topic": "subflow/nmr1/tele",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 2760,
        "wires": [
            [
                "332b0a4502f34473"
            ]
        ]
    },
    {
        "id": "923adc8b34b6dd54",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2700,
        "wires": [
            [
                "6725f1bc7f2395be"
            ]
        ]
    },
    {
        "id": "332b0a4502f34473",
        "type": "simpletime",
        "z": "e4a949dd53517857",
        "name": "",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": true,
        "mypm": false,
        "x": 370,
        "y": 2760,
        "wires": [
            [
                "afac5caf32262742"
            ]
        ]
    },
    {
        "id": "afac5caf32262742",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create DATA Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"NMR\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2760,
        "wires": [
            [
                "4dfdc0c8cde8488a",
                "cd98349729a14310"
            ]
        ]
    },
    {
        "id": "6725f1bc7f2395be",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "MongoDB: Create CMND Payload",
        "func": "let TestSetup = global.get(\"TestSetup\") || {};\n\nconst timestamp = new Date(msg.myrawdate);\nlet settings = msg.payload || {};\nlet deviceName = msg.payload.deviceName;\n\nmsg.payload = {\n    metadata: {\n        deviceName: deviceName,\n        type: \"NMR\",\n        testlistId: TestSetup.testlistNrSelected,\n        tesrunId: TestSetup.testrunSelected,\n        fumehoodId: TestSetup.fumehoodId\n    },\n    timestamp: timestamp,\n    settings: settings\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 620,
        "y": 2700,
        "wires": [
            [
                "d95bd2dd5eb8f847",
                "cd98349729a14310"
            ]
        ]
    },
    {
        "id": "9b6a1a693786b52d",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Testrun: Not Complete / Complete",
        "property": "payload.running",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1640,
        "wires": [
            [],
            [
                "062e7940b501bd07"
            ]
        ]
    },
    {
        "id": "08c5f2f727c6b504",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "STOP Testrun if Python is finished optimizing",
        "info": "",
        "x": 490,
        "y": 1600,
        "wires": []
    },
    {
        "id": "cd98349729a14310",
        "type": "debug",
        "z": "e4a949dd53517857",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 2580,
        "wires": []
    },
    {
        "id": "7ff4340e9f5f33ad",
        "type": "json",
        "z": "e4a949dd53517857",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 230,
        "y": 1560,
        "wires": [
            [
                "3fb93d28abaa8cca",
                "9b6a1a693786b52d"
            ]
        ]
    },
    {
        "id": "8104b02b4c4553f3",
        "type": "ui_text",
        "z": "e4a949dd53517857",
        "group": "491b33046c0566e6",
        "order": 1,
        "width": 24,
        "height": 19,
        "name": "EditText Python Script",
        "label": "Python Script",
        "format": "{{msg.payload[0]}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2220,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a246f93fd94cb42d",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Format Script output",
        "func": "var pythonScript = msg.payload || {};\nvar pythonScriptlistLength = pythonScript.length;\n\nvar pythonScriptArray = [];\nvar pythonScriptEntry = \"\";\n\nfor (var cntr = 0; cntr < pythonScriptlistLength; cntr++) {\n    pythonScriptEntry = pythonScript[cntr].testScript.toString().trim();\n\n    // flow.set(\"yyy\", pythonScriptEntry);\n    \n    // pythonScriptEntry = pythonScriptEntry.replace(/\\n|\\r/g, \"\").trim();\n    // pythonScriptEntry.replace(/\\t/g, '');\n    // pythonScriptEntry.replace(\" \", \"\");\n    // pythonScriptEntry.replace(\"\\t\", \"\");\n    \n    // var jsonObj = JSON.parse(pythonScriptEntry);\n    // flow.set(\"zzz\", jsonObj);\n\n    pythonScriptArray.push(pythonScriptEntry);\n    pythonScriptEntry = \"\";\n}\n\nvar newMsg = {\n    payload: pythonScriptArray\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1100,
        "wires": [
            [
                "8104b02b4c4553f3"
            ]
        ]
    },
    {
        "id": "062e7940b501bd07",
        "type": "switch",
        "z": "e4a949dd53517857",
        "name": "Running = TRUE",
        "property": "TestSetup.testRunning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 1640,
        "wires": [
            [
                "b3b2e251ba1286e3"
            ]
        ]
    },
    {
        "id": "bb15747e47748ce6",
        "type": "subflow:db23fe724cb2791c",
        "z": "e4a949dd53517857",
        "name": "",
        "x": 1010,
        "y": 1680,
        "wires": [
            [],
            [
                "8d5f5c609bb95357",
                "b2c067fa79fcd0c8",
                "d1365488592a3e4a",
                "a235b69ea83e0646"
            ]
        ]
    },
    {
        "id": "9bb0821cc5c9c00b",
        "type": "debug",
        "z": "e4a949dd53517857",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 80,
        "y": 1640,
        "wires": []
    },
    {
        "id": "b3b2e251ba1286e3",
        "type": "change",
        "z": "e4a949dd53517857",
        "name": "Clear Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1680,
        "wires": [
            [
                "bb15747e47748ce6"
            ]
        ]
    },
    {
        "id": "1ebea6b0e32c25b3",
        "type": "comment",
        "z": "e4a949dd53517857",
        "name": "Read and STORE GLOBAL the MAC Addr of the Pi",
        "info": "",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "0b7546f3019568ae",
        "type": "exec",
        "z": "e4a949dd53517857",
        "command": "ifconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "aeaed46fcefb8940"
            ],
            [],
            []
        ]
    },
    {
        "id": "aeaed46fcefb8940",
        "type": "function",
        "z": "e4a949dd53517857",
        "name": "Get MAC Addr = Fumehood ID",
        "func": "// Split the payload by lines\nconst lines = msg.payload.split(\"\\n\");\nlet linesLength = lines.length;\nlet macAddress = \"\";\n\nvar lineWithMAX = -1;\nfor (var cntr=0; cntr < linesLength; cntr++) {\n  if (lines[cntr].includes(\"ether\")) {\n    // Find the first and second space\n    const firstSpace = lines[cntr].indexOf(\"ether \");\n    const secondSpace = lines[cntr].indexOf(\" \", firstSpace + 6);\nflow.set(\"firstSpace\", firstSpace);\nflow.set(\"secondSpace\", secondSpace);\n\n    // Extract the MAX address between the spaces\n    macAddress = lines[cntr].substring(firstSpace + 6, secondSpace);\n    flow.set(\"macAddress\", macAddress);\n  }\n}\n \n// Return the extracted MAC address\nmsg.payload = macAddress; // Convert to uppercase for consistency\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "1705ccbca28574bf",
                "b3f19d2575186a9a"
            ]
        ]
    },
    {
        "id": "1705ccbca28574bf",
        "type": "ui_text",
        "z": "e4a949dd53517857",
        "group": "16125889e6fb2165",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Text Fumehood Id",
        "label": "Fumehood Id",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "722fb160491e46ba",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "ffa697aa9fafaf3a",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "07e9210dec9c95dc",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "524763d1894d4033",
        "type": "subflow:39878a8b7ca6b377",
        "z": "10298351f754cc63",
        "name": "",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "644e44f18f8295c9",
                "ffa697aa9fafaf3a",
                "0ceff897f4915b5f"
            ]
        ]
    },
    {
        "id": "8779bbf3c28e4375",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "7d1b6c2a5d6cd94c",
        "type": "catch",
        "z": "10298351f754cc63",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "93b446ea38835ea0"
            ]
        ]
    },
    {
        "id": "93b446ea38835ea0",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "1aa7e620a1cc95e2",
        "type": "comment",
        "z": "10298351f754cc63",
        "name": "Error Handling",
        "info": "",
        "x": 110,
        "y": 20,
        "wires": []
    },
    {
        "id": "1056dec7b235feb8",
        "type": "subflow:fadba47737eca3c5",
        "z": "10298351f754cc63",
        "name": "",
        "x": 600,
        "y": 700,
        "wires": [
            [
                "1405806e3ecb5c7b",
                "8c4367d7ae8ddd15"
            ]
        ]
    },
    {
        "id": "a7b5b72e44a571c8",
        "type": "subflow:e399fc8fc0b218b9",
        "z": "10298351f754cc63",
        "name": "",
        "x": 610,
        "y": 800,
        "wires": [
            [
                "211397b250f1413e",
                "aa5e22fdb5f21f4f",
                "a2dd9784b377ceff",
                "57e807deb5384e6b",
                "d9022f4fd415de60"
            ]
        ]
    },
    {
        "id": "8c4367d7ae8ddd15",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 740,
        "wires": []
    },
    {
        "id": "1405806e3ecb5c7b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 700,
        "wires": [
            [
                "ccd6357ed535fe36",
                "32b3e5b13d050c8e"
            ]
        ]
    },
    {
        "id": "32b3e5b13d050c8e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "211397b250f1413e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "57407618e8c725fd",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETDOSE 0.7",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 960,
        "wires": [
            [
                "23c6500cf8f56e4b"
            ]
        ]
    },
    {
        "id": "aca0f828aeb23505",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "4fcbfc959fde75f8"
            ]
        ]
    },
    {
        "id": "e2daad7de56ef90c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETFLOW 0.5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "596eb9a927b59935"
            ]
        ]
    },
    {
        "id": "806f8f0846267846",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETREG 0.6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "1572119caff41080"
            ]
        ]
    },
    {
        "id": "d0cc3707c9ff3975",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETGASFLOW 0.8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "bdc3c92632605a4c"
            ]
        ]
    },
    {
        "id": "baa14d4ff9e6eac9",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETRAMP 0.9 1.0 1.5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "c00808c9c223f33d"
            ]
        ]
    },
    {
        "id": "618c99302fde0538",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "18ed805844cdc1a5"
            ]
        ]
    },
    {
        "id": "093d71cdc9a8d01c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump STOP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1120,
        "wires": [
            [
                "db66925eaead554e"
            ]
        ]
    },
    {
        "id": "4bfd62e37b8419e7",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump VALVE A",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "21e0adc7a82e253b"
            ]
        ]
    },
    {
        "id": "3d897ecc6506c0aa",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "b99cd6d012c78c12"
            ]
        ]
    },
    {
        "id": "5f6d340f39cdec6a",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "35a9233331ecb683"
            ]
        ]
    },
    {
        "id": "64737f054210d985",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "d3f445b569cc1bcc"
            ]
        ]
    },
    {
        "id": "644e44f18f8295c9",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 120,
        "wires": [
            [
                "2798b2951b14350f"
            ]
        ]
    },
    {
        "id": "618f2d59e25b3915",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "14f96e650da4902a"
            ]
        ]
    },
    {
        "id": "71f35f2ad2a0685d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "17824ff6507ce66c"
            ]
        ]
    },
    {
        "id": "a15b103a3c2bdf85",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "b8e46d332502fee8"
            ]
        ]
    },
    {
        "id": "d7127ac161243887",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "4e3db621f2ad6587"
            ]
        ]
    },
    {
        "id": "9ea23e0791ca9979",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "76ceba0450a9e835"
            ]
        ]
    },
    {
        "id": "d4e6245bbbb98d97",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "79ce0ecf27558be7"
            ]
        ]
    },
    {
        "id": "568b24d9d78bc7c1",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "7fa1ed8b7b9c06af"
            ]
        ]
    },
    {
        "id": "de334e097b34b9b3",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "5dd349a48e95ab40"
            ]
        ]
    },
    {
        "id": "dff40201bc9eb2c5",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "6d4419685a558c10"
            ]
        ]
    },
    {
        "id": "4e95ac82e606a302",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "ac444abc4102b559"
            ]
        ]
    },
    {
        "id": "69c7687c41240b04",
        "type": "subflow:ef63b0d123a76daa",
        "z": "10298351f754cc63",
        "name": "",
        "x": 820,
        "y": 1820,
        "wires": [
            [
                "142ed29f79d1baf5",
                "2c1d57fbf2794a6c",
                "2a2d419da65bf756",
                "059e1658852a1a15",
                "b8fd26631816d62f",
                "0fad1d24ba15766a",
                "10aa64868e241c3b",
                "c4e17268916850bc",
                "3faeaca03f51bdb7",
                "480fee500c5ac01b",
                "16535bb687a9c340",
                "d5c898a8de271d23",
                "0496b3fec2be1275",
                "90b4ce7b0560e51b",
                "1d9220558bdbc5a9",
                "0f178d0514514dbf",
                "22a37d0636c6e38f",
                "381f19af5e6457c7",
                "66cc03405dcb46c8",
                "cde3638b721396c5",
                "b4e1336fa45325fb",
                "aa6b98a0780e9ad4",
                "78998a2d94a0b339",
                "e72f476f9c2e4c57"
            ]
        ]
    },
    {
        "id": "ad3832e55788a8b8",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "20be9946aae88659"
            ]
        ]
    },
    {
        "id": "ac4a631ede0b23a3",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 420,
        "wires": [
            [
                "87df4ac00704d5fb"
            ]
        ]
    },
    {
        "id": "d9022f4fd415de60",
        "type": "switch",
        "z": "10298351f754cc63",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 910,
        "y": 1000,
        "wires": [
            [
                "aa6f2ae86e79fd7b"
            ],
            [
                "20220318cac24b8b"
            ],
            [
                "c84d48f65cee8647"
            ],
            [
                "8a9779349496f820"
            ],
            [
                "0f00556e6cd937d6",
                "0a2d43fa0dd5d4e7",
                "e011e40bf2effeef"
            ]
        ]
    },
    {
        "id": "aa6f2ae86e79fd7b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.flowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 960,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "20220318cac24b8b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Pressure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.pressure",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1000,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "c84d48f65cee8647",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Dose",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.dose",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1040,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "8a9779349496f820",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Gas Flow Rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.gasflowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1080,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "0f00556e6cd937d6",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Start Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStartRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1120,
        "wires": [
            [
                "7f799c54ca4d97cd"
            ]
        ]
    },
    {
        "id": "0a2d43fa0dd5d4e7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Stop Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStopRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1160,
        "wires": [
            [
                "998e1d7c29525372"
            ]
        ]
    },
    {
        "id": "e011e40bf2effeef",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1200,
        "wires": [
            [
                "c1711276c97dc73d"
            ]
        ]
    },
    {
        "id": "bfb16977b77a302a",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Zero Gauges",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 920,
        "wires": [
            [
                "998e1d7c29525372",
                "c1711276c97dc73d"
            ]
        ]
    },
    {
        "id": "142ed29f79d1baf5",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b24a1685a2cc8962",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Pump A Flow Rate to 0,6 (pump faulty)",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 1820,
        "wires": [
            [
                "d5da7aa652298f59"
            ]
        ]
    },
    {
        "id": "2c1d57fbf2794a6c",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressSystem",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1820,
        "wires": [
            [
                "aa6dbab7841e35bc"
            ]
        ]
    },
    {
        "id": "2a2d419da65bf756",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressFlowSynA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1860,
        "wires": [
            [
                "97f49706c9441947"
            ]
        ]
    },
    {
        "id": "059e1658852a1a15",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressFlowSynB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1900,
        "wires": [
            [
                "fd9b64fa235fee8c"
            ]
        ]
    },
    {
        "id": "b8fd26631816d62f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressBinaryC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1940,
        "wires": [
            [
                "9d8dc831f5d10de8"
            ]
        ]
    },
    {
        "id": "0fad1d24ba15766a",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressBinaryD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1980,
        "wires": [
            [
                "e4da7b8907394f1a"
            ]
        ]
    },
    {
        "id": "10aa64868e241c3b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor1",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2040,
        "wires": [
            [
                "b2f5a4771ffc5d65"
            ]
        ]
    },
    {
        "id": "c4e17268916850bc",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2080,
        "wires": [
            [
                "56d81d5e50188501"
            ]
        ]
    },
    {
        "id": "3faeaca03f51bdb7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor3",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2120,
        "wires": [
            [
                "d4ed3470fbda429e"
            ]
        ]
    },
    {
        "id": "480fee500c5ac01b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2160,
        "wires": [
            [
                "8b8ff63c482b4bb8"
            ]
        ]
    },
    {
        "id": "16535bb687a9c340",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2220,
        "wires": [
            [
                "92b6ab5525625e38"
            ]
        ]
    },
    {
        "id": "d5c898a8de271d23",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2260,
        "wires": [
            [
                "37d0959256e1d481"
            ]
        ]
    },
    {
        "id": "0496b3fec2be1275",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2300,
        "wires": [
            [
                "f91aeb5463624926"
            ]
        ]
    },
    {
        "id": "90b4ce7b0560e51b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2340,
        "wires": [
            [
                "71bd0b59bf1f7889"
            ]
        ]
    },
    {
        "id": "1d9220558bdbc5a9",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenCW",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2400,
        "wires": [
            [
                "5eeee8250509c9eb"
            ]
        ]
    },
    {
        "id": "0f178d0514514dbf",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2460,
        "wires": [
            [
                "dcac0f02b0a7088b"
            ]
        ]
    },
    {
        "id": "22a37d0636c6e38f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2500,
        "wires": [
            [
                "8fe803d6f25a410d"
            ]
        ]
    },
    {
        "id": "381f19af5e6457c7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2540,
        "wires": [
            [
                "d93b86523268cc6d"
            ]
        ]
    },
    {
        "id": "66cc03405dcb46c8",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2580,
        "wires": [
            [
                "58067390fd1afbe5"
            ]
        ]
    },
    {
        "id": "cde3638b721396c5",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2640,
        "wires": [
            [
                "c956be673c13817f"
            ]
        ]
    },
    {
        "id": "b4e1336fa45325fb",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2680,
        "wires": [
            [
                "2cfa8ebc12268e60"
            ]
        ]
    },
    {
        "id": "aa6b98a0780e9ad4",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2720,
        "wires": [
            [
                "5133cf01a3b0c917"
            ]
        ]
    },
    {
        "id": "78998a2d94a0b339",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2760,
        "wires": [
            [
                "b5f5ee9e065daf6d"
            ]
        ]
    },
    {
        "id": "e72f476f9c2e4c57",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.chillerDetected",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2820,
        "wires": [
            [
                "e84755a78a1d4a44"
            ]
        ]
    },
    {
        "id": "0ceff897f4915b5f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f90cf4d88a0ae953",
        "type": "subflow:9dfeb25ce4f7592b",
        "z": "10298351f754cc63",
        "name": "",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "d7127ac161243887",
                "07e9210dec9c95dc",
                "c14b5c0f52bd5b46"
            ]
        ]
    },
    {
        "id": "c14b5c0f52bd5b46",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bcecdb0b857356e3",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1137c8e7569e8c39",
        "type": "subflow:9ff174e82057e50f",
        "z": "10298351f754cc63",
        "name": "",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "bcecdb0b857356e3",
                "ac4a631ede0b23a3"
            ],
            [
                "8779bbf3c28e4375"
            ]
        ]
    },
    {
        "id": "2ad459cb287799ca",
        "type": "subflow:100af8884419f9cb",
        "z": "10298351f754cc63",
        "name": "",
        "x": 580,
        "y": 560,
        "wires": [
            [
                "ad3832e55788a8b8",
                "722fb160491e46ba"
            ]
        ]
    },
    {
        "id": "35a9233331ecb683",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 1",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "524763d1894d4033"
            ]
        ]
    },
    {
        "id": "d3f445b569cc1bcc",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 2",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "524763d1894d4033"
            ]
        ]
    },
    {
        "id": "b99cd6d012c78c12",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 3",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "524763d1894d4033"
            ]
        ]
    },
    {
        "id": "14f96e650da4902a",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 4",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "17824ff6507ce66c",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 5",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 300,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "b8e46d332502fee8",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 6",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotchip2\", \n        \"inUse\" : true,\n       settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 340,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "76ceba0450a9e835",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 7",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "79ce0ecf27558be7",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 8",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 25\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 460,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "7fa1ed8b7b9c06af",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 9",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0.1\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 500,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "5dd349a48e95ab40",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 10",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 560,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "6d4419685a558c10",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 11",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 600,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "ac444abc4102b559",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 12",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"hotcoil2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"temp\": 0\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 640,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "4fcbfc959fde75f8",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 13",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 800,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "21e0adc7a82e253b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 14",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"VALVE\", \n            \"valve\": \"A\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 840,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "596eb9a927b59935",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 15",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"FLOW\",\n            \"valve\": \"A\",\n            \"flowrate\":0.1\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 880,
        "wires": [
            [
                "a7b5b72e44a571c8",
                "64802caa80c225dc"
            ]
        ]
    },
    {
        "id": "1572119caff41080",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 16",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"REG\",\n            \"valve\": \"A\",\n            \"pressure\":0.6\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 920,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "23c6500cf8f56e4b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 17",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"DOSE\",\n            \"valve\": \"A\",\n            \"dose\":0.6\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 960,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "bdc3c92632605a4c",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 18",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"GAS\",\n            \"valve\": \"A\",\n            \"gasflowrate\":0.8\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "c00808c9c223f33d",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 19",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"RAMP\",\n            \"valve\": \"A\",\n            \"rampStartRate\":0.9,\n            \"rampStopRate\":1.0,\n            \"rampTime\":1.5,\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "18ed805844cdc1a5",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 20",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"START\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "db66925eaead554e",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 21",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"STOP\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "bbf7231a2e769b02",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETDOSE 0.7",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "18ce7186bd0c9a79"
            ]
        ]
    },
    {
        "id": "37bca37c4076648d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump REMOTEEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "599482e5d72ccfd2"
            ]
        ]
    },
    {
        "id": "56a2a2521a2adc8f",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETFLOW 0.5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "396465a3e253b3c9"
            ]
        ]
    },
    {
        "id": "fd60128e488eecb6",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETREG 0.6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1420,
        "wires": [
            [
                "e2fba7617f224422"
            ]
        ]
    },
    {
        "id": "e4f025a6da7054be",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETGASFLOW 0.8",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1500,
        "wires": [
            [
                "4d9cb3ef12a7c640"
            ]
        ]
    },
    {
        "id": "640f82f82ea9a287",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETRAMP 0.9 1.0 1.5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "120a1bd3a0a9a32b"
            ]
        ]
    },
    {
        "id": "b251e09b62c76c9d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump START",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1580,
        "wires": [
            [
                "b41a7b0d40f8790f"
            ]
        ]
    },
    {
        "id": "363f1c7b34d12cd9",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump STOP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1620,
        "wires": [
            [
                "d57b12e46befd11f"
            ]
        ]
    },
    {
        "id": "946f53fbb597996c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump VALVE A",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "4cb03a66afe5a2b8"
            ]
        ]
    },
    {
        "id": "599482e5d72ccfd2",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 22",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"REMOTEEN\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1300,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "4cb03a66afe5a2b8",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 23",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"VALVE\", \n            \"valve\": \"A\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1340,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "396465a3e253b3c9",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 24",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"FLOW\",\n            \"valve\": \"A\",\n            \"flowrate\":0.5\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1380,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "e2fba7617f224422",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 25",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"REG\",\n            \"valve\": \"A\",\n            \"pressure\":0.6\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1420,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "18ce7186bd0c9a79",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 26",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"DOSE\",\n            \"valve\": \"A\",\n            \"dose\":0.6\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1460,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "4d9cb3ef12a7c640",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 27",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"GAS\",\n            \"valve\": \"A\",\n            \"gasflowrate\":0.8\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1500,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "120a1bd3a0a9a32b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 28",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"SET\", \n            \"mode\": \"RAMP\",\n            \"valve\": \"A\",\n            \"rampStartRate\":0.9,\n            \"rampStopRate\":1.0,\n            \"rampTime\":1.5,\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1540,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "b41a7b0d40f8790f",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 29",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"START\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1580,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "d57b12e46befd11f",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 30",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"sf10Vapourtec2\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"STOP\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1620,
        "wires": [
            [
                "6b1e5ee67ae6e60f"
            ]
        ]
    },
    {
        "id": "d43990a363daf3bf",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1300,
        "wires": []
    },
    {
        "id": "98213855ae8b6537",
        "type": "switch",
        "z": "10298351f754cc63",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "4eff9fd2761963e7"
            ],
            [
                "32c442459deae4c2"
            ],
            [
                "f0ca99aa32ad1256"
            ],
            [
                "07b8faab2bedf188"
            ],
            [
                "ad99ab0310b709ac",
                "10e1c079563dceaa",
                "1e47c1c6693c9bda"
            ]
        ]
    },
    {
        "id": "6b1e5ee67ae6e60f",
        "type": "subflow:2ebe29b6d5387454",
        "z": "10298351f754cc63",
        "name": "",
        "x": 610,
        "y": 1300,
        "wires": [
            [
                "d43990a363daf3bf",
                "6be686b49f544129",
                "3bad14c009b0e564",
                "dc7bc8afc4621ba9",
                "98213855ae8b6537"
            ]
        ]
    },
    {
        "id": "4eff9fd2761963e7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.flowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1480,
        "wires": [
            [
                "f4f3714d2b1ffaf9",
                "8b9c47e2ca5c5e48"
            ]
        ]
    },
    {
        "id": "32c442459deae4c2",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Pressure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.pressure",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1520,
        "wires": [
            [
                "f4f3714d2b1ffaf9",
                "8b9c47e2ca5c5e48"
            ]
        ]
    },
    {
        "id": "f0ca99aa32ad1256",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Dose",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.dose",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1560,
        "wires": [
            [
                "f4f3714d2b1ffaf9",
                "8b9c47e2ca5c5e48"
            ]
        ]
    },
    {
        "id": "07b8faab2bedf188",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Gas Flow Rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.gasflowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1600,
        "wires": [
            [
                "f4f3714d2b1ffaf9",
                "8b9c47e2ca5c5e48"
            ]
        ]
    },
    {
        "id": "ad99ab0310b709ac",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Start Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStartRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1640,
        "wires": [
            [
                "f4f3714d2b1ffaf9"
            ]
        ]
    },
    {
        "id": "10e1c079563dceaa",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Stop Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStopRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1680,
        "wires": [
            [
                "cbbb1b0ad5453467"
            ]
        ]
    },
    {
        "id": "1e47c1c6693c9bda",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1720,
        "wires": [
            [
                "ede0cef77671dd7a"
            ]
        ]
    },
    {
        "id": "8b9c47e2ca5c5e48",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Zero Gauges",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 1440,
        "wires": [
            [
                "cbbb1b0ad5453467",
                "ede0cef77671dd7a"
            ]
        ]
    },
    {
        "id": "d5da7aa652298f59",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 31",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"PumpAFlowRate\",\n            \"command\":\"SET\",\n            \"value\": 1.5\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1820,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "30f884366b1c11fc",
        "type": "comment",
        "z": "10298351f754cc63",
        "name": "{\"payload\":{\"deviceName\":\"flowsynmaxi2\", \"settings\":{\"command\":\"SET\", \"subDevice\":\"PumpAFlowRate\", \"value\": 0.5}}}",
        "info": "",
        "x": 700,
        "y": 1700,
        "wires": []
    },
    {
        "id": "51870c1206b47c96",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 32",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"PumpBFlowRate\",\n            \"command\":\"SET\",\n            \"value\": 0.5\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1860,
        "wires": [
            [
                "69c7687c41240b04",
                "83b891935fe86f4a"
            ]
        ]
    },
    {
        "id": "2c367bce75dfb758",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Pump B Flow Rate to 0.00",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 1860,
        "wires": [
            [
                "51870c1206b47c96"
            ]
        ]
    },
    {
        "id": "7588dfb76a526549",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 33",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"BinaryPumpCFlowRate\",\n            \"command\":\"SET\",\n            \"value\": 0.6\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1900,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "a5193e824c86003e",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Binary Pump C Flow Rate to 0,6",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 1900,
        "wires": [
            [
                "7588dfb76a526549"
            ]
        ]
    },
    {
        "id": "fa32b3d10317cc2b",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Binary Pump D Flow Rate to 0,6",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 1940,
        "wires": [
            [
                "d58a191cbbca5b08"
            ]
        ]
    },
    {
        "id": "d58a191cbbca5b08",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 34",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"BinaryPumpDFlowRate\",\n            \"command\":\"SET\",\n            \"value\": 0.6\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1940,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d34b4b0b22770116",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 35",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"Reactor1Temp\",\n            \"command\":\"SET\",\n            \"value\": 45\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2000,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "ee8dbe9830564ac7",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Reactor 1 Temp to 10",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2000,
        "wires": [
            [
                "d34b4b0b22770116"
            ]
        ]
    },
    {
        "id": "a0c3a63d29b5e49f",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Reactor 2 Temp to 10",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2040,
        "wires": [
            [
                "fc4023450776f50e"
            ]
        ]
    },
    {
        "id": "fc4023450776f50e",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 36",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"Reactor2Temp\",\n            \"command\":\"SET\",\n            \"value\": 10\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2040,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "c5d6a559e9fce446",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Reactor 3 Temp to 10",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2080,
        "wires": [
            [
                "2a3397255d421b91"
            ]
        ]
    },
    {
        "id": "2a3397255d421b91",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 37",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"Reactor3Temp\",\n            \"command\":\"SET\",\n            \"value\": 10\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2080,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "2daddde057669fd1",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Reactor 4 Temp to 10",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "b0cfc088802ada8a"
            ]
        ]
    },
    {
        "id": "b0cfc088802ada8a",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 38",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"Reactor4Temp\",\n            \"command\":\"SET\",\n            \"value\": 10\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2120,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d59605e90ba86545",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 39",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynValveA\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2180,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d77c67a33e324174",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Pull from Solvent A",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 2180,
        "wires": [
            [
                "d59605e90ba86545"
            ]
        ]
    },
    {
        "id": "753ba6de094fbb21",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Pull from Solvent B",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 2220,
        "wires": [
            [
                "0380b74e666fb0ab"
            ]
        ]
    },
    {
        "id": "0380b74e666fb0ab",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 40",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynValveB\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2220,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "105f331e9572d6d8",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Binary Valve C to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 2400,
        "wires": [
            [
                "1424da17c2f13cab"
            ]
        ]
    },
    {
        "id": "1424da17c2f13cab",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 41",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowBinaryValveC\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2400,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "0a38daaf49a6e628",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Binary Valve D to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 2440,
        "wires": [
            [
                "7246c51b4c38c396"
            ]
        ]
    },
    {
        "id": "7246c51b4c38c396",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 42",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowBinaryValveD\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2440,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "1d3b20dfcd0ea28c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Switch to Collect",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2480,
        "wires": [
            [
                "27f6dfbab1ced22d"
            ]
        ]
    },
    {
        "id": "27f6dfbab1ced22d",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 43",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n       settings:{\n            \"subDevice\": \"FlowCWValve\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2480,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "ac48b36476a8b320",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Sync Inj Valve A to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 2560,
        "wires": [
            [
                "84c754e95cc5277a"
            ]
        ]
    },
    {
        "id": "84c754e95cc5277a",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 44",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynInjValveA\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2560,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "33a8a221cdad09c8",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Sync Inj Valve B to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 2600,
        "wires": [
            [
                "b24981df2946480b"
            ]
        ]
    },
    {
        "id": "b24981df2946480b",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 45",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynInjValveB\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2600,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d589f410e199906a",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Binary Inj Valve C to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 2760,
        "wires": [
            [
                "a0ed73fe3479b42a"
            ]
        ]
    },
    {
        "id": "a0ed73fe3479b42a",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 46",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowBinaryInjValveC\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2760,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "6048e012a7fecc75",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Binary Inj Valve D to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 2800,
        "wires": [
            [
                "3d9e2bddba8b15fc"
            ]
        ]
    },
    {
        "id": "3d9e2bddba8b15fc",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 47",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowBinaryInjValveD\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2800,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "c111c80c35873681",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Heater to true",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 2860,
        "wires": [
            [
                "a70e9818e39a726e"
            ]
        ]
    },
    {
        "id": "a70e9818e39a726e",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 48",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"Heater\",\n            \"command\":\"SET\",\n            \"value\": true\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2860,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "15a3a5b9e119310c",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "Package NMR Graph data",
        "func": "var dataFromNMR1 = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromNMR1.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromNMR1[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"NMR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2940,
        "wires": [
            [
                "f2654622cae988c5",
                "b0488813fd12b849"
            ]
        ]
    },
    {
        "id": "5f72351e01e90507",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 2900,
        "wires": []
    },
    {
        "id": "b0488813fd12b849",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 2980,
        "wires": []
    },
    {
        "id": "74f772f30dbe1aaf",
        "type": "subflow:948c434f9f4c530f",
        "z": "10298351f754cc63",
        "name": "",
        "x": 630,
        "y": 2940,
        "wires": [
            [
                "15a3a5b9e119310c",
                "5f72351e01e90507"
            ]
        ]
    },
    {
        "id": "3404ea75d720f924",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "NMR1 START Protocol = 1D",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 2940,
        "wires": [
            [
                "6a2d4744732463a0"
            ]
        ]
    },
    {
        "id": "6a2d4744732463a0",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 49",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"nmr1\", \n        \"inUse\" : true,\n        settings:{\n            \"command\":\"START\",\n            \"protocol\":\"1D\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2940,
        "wires": [
            [
                "74f772f30dbe1aaf"
            ]
        ]
    },
    {
        "id": "cbfebe670d293538",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "NMR1 STOP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 2980,
        "wires": [
            [
                "9b3cb32adbbc22e8"
            ]
        ]
    },
    {
        "id": "9b3cb32adbbc22e8",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 50",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\": \"nmr1\",\n        \"inUse\" : true,\n        settings: {\n            \"command\": \"STOP\",\n            \"protocol\": \"\"\n        }\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2980,
        "wires": [
            [
                "74f772f30dbe1aaf"
            ]
        ]
    },
    {
        "id": "6888155056e4a9cb",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Switch to Waste",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 2520,
        "wires": [
            [
                "0f3f1781ccc26338"
            ]
        ]
    },
    {
        "id": "0f3f1781ccc26338",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 51",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowCWValve\",\n            \"command\":\"SET\",\n            \"value\": false\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2520,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "a971243b603ede33",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Sync Inj Valve A to false",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 2640,
        "wires": [
            [
                "243c830fca5c413b"
            ]
        ]
    },
    {
        "id": "243c830fca5c413b",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 52",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynInjValveA\",\n            \"command\":\"SET\",\n            \"value\": false\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2640,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "1bdba66ef172fc9e",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FlowSync Maxi 2 Flow Sync Inj Valve B to false",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 2680,
        "wires": [
            [
                "5e36a2599249ccec"
            ]
        ]
    },
    {
        "id": "5e36a2599249ccec",
        "type": "function",
        "z": "10298351f754cc63",
        "d": true,
        "name": "function 53",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynInjValveB\",\n            \"command\":\"SET\",\n            \"value\": false\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2680,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "aabebd9da22c4ec4",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 54",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynValveA\",\n            \"command\":\"SET\",\n            \"value\": false\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2260,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "68b8c66a3897b813",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Pull from Reagent A",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 2260,
        "wires": [
            [
                "aabebd9da22c4ec4"
            ]
        ]
    },
    {
        "id": "ab7a2529a849aded",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 2 Flow Pull from Reagent B",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 2300,
        "wires": [
            [
                "4261adecaaf85507"
            ]
        ]
    },
    {
        "id": "4261adecaaf85507",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 55",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"flowsynmaxi2\", \n        \"inUse\" : true,\n        settings:{\n            \"subDevice\": \"FlowSynValveB\",\n            \"command\":\"SET\",\n            \"value\": false\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2300,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "57e807deb5384e6b",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Edit Text Mode",
        "label": "Mode",
        "format": "{{msg.payload.settings.mode}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 920,
        "wires": []
    },
    {
        "id": "aa5e22fdb5f21f4f",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "EditText Valve",
        "label": "Valve",
        "format": "{{msg.payload.state.valve}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 880,
        "wires": []
    },
    {
        "id": "a2dd9784b377ceff",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Edit Text State",
        "label": "State",
        "format": "{{msg.payload.state.status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 840,
        "wires": []
    },
    {
        "id": "6be686b49f544129",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "c08d3fa1ed8142ea",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Edit Text State",
        "label": "State",
        "format": "{{msg.payload.state.status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3bad14c009b0e564",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "c08d3fa1ed8142ea",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "EditText Valve",
        "label": "Valve",
        "format": "{{msg.payload.state.valve}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1380,
        "wires": []
    },
    {
        "id": "dc7bc8afc4621ba9",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "c08d3fa1ed8142ea",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Edit Text Mode",
        "label": "Mode",
        "format": "{{msg.payload.settings.mode}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 1420,
        "wires": []
    },
    {
        "id": "87df4ac00704d5fb",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Gauge",
        "group": "08f2e0d237277a3e",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 420,
        "wires": []
    },
    {
        "id": "20be9946aae88659",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Gauge",
        "group": "131978166ea601ba",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "2798b2951b14350f",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Gauge",
        "group": "56c7a41708ec20f4",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "4e3db621f2ad6587",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Gauge",
        "group": "96632e11e1c04c24",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "7f799c54ca4d97cd",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Start / Pressure / Dose / Flow",
        "group": "a84e115482e1d03d",
        "order": 4,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Rate Start / Pressure / Dose / Flow",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1900,
        "y": 960,
        "wires": []
    },
    {
        "id": "998e1d7c29525372",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Stop",
        "group": "a84e115482e1d03d",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Rate Stop",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c1711276c97dc73d",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Time",
        "group": "a84e115482e1d03d",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Time",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1810,
        "y": 1040,
        "wires": []
    },
    {
        "id": "aa6dbab7841e35bc",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge System Pressure",
        "group": "947decbba47e6fc1",
        "order": 13,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 1820,
        "wires": []
    },
    {
        "id": "97f49706c9441947",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowSynAPressure",
        "group": "947decbba47e6fc1",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1560,
        "y": 1860,
        "wires": []
    },
    {
        "id": "fd9b64fa235fee8c",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowSynBPressure",
        "group": "947decbba47e6fc1",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1560,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9d8dc831f5d10de8",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowBinaryCPressure",
        "group": "947decbba47e6fc1",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1560,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e4da7b8907394f1a",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowBinaryDPressure",
        "group": "947decbba47e6fc1",
        "order": 12,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1560,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b2f5a4771ffc5d65",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Reactor 1 Temp.",
        "group": "947decbba47e6fc1",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2040,
        "wires": []
    },
    {
        "id": "56d81d5e50188501",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Reactor 2 Temp.",
        "group": "947decbba47e6fc1",
        "order": 6,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2080,
        "wires": []
    },
    {
        "id": "d4ed3470fbda429e",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Reactor 3 Temp.",
        "group": "947decbba47e6fc1",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8b8ff63c482b4bb8",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Reactor 4 Temp.",
        "group": "947decbba47e6fc1",
        "order": 8,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c956be673c13817f",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Pump A Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2640,
        "wires": []
    },
    {
        "id": "2cfa8ebc12268e60",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Pump B Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 2,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2680,
        "wires": []
    },
    {
        "id": "5133cf01a3b0c917",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Pump C Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 3,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b5f5ee9e065daf6d",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Pump D Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 4,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1550,
        "y": 2760,
        "wires": []
    },
    {
        "id": "f4f3714d2b1ffaf9",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Start / Pressure / Dose / Flow",
        "group": "c08d3fa1ed8142ea",
        "order": 4,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Rate Start / Pressure / Dose / Flow",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1900,
        "y": 1480,
        "wires": []
    },
    {
        "id": "cbbb1b0ad5453467",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Stop",
        "group": "c08d3fa1ed8142ea",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Rate Stop",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1830,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ede0cef77671dd7a",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Time",
        "group": "c08d3fa1ed8142ea",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Time",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1810,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ccd6357ed535fe36",
        "type": "ui_template",
        "z": "10298351f754cc63",
        "group": "d99fa63256862037",
        "name": "ReactIR 702L 1 Data",
        "order": 1,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart2-reactir1-auto\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n        console.log('Position ReactIR1 AUTO');\n        console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart2-reactir1-auto\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "f2654622cae988c5",
        "type": "ui_template",
        "z": "10298351f754cc63",
        "group": "d682692f07ed7f2c",
        "name": "NMR 1 Data",
        "order": 1,
        "width": 24,
        "height": 8,
        "format": "<canvas id=\"line-chart2-nmr1-auto\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position NMR1 AUTO');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart2-nmr1-auto\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'NMR1 Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "92b6ab5525625e38",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 15,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Flow Syn Valve A OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Valve A",
        "x": 1540,
        "y": 2220,
        "wires": []
    },
    {
        "id": "37d0959256e1d481",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 19,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Flow Syn Valve B OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Valve B",
        "x": 1540,
        "y": 2260,
        "wires": []
    },
    {
        "id": "f91aeb5463624926",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 23,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Binary Valve C OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Valve C",
        "x": 1530,
        "y": 2300,
        "wires": []
    },
    {
        "id": "71bd0b59bf1f7889",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 27,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Binary Valve D OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Valve D",
        "x": 1530,
        "y": 2340,
        "wires": []
    },
    {
        "id": "5eeee8250509c9eb",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 17,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "C/W Valve OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED C/W Valve",
        "x": 1520,
        "y": 2400,
        "wires": []
    },
    {
        "id": "dcac0f02b0a7088b",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 16,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Flow Syn Inj Valve A OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Inj Valve A",
        "x": 1550,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8fe803d6f25a410d",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 20,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Flow Syn Inj Valve B OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Inj Valve B",
        "x": 1550,
        "y": 2500,
        "wires": []
    },
    {
        "id": "d93b86523268cc6d",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 24,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Binary Inj Valve C OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Inj Valve C",
        "x": 1540,
        "y": 2540,
        "wires": []
    },
    {
        "id": "58067390fd1afbe5",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 28,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Binary Inj Valve D OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Inj Valve D",
        "x": 1540,
        "y": 2580,
        "wires": []
    },
    {
        "id": "e84755a78a1d4a44",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 21,
        "group": "947decbba47e6fc1",
        "width": 6,
        "height": 1,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Chiller Detected",
        "x": 1540,
        "y": 2820,
        "wires": []
    },
    {
        "id": "83b891935fe86f4a",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 2000,
        "wires": []
    },
    {
        "id": "64802caa80c225dc",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 880,
        "wires": []
    },
    {
        "id": "bea54ac5ec2fb47b",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "test",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1780,
        "wires": [
            [
                "a3b20c0d747c3f6e"
            ]
        ]
    },
    {
        "id": "a3b20c0d747c3f6e",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "Flow Rate 0 (inUse)",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\": \"flowsynmaxi2\",\n        \"inUse\" : true,\n        \"settings\": {\n            \"subDevice\": \"PumpBFlowRate\",\n            \"command\": \"SET\",\n            \"value\": 0\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1780,
        "wires": [
            [
                "69c7687c41240b04",
                "83b891935fe86f4a"
            ]
        ]
    },
    {
        "id": "f27d5a705d8c98eb",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "d": true,
        "order": 10,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "FlowUV 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED FlowUV 1",
        "x": 420,
        "y": 3640,
        "wires": []
    },
    {
        "id": "fdae78fef549c323",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "d": true,
        "order": 11,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "FlowUV 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED FlowUV 2",
        "x": 420,
        "y": 3700,
        "wires": []
    },
    {
        "id": "94adb329ab6c15f6",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 6,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "SF10 Vapourtec 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED SF10 Vapourtec 1",
        "x": 440,
        "y": 3400,
        "wires": []
    },
    {
        "id": "13988b5f46fccfe5",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 5,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "FlowSynMaxi 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED FlowSynMaxi 2",
        "x": 440,
        "y": 3340,
        "wires": []
    },
    {
        "id": "5402c10b5f3d5a4e",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 8,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "ReactIR 702L 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED ReactIR 702L 1",
        "x": 440,
        "y": 3520,
        "wires": []
    },
    {
        "id": "ccc77564a0912f29",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 1,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "HotChip 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED HotChip 1",
        "x": 420,
        "y": 3100,
        "wires": []
    },
    {
        "id": "fb6ec8006dfde0fc",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 2,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "HotChip 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED HotChip 2",
        "x": 420,
        "y": 3160,
        "wires": []
    },
    {
        "id": "8505e87a12c92131",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 3,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "HotCoil 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED HotCoil 1",
        "x": 420,
        "y": 3220,
        "wires": []
    },
    {
        "id": "89e6d977e3ff1a33",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 4,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "HotCoil 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED HotCoil 2",
        "x": 420,
        "y": 3280,
        "wires": []
    },
    {
        "id": "5b1aa6a6fb2a0348",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 9,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "NMR 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED NMR 1",
        "x": 410,
        "y": 3580,
        "wires": []
    },
    {
        "id": "f9cf5d2711b9f07c",
        "type": "comment",
        "z": "10298351f754cc63",
        "name": "Active Sub-System LEDs",
        "info": "",
        "x": 150,
        "y": 3060,
        "wires": []
    },
    {
        "id": "b0626027e04fc9c2",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip1.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "ccc77564a0912f29"
            ]
        ]
    },
    {
        "id": "816a35c2abc67b55",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip2.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3160,
        "wires": [
            [
                "fb6ec8006dfde0fc"
            ]
        ]
    },
    {
        "id": "58172d6bf7ded94e",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil1.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3220,
        "wires": [
            [
                "8505e87a12c92131"
            ]
        ]
    },
    {
        "id": "54095b774b20e60d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil2.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3280,
        "wires": [
            [
                "89e6d977e3ff1a33"
            ]
        ]
    },
    {
        "id": "6f19ae8a79641a5d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "flowsynmaxi2.inUse",
        "payloadType": "global",
        "x": 180,
        "y": 3340,
        "wires": [
            [
                "13988b5f46fccfe5"
            ]
        ]
    },
    {
        "id": "cfd5f29475bf6909",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1.inUse",
        "payloadType": "global",
        "x": 190,
        "y": 3400,
        "wires": [
            [
                "94adb329ab6c15f6"
            ]
        ]
    },
    {
        "id": "db2d73363aca9bb3",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec2.inUse",
        "payloadType": "global",
        "x": 190,
        "y": 3460,
        "wires": [
            [
                "1c2fbc355e30d727"
            ]
        ]
    },
    {
        "id": "1c2fbc355e30d727",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 7,
        "group": "2f705b1352bd912f",
        "width": 4,
        "height": 1,
        "label": "SF10 Vapourtec 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED SF10 Vapourtec 2",
        "x": 440,
        "y": 3460,
        "wires": []
    },
    {
        "id": "2b97d90a2730626c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reactIR702L1.inUse",
        "payloadType": "global",
        "x": 180,
        "y": 3520,
        "wires": [
            [
                "5402c10b5f3d5a4e"
            ]
        ]
    },
    {
        "id": "9fee61f3c8bea96d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "nmr1.inUse",
        "payloadType": "global",
        "x": 150,
        "y": 3580,
        "wires": [
            [
                "5b1aa6a6fb2a0348"
            ]
        ]
    },
    {
        "id": "bec858a33d2784c5",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "flowuv1.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3640,
        "wires": [
            [
                "f27d5a705d8c98eb"
            ]
        ]
    },
    {
        "id": "72daaf0406ee2c5f",
        "type": "inject",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "flowuv2.inUse",
        "payloadType": "global",
        "x": 160,
        "y": 3700,
        "wires": [
            [
                "fdae78fef549c323"
            ]
        ]
    },
    {
        "id": "f44729e1bf6e0c22",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "ReactIR inUse",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "00dc5d7546a28725"
            ]
        ]
    },
    {
        "id": "00dc5d7546a28725",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "function 62",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\":\"reactIR702L1\", \n        \"inUse\" : true\n    }\n};\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 700,
        "wires": [
            [
                "1056dec7b235feb8"
            ]
        ]
    },
    {
        "id": "d272c65929434b5e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 20,
        "wires": []
    },
    {
        "id": "d2f73d783dd78f92",
        "type": "subflow:9f06e317cceaf3a2",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 370,
        "y": 20,
        "wires": [
            [
                "d272c65929434b5e"
            ]
        ]
    },
    {
        "id": "ee67c5d5c8335a7b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "Flow Rate 0 (inUse = FALSE)",
        "func": "var newMsg = {};\n\nnewMsg = {\n    payload: {\n        \"deviceName\": \"flowsynmaxi2\",\n        \"inUse\" : false,\n        \"settings\": {\n            \"subDevice\": \"PumpBFlowRate\",\n            \"command\": \"SET\",\n            \"value\": 0\n        }\n    }\n};\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1740,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d8228dcdecb73e3e",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "test",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1740,
        "wires": [
            [
                "ee67c5d5c8335a7b"
            ]
        ]
    },
    {
        "id": "1d7a98d6cd0a8285",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceName\":\"hotcoil1\",\"inUse\":true,\"settings\":{\"command\":\"SET\",\"temp\":30.8}}",
        "payloadType": "json",
        "x": 550,
        "y": 500,
        "wires": [
            [
                "42f1827f7201ebcd"
            ]
        ]
    },
    {
        "id": "42f1827f7201ebcd",
        "type": "json",
        "z": "10298351f754cc63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 500,
        "wires": [
            [
                "46b2b5be30485272"
            ]
        ]
    },
    {
        "id": "46b2b5be30485272",
        "type": "mqtt out",
        "z": "10298351f754cc63",
        "name": "",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 920,
        "y": 500,
        "wires": []
    },
    {
        "id": "57316bae9da85799",
        "type": "catch",
        "z": "300c6ec10595d0c1",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "7df5a5928a6de244"
            ]
        ]
    },
    {
        "id": "7df5a5928a6de244",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee943eb7bd7e090d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "1e96dac9fd22ec64",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotChip1 Manual Settings",
        "info": "",
        "x": 130,
        "y": 140,
        "wires": []
    },
    {
        "id": "db98a9b7aba8d78e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "fdee816960890f3e",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea1b246a42d11d1d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "62d022fdb28ea969",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotChip2 Manual Settings",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "070bab2db6f2b72e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 640,
        "wires": []
    },
    {
        "id": "226fccf388a2819b",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "1a7472df8b764b4d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "085af6b1346ef1f2",
        "type": "subflow:dcba5a408b90db4f",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "db98a9b7aba8d78e",
                "fb770d51f3bd1d0c"
            ]
        ]
    },
    {
        "id": "628222c3b1be2783",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil1 Manual Settings",
        "info": "",
        "x": 130,
        "y": 780,
        "wires": []
    },
    {
        "id": "c3e8210705f25c3e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 960,
        "wires": []
    },
    {
        "id": "0929c7c58733fb85",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 820,
        "wires": []
    },
    {
        "id": "023f4d2993b3c946",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 860,
        "wires": []
    },
    {
        "id": "2df90426796169e7",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil2 Manual Settings",
        "info": "",
        "x": 130,
        "y": 1100,
        "wires": []
    },
    {
        "id": "292a8d4a61032ecd",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ff4929bf5f53563a",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 1140,
        "wires": []
    },
    {
        "id": "775dcc26f22ba832",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 1180,
        "wires": []
    },
    {
        "id": "45bf714486772285",
        "type": "subflow:fc608604922b7267",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "7f37c2c86473f466",
                "49e34232260e0df0"
            ],
            [
                "4986aa2b7e15301a"
            ]
        ]
    },
    {
        "id": "d2ecd16fb1b31060",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "ReactIR 702L",
        "info": "",
        "x": 90,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a12bd5bd4e543801",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "SF10 Vapourtec 1 (COMM1)",
        "info": "",
        "x": 140,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1f15d212085f5ab1",
        "type": "subflow:3bf455a61dc4725c",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 460,
        "y": 1700,
        "wires": [
            [
                "0bcc7d97cf5832d2"
            ]
        ]
    },
    {
        "id": "18b973077a6e919a",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 1540,
        "wires": []
    },
    {
        "id": "07a098bc2b88f2cf",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "ReactIR Example Data Array",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"0\":-0.010684138241292392,\"1\":-0.012374692380062918,\"2\":-0.012952069561954953,\"3\":-0.011982079901435527,\"4\":-0.010632289048637887,\"5\":-0.009987224897544082,\"6\":-0.009568639148265876,\"7\":-0.008476732219359844,\"8\":-0.007081617859387941,\"9\":-0.006450377068652282,\"10\":-0.006738134734837149,\"11\":-0.007345521116044885,\"12\":-0.007954937715557085,\"13\":-0.008321813791262614,\"14\":-0.007767173439269033,\"15\":-0.006122019772008444,\"16\":-0.004552152958396135,\"17\":-0.004163790364264221,\"18\":-0.0043869445439553185,\"19\":-0.004092846599964359,\"20\":-0.0034517597169001516,\"21\":-0.002953970532387885,\"22\":-0.0015361935467872578,\"23\":0.0019957576888188634,\"24\":0.006006845107636495,\"25\":0.006798217902982769,\"26\":0.004195248049010078,\"27\":0.0017350956708127251,\"28\":0.0011269749073226404,\"29\":0.000997411406534706,\"30\":0.00040419524416297807,\"31\":0.0005839613199454819,\"32\":0.0020776342823618714,\"33\":0.003024282560651864,\"34\":0.0022709206820975174,\"35\":0.0015528924241511733,\"36\":0.0025447750632332056,\"37\":0.004323418903264548,\"38\":0.005532440308315408,\"39\":0.006779770100902274,\"40\":0.008105039461686017,\"41\":0.00736186865357144,\"42\":0.004143330330496616,\"43\":0.001888072340979129,\"44\":0.0026087523962959385,\"45\":0.003784640847822529,\"46\":0.002116689862981892,\"47\":-0.0005915473085271762,\"48\":-0.0007657687507507742,\"49\":0.0011106566061983567,\"50\":0.0012049414706910325,\"51\":-0.0013294364999030521,\"52\":-0.0034333559284571253,\"53\":-0.003965710675149046,\"54\":-0.0042987098999791055,\"55\":-0.004867449874912793,\"56\":-0.004123944774874439,\"57\":-0.0017668133452339956,\"58\":-0.0000820794855693635,\"59\":-0.00043644781759884823,\"60\":-0.0007067663101524161,\"61\":0.0017308491349488254,\"62\":0.006476980770018944,\"63\":0.010542979762532136,\"64\":0.012584850817305905,\"65\":0.013551928374746785,\"66\":0.013291590085044373,\"67\":0.01119237042343815,\"68\":0.008339185140982325,\"69\":0.006048939023010462,\"70\":0.004166779278517377,\"71\":0.00231244795441597,\"72\":0.0010831176138098885,\"73\":0.0007327260997143303,\"74\":0.00009084765460549617,\"75\":-0.0015008901938384101,\"76\":-0.002954418179219785,\"77\":-0.0029416967637467895,\"78\":-0.0015219276170194752,\"79\":0.0007005893899422794,\"80\":0.004122456797550565,\"81\":0.00833220419715531,\"82\":0.009750230002708436,\"83\":0.006145559989207039,\"84\":0.001601190864973898,\"85\":0.0007494507121523242,\"86\":0.004446528572551645,\"87\":0.009286401055181828,\"88\":0.009961834858831913,\"89\":0.006153679260192136,\"90\":0.0018829285022500342,\"91\":-0.0001514183958861205,\"92\":0.0003564438118777871,\"93\":0.0019161056906176314,\"94\":0.0028231312448752316,\"95\":0.0034525203001760795,\"96\":0.005423239630738806,\"97\":0.008324356685139015,\"98\":0.009099556015110696,\"99\":0.006269421260411574,\"100\":0.0024490474619534132,\"101\":0.0011010931885015276,\"102\":0.0024471760290089932,\"103\":0.0028629976550260125,\"104\":-0.00039050749908156693,\"105\":-0.0052448169202464635,\"106\":-0.007460137670604728,\"107\":-0.00515673449936067,\"108\":-0.0008940825201836056,\"109\":0.0004900315855975459,\"110\":-0.002539656917266669,\"111\":-0.006530269794459473,\"112\":-0.007733472928401095,\"113\":-0.006101895046255809,\"114\":-0.004619914932356824,\"115\":-0.004984621583492726,\"116\":-0.005699493449573778,\"117\":-0.005264301152587795,\"118\":-0.004719768457550879,\"119\":-0.005828650992942143,\"120\":-0.0079234990065572,\"121\":-0.008786389261274574,\"122\":-0.007783170949384302,\"123\":-0.006522188273483772,\"124\":-0.006580287987828604,\"125\":-0.007859944309542418,\"126\":-0.009173286536681967,\"127\":-0.009316162302602165,\"128\":-0.007810700145599656,\"129\":-0.005435371656516178,\"130\":-0.00394368955879286,\"131\":-0.004214005287232037,\"132\":-0.005204856801409246,\"133\":-0.005759229546926117,\"134\":-0.006330975341013973,\"135\":-0.007943681445096676,\"136\":-0.010325842182848675,\"137\":-0.012581342459855302,\"138\":-0.014660187378719781,\"139\":-0.016703957092058967,\"140\":-0.01762324335556626,\"141\":-0.01633144633327724,\"142\":-0.014063815362120822,\"143\":-0.013032863714227095,\"144\":-0.012756905052909157,\"145\":-0.010518574609822084,\"146\":-0.006219067518581375,\"147\":-0.003786270433548269,\"148\":-0.005995241384226795,\"149\":-0.011062318248897503,\"150\":-0.014517321584469464,\"151\":-0.013258446271011783,\"152\":-0.007970000315047488,\"153\":-0.0019797837916677007,\"154\":0.0007238085760951443,\"155\":-0.0015731454085090016,\"156\":-0.0060557805437428894,\"157\":-0.008133295294144974,\"158\":-0.006858596398302998,\"159\":-0.006103358430167212,\"160\":-0.008942222406951725,\"161\":-0.013159090295357497,\"162\":-0.014243835647597392,\"163\":-0.011717293653096877,\"164\":-0.009630417736778474,\"165\":-0.010988934387399167,\"166\":-0.014371951777404494,\"167\":-0.015914004356007056,\"168\":-0.01343129102971774,\"169\":-0.007897561410989087,\"170\":-0.0021681999322415405,\"171\":0.0009091055559944163,\"172\":0.00016123363493813936,\"173\":-0.0036425211187770443,\"174\":-0.008497959946077376,\"175\":-0.012056440878573696,\"176\":-0.013110599338409667,\"177\":-0.012320331434724647,\"178\":-0.011377655773494606,\"179\":-0.011359788702464024,\"180\":-0.011745615062945535,\"181\":-0.011599293382089869,\"182\":-0.011268090524680053,\"183\":-0.012002411334852501,\"184\":-0.013975314979495989,\"185\":-0.015692771355061894,\"186\":-0.015794485928164646,\"187\":-0.01486546592621228,\"188\":-0.014504888305030782,\"189\":-0.015181720726633211,\"190\":-0.01592773223534642,\"191\":-0.01584302476494663,\"192\":-0.015226751975665266,\"193\":-0.014924234084130619,\"194\":-0.015300164655419073,\"195\":-0.01592413941511233,\"196\":-0.0158091537969987,\"197\":-0.014209448611241425,\"198\":-0.01164128647261352,\"199\":-0.009921810185613172,\"200\":-0.010519429303366912,\"201\":-0.012967746475217316,\"202\":-0.015234335589809309,\"203\":-0.015877057938858633,\"204\":-0.015521344391286785,\"205\":-0.01565153278415361,\"206\":-0.01652378347000944,\"207\":-0.01688661926961936,\"208\":-0.015745699335829203,\"209\":-0.013711603231517351,\"210\":-0.01231749947924555,\"211\":-0.012333009654214532,\"212\":-0.013133161538762008,\"213\":-0.013718203872688501,\"214\":-0.013716042953294887,\"215\":-0.013160860751682109,\"216\":-0.0117575504554795,\"217\":-0.009180300833363176,\"218\":-0.0062257343970449994,\"219\":-0.004754591180514016,\"220\":-0.005846479275815146,\"221\":-0.008577569388946726,\"222\":-0.011038804177894651,\"223\":-0.012212262649348292,\"224\":-0.012465625814048968,\"225\":-0.012401514917143044,\"226\":-0.012064500397796725,\"227\":-0.01140789735329975,\"228\":-0.010718500512662477,\"229\":-0.010163441323079725,\"230\":-0.009501361836891731,\"231\":-0.008615092937634398,\"232\":-0.007968978670602332,\"233\":-0.008151294629307922,\"234\":-0.009119045446303545,\"235\":-0.010169067432650726,\"236\":-0.010657378611336407,\"237\":-0.010540697638274307,\"238\":-0.01031726300994683,\"239\":-0.010638456889403491,\"240\":-0.011706218638069851,\"241\":-0.012867887588513377,\"242\":-0.013022474190908958,\"243\":-0.011759678860090786,\"244\":-0.009856738959031185,\"245\":-0.008336722388995854,\"246\":-0.007548791003840447,\"247\":-0.007399296963764396,\"248\":-0.007871167719526432,\"249\":-0.008772886374727772,\"250\":-0.009394981118819173,\"251\":-0.00918727353052152,\"252\":-0.008578969413870425,\"253\":-0.008404838766661827,\"254\":-0.008521842815076668,\"255\":-0.0074792336480579286,\"256\":-0.004225550345161815,\"257\":-0.0008650114002219989,\"258\":-0.00044075212595181667,\"259\":-0.0005442611082186491,\"260\":-0.0006116544785665149,\"261\":-0.002375918341736287,\"262\":-0.005745976964951722,\"263\":-0.008987498609480579,\"264\":-0.01056106565575126,\"265\":-0.010370742289442274,\"266\":-0.009381310946292977,\"267\":-0.008617754836997386,\"268\":-0.008738988582790182,\"269\":-0.009884133566270003,\"270\":-0.011035534063861058,\"271\":-0.010490740725655352,\"272\":-0.008158951698486475,\"273\":-0.006130492336014156,\"274\":-0.00630611844788261,\"275\":-0.008178821583899605,\"276\":-0.009610926480203811,\"277\":-0.009484234931186228,\"278\":-0.008627488112366905,\"279\":-0.0083329811081634,\"280\":-0.008854762579930852,\"281\":-0.009536288777860566,\"282\":-0.009700394082323456,\"283\":-0.009228965919267524,\"284\":-0.008657177923847464,\"285\":-0.008637936533351678,\"286\":-0.009127727341348783,\"287\":-0.009438302753245486,\"288\":-0.009342850361607915,\"289\":-0.009410381894841214,\"290\":-0.009938373156811573,\"291\":-0.010413857197293121,\"292\":-0.010412921782569654,\"293\":-0.010243783441794342,\"294\":-0.010143756739530595,\"295\":-0.00959675908233981,\"296\":-0.008287916025659764,\"297\":-0.007116349340552271,\"298\":-0.007200938557692812,\"299\":-0.008232655714740874,\"300\":-0.008903933995770736,\"301\":-0.008756030497131449,\"302\":-0.00843863214319177,\"303\":-0.008308283136553955,\"304\":-0.008029033458146902,\"305\":-0.007676174925442945,\"306\":-0.007982664608063931,\"307\":-0.009084646452146477,\"308\":-0.010062284885094615,\"309\":-0.010199776413561363,\"310\":-0.009803490089302556,\"311\":-0.009353662640167274,\"312\":-0.008757285666256541,\"313\":-0.00802617208924065,\"314\":-0.007857509972385162,\"315\":-0.00874332542167882,\"316\":-0.01006529586154319,\"317\":-0.010867608432730104,\"318\":-0.011072490220385676,\"319\":-0.011205895623497492,\"320\":-0.011298901263023983,\"321\":-0.010895040784020689,\"322\":-0.009983887655805561,\"323\":-0.0091392814492657,\"324\":-0.00869699129719458,\"325\":-0.00841590705847969,\"326\":-0.008019877917256274,\"327\":-0.00760755110677249,\"328\":-0.007430193940330618,\"329\":-0.007565391368013561,\"330\":-0.007856260210771246,\"331\":-0.008009468744985464,\"332\":-0.007871117537883271,\"333\":-0.0077303216327411295,\"334\":-0.008143652605737794,\"335\":-0.009210636394107845,\"336\":-0.01019698686873231,\"337\":-0.010229510477059712,\"338\":-0.009314211626470113,\"339\":-0.008326511382299288,\"340\":-0.007914028548210056,\"341\":-0.007885369526925284,\"342\":-0.00783758679646004,\"343\":-0.007828529903594646,\"344\":-0.008123793800902246,\"345\":-0.008689958429318816,\"346\":-0.00917623860766593,\"347\":-0.009181010946120033,\"348\":-0.008649384310374616,\"349\":-0.008260673261811294,\"350\":-0.008933654396000412,\"351\":-0.01025051393823626,\"352\":-0.010099446793376947,\"353\":-0.007317565805655559,\"354\":-0.0040251783979352845,\"355\":-0.0036678910533448836,\"356\":-0.006671194324131972,\"357\":-0.010188369492462523,\"358\":-0.011723110763648821,\"359\":-0.011320882215319282,\"360\":-0.010231521089279763,\"361\":-0.009101435688760817,\"362\":-0.008513544624440601,\"363\":-0.009195815706185464,\"364\":-0.010471179665901258,\"365\":-0.010356027944137265,\"366\":-0.008355819227922603,\"367\":-0.006805680122975285,\"368\":-0.007591700134011402,\"369\":-0.009335467377892962,\"370\":-0.009306807431544285,\"371\":-0.007073019552264535,\"372\":-0.00486406473038766,\"373\":-0.004172614252772345,\"374\":-0.004025307161651233,\"375\":-0.0026791469262270745,\"376\":-0.0004272909264151272,\"377\":0.0004764083497919629,\"378\":-0.0014619173602367812,\"379\":-0.004935297292912369,\"380\":-0.007230455444251094,\"381\":-0.007380411467955434,\"382\":-0.006766100227468576,\"383\":-0.006953548049542861,\"384\":-0.007718830059622268,\"385\":-0.00814441128330924,\"386\":-0.008279004112229696,\"387\":-0.00875560812712953,\"388\":-0.009299015280149361,\"389\":-0.008564329004349919,\"390\":-0.005944639705416119,\"391\":-0.003328231149246113,\"392\":-0.0038129093974076486,\"393\":-0.008349062655011655,\"394\":-0.014003229965280414,\"395\":-0.016017909890632367,\"396\":-0.013159234943481892,\"397\":-0.009166147680755878,\"398\":-0.008252881077421835,\"399\":-0.010415374011224842,\"400\":-0.012042992052383072,\"401\":-0.010847259530602315,\"402\":-0.008092550223553499,\"403\":-0.006234922111867051,\"404\":-0.0060739778025298095,\"405\":-0.006903644080235262,\"406\":-0.008053743385315828,\"407\":-0.009433047085931366,\"408\":-0.010916516983244938,\"409\":-0.011752057662827478,\"410\":-0.011095923877022682,\"411\":-0.009266918304155368,\"412\":-0.007695347949691052,\"413\":-0.007596077026482193,\"414\":-0.009199881307834036,\"415\":-0.011426764951305459,\"416\":-0.012273641171042167,\"417\":-0.010619336083454426,\"418\":-0.007021637935044365,\"419\":-0.002748854382340425,\"420\":0.0006618534935951299,\"421\":0.00144768208551934,\"422\":-0.0010298432916535176,\"423\":-0.0045716073855153125,\"424\":-0.006009669705139433,\"425\":-0.004809482239659845,\"426\":-0.0028308805058011774,\"427\":-0.0010998716419646827,\"428\":0.0015051160589907438,\"429\":0.005607992795342307,\"430\":0.008838305360481866,\"431\":0.009111638544829093,\"432\":0.010349289068973996,\"433\":0.016383907369786593,\"434\":0.021555499242173422,\"435\":0.017470181090686723,\"436\":0.006318510590053904,\"437\":-0.004764599028559511,\"438\":-0.011445741280522538,\"439\":-0.01657971185084677,\"440\":-0.026368774943374175,\"441\":-0.045091344958371395,\"442\":-0.06785521640077166,\"443\":-0.06964495693442534,\"444\":-0.04392130325228276,\"445\":-0.007079710115190004,\"446\":0.014164593287812052,\"447\":0.011000423198110348,\"448\":0.011650229236014893,\"449\":0.019415884763369005,\"450\":0.018795479442603496,\"451\":-0.0023232535480938415,\"452\":-0.03721794707123974,\"453\":-0.059726226045646445,\"454\":-0.035569281647629965,\"455\":-0.014040457840476576,\"456\":-0.02280661375324401,\"457\":-0.07063728094922274,\"458\":-0.08867180125259788,\"459\":0.043465487053630326,\"460\":0.15618146443777572,\"461\":0.19729108370693382,\"462\":0.15210949003035212,\"463\":0.07388327381873774,\"464\":0.02687949615549444,\"465\":0.01721585129715643,\"466\":0.000045408421326209404,\"467\":-0.025979404442109957,\"468\":-0.03587914214760643,\"469\":-0.027857862542458325,\"470\":-0.013861426604253022,\"471\":-0.004111679594376793,\"472\":0.005740886724863183,\"473\":0.022047210959543997,\"474\":0.035129081233106686,\"475\":0.029456581558141116,\"476\":0.010997316308461505,\"477\":-0.005667274007540341,\"478\":-0.014543609632418915,\"479\":-0.01799242112067776,\"480\":-0.018048306616062278,\"481\":-0.011675204837374201,\"482\":0.005582375929777244,\"483\":0.02490771847816606,\"484\":0.03565268988085995,\"485\":0.036238463083919495,\"486\":0.018641811277557895,\"487\":-0.008262487549373358,\"488\":-0.021307225012512424,\"489\":-0.033613552845287664,\"490\":-0.05882480421299338,\"491\":-0.06269816460234413,\"492\":-0.0483868331351708,\"493\":0.011522003861045375,\"494\":0.06403445715642365,\"495\":0.07143998668619958,\"496\":0.059042284818025266,\"497\":0.07146550093799223,\"498\":0.07490183877973788,\"499\":0.05791098419390886,\"500\":0.03766342434430159,\"501\":0.04242087918445684,\"502\":0.0512254495521849,\"503\":0.03334712393729053,\"504\":0.0017894030799291507,\"505\":-0.00031987479776868184,\"506\":0.026919423506205426,\"507\":0.056669725484189956,\"508\":0.06199364486486096,\"509\":0.06276036530669428,\"510\":0.06713361639914289,\"511\":0.0410785895878032,\"512\":-0.0009986643694129202,\"513\":-0.027326888916673637,\"514\":-0.031077424019350753,\"515\":-0.022529926086066444,\"516\":-0.017859118443664567,\"517\":-0.018076019542661928,\"518\":-0.020424727125291704,\"519\":-0.020215970859441122,\"520\":-0.016694928703616222,\"521\":-0.012589232261532054,\"522\":-0.010346458775831091,\"523\":-0.009000510898182094,\"524\":-0.006325263914833088,\"525\":-0.003995907512739055,\"526\":-0.005930930612348853,\"527\":-0.010142157981846126,\"528\":-0.009129335297681897,\"529\":-0.002318396063247694,\"530\":0.0032549572222303194,\"531\":0.0031693728914778496,\"532\":0.0017835066581571336,\"533\":0.0030129342579326653,\"534\":0.00416934085670054,\"535\":0.0018773716662365276,\"536\":-0.0014977651613911633,\"537\":-0.0033738291835286923,\"538\":-0.004493397699216153,\"539\":-0.0062029083768405475,\"540\":-0.007497556690568823,\"541\":-0.0075577814038668995,\"542\":-0.00758791772249864,\"543\":-0.008312006686272948,\"544\":-0.00813158615133107,\"545\":-0.006115284928374339,\"546\":-0.00386853675383977,\"547\":-0.00283126803279119,\"548\":-0.0020867543445753506,\"549\":-0.0006084958884838262,\"550\":0.0006482786797177168,\"551\":0.00021795480555852458,\"552\":-0.0012881448493030465,\"553\":-0.0022063051422782773,\"554\":-0.001999524523978595,\"555\":-0.000924214618936072,\"556\":0.0008914489643998606,\"557\":0.002673215417475775,\"558\":0.0027226061631988657,\"559\":0.0011941635379916495,\"560\":0.0005774488875709871,\"561\":0.002147926393915072,\"562\":0.0044052778315940245,\"563\":0.005411021768563526,\"564\":0.005999861947245709,\"565\":0.007353319728477855,\"566\":0.0076238721009049045,\"567\":0.004964926476861709,\"568\":0.002001551731389251,\"569\":0.001729051837984544,\"570\":0.003604019350657582,\"571\":0.0048257604025832386,\"572\":0.0050508148483146866,\"573\":0.006733429649990416,\"574\":0.010091665614794078,\"575\":0.011573680984383225,\"576\":0.009395739890616785,\"577\":0.0071712699814959705,\"578\":0.0074858379993647285,\"579\":0.008905647165047891,\"580\":0.009113973847041257,\"581\":0.008072575354356095,\"582\":0.006518625144751994,\"583\":0.004346150185803612,\"584\":0.0023122429324840227,\"585\":0.002459854231430316,\"586\":0.005767185967853221,\"587\":0.009753365278693575,\"588\":0.010246664490735627,\"589\":0.0076694673015483905,\"590\":0.004944700490026422,\"591\":0.0029181962253964516,\"592\":0.0013648714683711085,\"593\":0.0006452528523163396,\"594\":0.000852211730332135,\"595\":0.0008322584440652802,\"596\":-0.0004306014543974331,\"597\":-0.002141552273282255,\"598\":-0.003106922560492686,\"599\":-0.003522378160746022,\"600\":-0.004282836395192583,\"601\":-0.005608736808615317,\"602\":-0.006814233646213701,\"603\":-0.007034786814201351,\"604\":-0.005819090967604118,\"605\":-0.003300185382323502,\"606\":-0.00038356370042236145,\"607\":0.0018313651134160345,\"608\":0.0035473391212161942,\"609\":0.005707343754251319,\"610\":0.0077356305654408845,\"611\":0.007887605750017549,\"612\":0.007316567825096887,\"613\":0.008932928950200042,\"614\":0.012745023764599054,\"615\":0.014839855326306784,\"616\":0.012812338714812467,\"617\":0.010801096301268368,\"618\":0.0120660129160549,\"619\":0.01493836415597467,\"620\":0.015797760757674504,\"621\":0.014637510623719431,\"622\":0.01391418513222956,\"623\":0.013087022854583113,\"624\":0.010132075169214452,\"625\":0.006500088691472702,\"626\":0.004796830338625428,\"627\":0.004352397493636517,\"628\":0.0027295799548276802,\"629\":0.00022348879533390533,\"630\":-0.0003419742696781542,\"631\":0.001987083357467072,\"632\":0.004410632842293886,\"633\":0.0037859591834087524,\"634\":0.0025918432992604544,\"635\":0.003756669760135878,\"636\":0.004230200132224788,\"637\":0.0011622262411566566,\"638\":-0.00248229556843427,\"639\":-0.0036814275159340343,\"640\":-0.00260510016424911,\"641\":-0.0012404599121549377,\"642\":-0.0005867021419216895,\"643\":0.00018254035659075806,\"644\":0.0013130536426891207,\"645\":0.0013407087317538497,\"646\":-0.0007098548326450924,\"647\":-0.003369838892931402,\"648\":-0.0044329487037115724,\"649\":-0.003147541341119763,\"650\":-0.0006572540274142494,\"651\":0.0010088767333480545,\"652\":0.0006497787526876395,\"653\":-0.001245664843965056,\"654\":-0.0031272597212934476,\"655\":-0.0038773310352348354,\"656\":-0.004010009408135641,\"657\":-0.004205108922246038,\"658\":-0.003737959670517573,\"659\":-0.0027833881190135307,\"660\":-0.0027434589459113443,\"661\":-0.0038809191963818683,\"662\":-0.005037000278616252,\"663\":-0.005166653588540368,\"664\":-0.0043764437619458535,\"665\":-0.003967044909425521,\"666\":-0.004787101206416306,\"667\":-0.006177673475699239,\"668\":-0.00727660015460067,\"669\":-0.007804948928102104,\"670\":-0.007808924579292993,\"671\":-0.007499018862608732,\"672\":-0.007288989580866235,\"673\":-0.007437687369010245,\"674\":-0.0076326935579582415,\"675\":-0.007403779243030427,\"676\":-0.006757098146440341,\"677\":-0.0060811063271396055,\"678\":-0.005666292605183627,\"679\":-0.005589071726267007,\"680\":-0.005732648033107047,\"681\":-0.0057700176170560145,\"682\":-0.005495189765600942,\"683\":-0.0051978095106078575,\"684\":-0.005370287471028268,\"685\":-0.005946841219766003,\"686\":-0.006290715063638057,\"687\":-0.006122279942231034,\"688\":-0.005852449668594592,\"689\":-0.005823300658033863,\"690\":-0.005790498034460447,\"691\":-0.0054851543730339205,\"692\":-0.005189632130287905,\"693\":-0.005309952531204119,\"694\":-0.005724746781595647,\"695\":-0.006034608464973339,\"696\":-0.006183028008453829,\"697\":-0.006377962400404108,\"698\":-0.006575641093357995,\"699\":-0.006515681328342468,\"700\":-0.006206120534004807,\"701\":-0.005966805098814276,\"702\":-0.00598268438895205,\"703\":-0.006155228126614257,\"704\":-0.006394626773004313,\"705\":-0.006727970065645562,\"706\":-0.0071128945570103075,\"707\":-0.007432980154998775,\"708\":-0.007736129892337995,\"709\":-0.008231392235316317,\"710\":-0.008415678553739583,\"711\":-0.006927759474494162,\"712\":-0.004318691880422726,\"713\":-0.002389554946160348,\"714\":-0.0017634823706423517,\"715\":-0.002292831949582215,\"716\":-0.004053433027411929,\"717\":-0.007300842089044651,\"718\":-0.010781307270348156,\"719\":-0.011848210882549599,\"720\":-0.010864935822885684,\"721\":-0.01012209704593989,\"722\":-0.010358013142561802,\"723\":-0.010472605641183463,\"724\":-0.008767834375497802,\"725\":-0.005224199772084283,\"726\":-0.0017038310030306747,\"727\":0.0003353956705145287,\"728\":0.0006807918797480957,\"729\":-0.00007392868576589394,\"730\":-0.0012118610047722638,\"731\":-0.002347970997743017,\"732\":-0.0033488788345962086,\"733\":-0.0040705916303299715,\"734\":-0.004412792662287263,\"735\":-0.004524849748053427,\"736\":-0.004652498225760414,\"737\":-0.004753772162811673,\"738\":-0.004579966245476504,\"739\":-0.004249831783985975,\"740\":-0.004350345572592028,\"741\":-0.005182231972338544,\"742\":-0.006239575640800959,\"743\":-0.0068295112983948044,\"744\":-0.0069179414108824205,\"745\":-0.006915760350857186,\"746\":-0.006842961028965682,\"747\":-0.00634433271762658,\"748\":-0.005515767102519308,\"749\":-0.0050371733601427,\"750\":-0.005282094865221311,\"751\":-0.005820166709402207,\"752\":-0.006032387770470537,\"753\":-0.005836589804014523,\"754\":-0.005547025493175734,\"755\":-0.005332835472732173,\"756\":-0.00522322405420119,\"757\":-0.005471965434532396,\"758\":-0.006499712564708139,\"759\":-0.008519770690020162,\"760\":-0.011381024641093614,\"761\":-0.014385903063705435,\"762\":-0.015054068506219589,\"763\":-0.00988958853197722,\"764\":-0.006821074512776535,\"765\":-0.0058241970295926405,\"766\":-0.004154700497033608,\"767\":-0.0025783046165570858,\"768\":-0.001983845824772276,\"769\":-0.002377436990388603,\"770\":-0.0030220107615268918,\"771\":-0.0033741923405518053,\"772\":-0.00372029108631576,\"773\":-0.004550621347082933,\"774\":-0.0056183912104073325,\"775\":-0.00610897543059408,\"776\":-0.005677312435471922,\"777\":-0.004914577583066564,\"778\":-0.004620802835241248,\"779\":-0.0049473708740518435,\"780\":-0.005373362411654189,\"781\":-0.005244850170138025,\"782\":-0.004358631145642926,\"783\":-0.0031401440276626618,\"784\":-0.0022329333389691126,\"785\":-0.0018391802288655155,\"786\":-0.0016648296554719316,\"787\":-0.0016561124444366393,\"788\":-0.0023619502276392627,\"789\":-0.004165248441060231,\"790\":-0.006758384386912752,\"791\":-0.009486922875003162,\"792\":-0.01116718195877946,\"793\":-0.009553095832425062,\"794\":-0.002045890682220987,\"795\":0.011777537587145252,\"796\":0.020844289390711607,\"797\":0.010482599938929896,\"798\":0.0011627537563942002,\"799\":0.0028757989054567067,\"800\":0.00597737984595621,\"801\":0.0008147154466338393,\"802\":-0.01245190020239825,\"803\":-0.02531980604620146,\"804\":-0.03149823976696199,\"805\":-0.031120572660731604,\"806\":-0.025776131713052854,\"807\":-0.01343788243392601,\"808\":0.004052501624161755,\"809\":0.0150358636810241,\"810\":0.015007593911706071,\"811\":0.012955406724148848,\"812\":0.019114268239177744,\"813\":0.02730028263547245,\"814\":0.021415051631096558,\"815\":-0.012184005882522317,\"816\":-0.10097410064387839,\"817\":-0.2354879815082474,\"818\":-0.28950551992322376,\"819\":-0.18120478667284035,\"820\":0.0194743664952849,\"821\":0.13472784976192254,\"822\":0.13156519208786172,\"823\":0.06329629857226736,\"824\":-0.05698236806086835,\"825\":-0.08741691767257041,\"826\":-0.18737314118882423,\"827\":-0.9801840696996956,\"828\":-0.04178393711854483,\"829\":-0.18864623795174898,\"830\":-0.8757158321725185,\"831\":-0.26861322086343464,\"832\":-0.001622790485407355,\"833\":0.2235999093227097,\"834\":0.2751800663447722,\"835\":0.23011365690859367,\"836\":0.040643770628169595,\"837\":-0.08414050566974582,\"838\":0.09142267204738176}",
        "payloadType": "json",
        "x": 160,
        "y": 1500,
        "wires": [
            [
                "18b973077a6e919a",
                "7f37c2c86473f466"
            ]
        ]
    },
    {
        "id": "e4ad0dc6f6435f14",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "Data Example of data from ReactIR",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"label\":\"ds1\",\"data\":[{\"x\":1677246631553,\"y\":31},{\"x\":1677246631840,\"y\":17},{\"x\":1677246632077,\"y\":31},{\"x\":1677246632329,\"y\":42}],\"backgroundColor\":\"#009900\",\"borderColor\":\"#009900\",\"steppedLine\":false,\"fill\":false,\"borderWidth\":1}]",
        "payloadType": "json",
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "9ad8608e4032fe17"
            ]
        ]
    },
    {
        "id": "0bcc7d97cf5832d2",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 690,
        "y": 1700,
        "wires": []
    },
    {
        "id": "7f37c2c86473f466",
        "type": "function",
        "z": "300c6ec10595d0c1",
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1460,
        "wires": [
            [
                "9ad8608e4032fe17",
                "cd047ae224c67b57"
            ]
        ]
    },
    {
        "id": "cd047ae224c67b57",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 970,
        "y": 1500,
        "wires": []
    },
    {
        "id": "49e34232260e0df0",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 1540,
        "wires": []
    },
    {
        "id": "fb770d51f3bd1d0c",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "d63b8e5e8400c98c"
            ]
        ]
    },
    {
        "id": "65a2481cb5b467e8",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 580,
        "wires": [
            [
                "d245c94c3b8c1879"
            ]
        ]
    },
    {
        "id": "8709a00be77d04e1",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "6474c5938e4295c7"
            ]
        ]
    },
    {
        "id": "58b143206c552e03",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1220,
        "wires": [
            [
                "305843c9398f88fc"
            ]
        ]
    },
    {
        "id": "92b8f91188065817",
        "type": "subflow:bc1076baf3559e95",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 560,
        "y": 3400,
        "wires": [
            [
                "f3b2a09097bc7261",
                "6f4465e2c299556b",
                "c3819069fc6a2883",
                "308ae7d4e325a8b8",
                "413f9a10c953bb5d",
                "3f6e4adac0a978dc",
                "16fb364c755d81a9",
                "6d76f059a1bb6cfc",
                "df18ccbca886ec83",
                "bedc2a76155aad75",
                "be003504f40cb0a5",
                "21a51d54e0371c76",
                "c3a3910d874aa5f9",
                "66f056b1d53d6310",
                "cdd36794f701f138",
                "cf190365bdf7f835",
                "87bd6926210b4c97",
                "fb376a9c5c6513da",
                "f644053fd15d5cf8",
                "ff845804d4ce4fdf",
                "1e23e06bbe53d730",
                "29d1917191388025",
                "f0bce08f2b5cb245",
                "1f3e0cfca512c6da"
            ]
        ]
    },
    {
        "id": "f3b2a09097bc7261",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 510,
        "y": 3460,
        "wires": []
    },
    {
        "id": "3f9b6594aa8c35aa",
        "type": "subflow:17061720ba0331b7",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 440,
        "y": 580,
        "wires": [
            [
                "65a2481cb5b467e8",
                "070bab2db6f2b72e"
            ]
        ]
    },
    {
        "id": "51252a654b1de219",
        "type": "subflow:755f6eaaa7c0cddd",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 900,
        "wires": [
            [
                "8709a00be77d04e1"
            ],
            [
                "c3e8210705f25c3e"
            ]
        ]
    },
    {
        "id": "dbed2f5899284a6f",
        "type": "subflow:e5d36bc87bf46f25",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 1220,
        "wires": [
            [
                "58b143206c552e03",
                "292a8d4a61032ecd"
            ]
        ]
    },
    {
        "id": "1355242bc17a12a1",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "SF10 Vapourtec 2 (COMM2)",
        "info": "",
        "x": 180,
        "y": 2460,
        "wires": []
    },
    {
        "id": "2174afcaff8d222b",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 730,
        "y": 2560,
        "wires": []
    },
    {
        "id": "d4ce5ef5064d6a12",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "FlowSynMaxi 2",
        "info": "",
        "x": 120,
        "y": 3360,
        "wires": []
    },
    {
        "id": "dcca9b2be981d0e3",
        "type": "subflow:033e19cbbcf6ab20",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 540,
        "y": 2560,
        "wires": [
            [
                "2174afcaff8d222b"
            ]
        ]
    },
    {
        "id": "6f4465e2c299556b",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressSystem",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3420,
        "wires": [
            [
                "01473b9cfd543d65"
            ]
        ]
    },
    {
        "id": "c3819069fc6a2883",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressFlowSynA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3460,
        "wires": [
            [
                "d36cf9621da7d890"
            ]
        ]
    },
    {
        "id": "308ae7d4e325a8b8",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressFlowSynB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3500,
        "wires": [
            [
                "6654041bdeec793e"
            ]
        ]
    },
    {
        "id": "413f9a10c953bb5d",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressBinaryC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3540,
        "wires": [
            [
                "72d05ba9adf71081"
            ]
        ]
    },
    {
        "id": "3f6e4adac0a978dc",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.pressBinaryD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3580,
        "wires": [
            [
                "8da8b66cd04bfd88"
            ]
        ]
    },
    {
        "id": "16fb364c755d81a9",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor1",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3640,
        "wires": [
            [
                "8f96608ae14e5a87"
            ]
        ]
    },
    {
        "id": "6d76f059a1bb6cfc",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3680,
        "wires": [
            [
                "a17353bc620d8b19"
            ]
        ]
    },
    {
        "id": "df18ccbca886ec83",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor3",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3720,
        "wires": [
            [
                "3f28709c7fe51f55"
            ]
        ]
    },
    {
        "id": "bedc2a76155aad75",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.tempReactor4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3760,
        "wires": [
            [
                "483d14e628d9c611"
            ]
        ]
    },
    {
        "id": "be003504f40cb0a5",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3880,
        "wires": [
            [
                "544db2dfddcbab6a"
            ]
        ]
    },
    {
        "id": "21a51d54e0371c76",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3920,
        "wires": [
            [
                "64b235d49517f2a4"
            ]
        ]
    },
    {
        "id": "c3a3910d874aa5f9",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3960,
        "wires": [
            [
                "a22ac1e430585028"
            ]
        ]
    },
    {
        "id": "66f056b1d53d6310",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4000,
        "wires": [
            [
                "80673dbbe1ecbe7d"
            ]
        ]
    },
    {
        "id": "cdd36794f701f138",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveOpenCW",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4060,
        "wires": [
            [
                "b3a18eb292713a6e"
            ]
        ]
    },
    {
        "id": "cf190365bdf7f835",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4120,
        "wires": [
            [
                "15fcb1520ac677d9"
            ]
        ]
    },
    {
        "id": "87bd6926210b4c97",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4160,
        "wires": [
            [
                "4f0ba3734c95e9a0"
            ]
        ]
    },
    {
        "id": "fb376a9c5c6513da",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4200,
        "wires": [
            [
                "206eae7fd8f195d3"
            ]
        ]
    },
    {
        "id": "f644053fd15d5cf8",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.valveInjOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4240,
        "wires": [
            [
                "1ff8f618cbf29092"
            ]
        ]
    },
    {
        "id": "ff845804d4ce4fdf",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4300,
        "wires": [
            [
                "faf1ee75762eb79a"
            ]
        ]
    },
    {
        "id": "1e23e06bbe53d730",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4340,
        "wires": [
            [
                "e5d6d22ce1ec9cbe"
            ]
        ]
    },
    {
        "id": "29d1917191388025",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4380,
        "wires": [
            [
                "d35d8c1e827bd98d"
            ]
        ]
    },
    {
        "id": "f0bce08f2b5cb245",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.flowRatePumpD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4420,
        "wires": [
            [
                "da46a79f8110bc84"
            ]
        ]
    },
    {
        "id": "1f3e0cfca512c6da",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.chillerDetected",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 4480,
        "wires": [
            [
                "29bbbe2e93f7526c"
            ]
        ]
    },
    {
        "id": "15e06f9a96fe031f",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "NMR 1",
        "info": "",
        "x": 70,
        "y": 4620,
        "wires": []
    },
    {
        "id": "f6c79b68077cfb68",
        "type": "function",
        "z": "300c6ec10595d0c1",
        "name": "Package NMR 1 Graph data",
        "func": "var dataFromNMR1 = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromNMR1.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromNMR1[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 4720,
        "wires": [
            [
                "34da9776f4aaec01",
                "476698a1e2e59862"
            ]
        ]
    },
    {
        "id": "dd0d805b9fca6099",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "Data Example of data from ReactIR",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"label\":\"ds1\",\"data\":[{\"x\":1677246631553,\"y\":31},{\"x\":1677246631840,\"y\":17},{\"x\":1677246632077,\"y\":31},{\"x\":1677246632329,\"y\":42}],\"backgroundColor\":\"#009900\",\"borderColor\":\"#009900\",\"steppedLine\":false,\"fill\":false,\"borderWidth\":1}]",
        "payloadType": "json",
        "x": 720,
        "y": 4760,
        "wires": [
            [
                "34da9776f4aaec01"
            ]
        ]
    },
    {
        "id": "8bc4f0c1d5457340",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 4660,
        "wires": []
    },
    {
        "id": "476698a1e2e59862",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 970,
        "y": 4760,
        "wires": []
    },
    {
        "id": "ef78cb8edbd73247",
        "type": "subflow:fad566f5d6b0591c",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 510,
        "y": 4720,
        "wires": [
            [
                "f6c79b68077cfb68",
                "8bc4f0c1d5457340"
            ]
        ]
    },
    {
        "id": "bd94f14a5d634934",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 ON",
        "group": "1853ba21.f1b306",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "e0975838cf9ee1c3",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 OFF",
        "group": "1853ba21.f1b306",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "cf546ed9d9002ff2",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 READ Temp",
        "group": "1853ba21.f1b306",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "c59bbdbf3d457864",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 ON",
        "group": "b861fb62.1b9f38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "20863aedfccded9e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 OFF",
        "group": "b861fb62.1b9f38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "35de6ea470a2f387",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 READ Temp",
        "group": "b861fb62.1b9f38",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "b93496c608631d8e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 ON",
        "group": "1f3aa579c5b4973b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "2b724d782dc8f17c",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 OFF",
        "group": "1f3aa579c5b4973b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "2831b497b733e9af",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 READ Temp",
        "group": "1f3aa579c5b4973b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "d38e9af0c78c2594",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 ON",
        "group": "99486f5374ae4c69",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "eb84ab456aa5fa4e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 OFF",
        "group": "99486f5374ae4c69",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "2311bde35946f6b8",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 READ Temp",
        "group": "99486f5374ae4c69",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "03f169e50b993f72",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button READ ReactIR Data",
        "group": "f92bad53a3851b4d",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "READ ReactIR Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "45bf714486772285"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "d5862377158df061",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Remote Enable",
        "group": "3aec7fe7cbf92af0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Remote Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "REMOTEEN",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "75074fc3622b1096",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Start",
        "group": "3aec7fe7cbf92af0",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "START",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "0f4b414cea8dded2",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Stop",
        "group": "3aec7fe7cbf92af0",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "STOP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1800,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "62782e3e8c03e215",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve A",
        "group": "3aec7fe7cbf92af0",
        "order": 5,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE A",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1860,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "671712da7121303d",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve B",
        "group": "3aec7fe7cbf92af0",
        "order": 6,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve B",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE B",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1900,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "b61600ff0537bdb5",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: FLOW",
        "group": "3aec7fe7cbf92af0",
        "order": 7,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: FLOW",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE FLOW",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1960,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "c2b2459c0b1bcfc4",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: REG",
        "group": "3aec7fe7cbf92af0",
        "order": 9,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: REG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE REG",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 2040,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "d44c970a8826f259",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: DOSE",
        "group": "3aec7fe7cbf92af0",
        "order": 11,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: DOSE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE DOSE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 2120,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "88c436f2f31a8145",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: GAS",
        "group": "3aec7fe7cbf92af0",
        "order": 13,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: GAS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE GAS",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 2200,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "a5ec258657adaa7a",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: RAMP",
        "group": "3aec7fe7cbf92af0",
        "order": 15,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: RAMP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE RAMP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 2280,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "6ef01fd150ca27f7",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Version",
        "group": "3aec7fe7cbf92af0",
        "order": 2,
        "width": 24,
        "height": 1,
        "passthru": false,
        "label": "Version",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "GV",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1640,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "ff241472f144bd91",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Remote Enable",
        "group": "c0604acf3435ae78",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Remote Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "REMOTEEN",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2560,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "2d31162afc06db0b",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Start",
        "group": "c0604acf3435ae78",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "START",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2620,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "088be94e4853e06a",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Stop",
        "group": "c0604acf3435ae78",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "STOP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2660,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "431cfb9b70067f7d",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve A",
        "group": "c0604acf3435ae78",
        "order": 5,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE A",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 2720,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "8e8fb76a70b8353e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve B",
        "group": "c0604acf3435ae78",
        "order": 6,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve B",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE B",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 2760,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "2966c915ddb5bb23",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: FLOW",
        "group": "c0604acf3435ae78",
        "order": 7,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: FLOW",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE FLOW",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2820,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "5e8b9f9f7bf687a5",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: REG",
        "group": "c0604acf3435ae78",
        "order": 9,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: REG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE REG",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 2900,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "5c414a39d7a6d81d",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: DOSE",
        "group": "c0604acf3435ae78",
        "order": 11,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: DOSE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE DOSE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2980,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "a44a7bc179fb957f",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: GAS",
        "group": "c0604acf3435ae78",
        "order": 13,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: GAS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE GAS",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 3060,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "98addec738542d6e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: RAMP",
        "group": "c0604acf3435ae78",
        "order": 15,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: RAMP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE RAMP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 3140,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "719106ce219be6fd",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Version",
        "group": "c0604acf3435ae78",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Version",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "GV",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 2500,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "2be13bb13a01c1f0",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynValveA",
        "label": "FlowSyn Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 42,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynValveA",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 140,
        "y": 3920,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "0b5289ef0fbae7b3",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynValveB",
        "label": "FlowSyn Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 44,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynValveB",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 140,
        "y": 3960,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "f04a6d0a3a193c2b",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryValveC",
        "label": "FlowBinary Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 46,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryValveC",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 150,
        "y": 4000,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "ed0db226c3316941",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryValveD",
        "label": "FlowBinary Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 48,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryValveD",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 150,
        "y": 4040,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "6f4c1dceb169eac9",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowCWValve",
        "label": "FlowCW Valve (ON = Collect)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 58,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowCWValve",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 140,
        "y": 4100,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "f1353a2f09c0c990",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynInjValveA",
        "label": "FlowSyn Inj Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 50,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynInjValveA",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 150,
        "y": 4160,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "1afd328769eea09d",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynInjValveB",
        "label": "FlowSyn Inj Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 52,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynInjValveB",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 150,
        "y": 4200,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "7c4da3ec425c1c48",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryInjValveC",
        "label": "FlowBinary Inj Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 54,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryInjValveC",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 160,
        "y": 4240,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "65b754bf0c89c457",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryInjValveD",
        "label": "FlowBinary Inj Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 56,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryInjValveD",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 160,
        "y": 4280,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "20121bcc62f06520",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch Heater",
        "label": "Heater",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 62,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Heater",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 120,
        "y": 4340,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "d548842411bb0dc4",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotChip1 Temp.",
        "label": "HotChip1 Temp.",
        "tooltip": "",
        "group": "1853ba21.f1b306",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ]
    },
    {
        "id": "952d85c8374612e2",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotChip2 Temp.",
        "label": "HotChip2 Temp.",
        "tooltip": "",
        "group": "b861fb62.1b9f38",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ]
    },
    {
        "id": "c8065569cab5ac58",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotCoil1 Temp.",
        "label": "HotCoil1 Temp.",
        "tooltip": "",
        "group": "1f3aa579c5b4973b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 980,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ]
    },
    {
        "id": "4ac3248f838ec506",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotCoil2 Temp.",
        "label": "HotCoil2 Temp.",
        "tooltip": "",
        "group": "99486f5374ae4c69",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ]
    },
    {
        "id": "227b467f42b0481d",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow",
        "label": "Set Flow",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 8,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 140,
        "y": 2000,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "633348f00efe9880",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow (Gas)",
        "label": "Set Flow (Gas)",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 14,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderGasFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 160,
        "y": 2240,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "9c9b6a377fa91de8",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Pressure",
        "label": "Set Pressure",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 10,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderPressure",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 140,
        "y": 2080,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "f19469de1864781f",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Dose",
        "label": "Set Dose",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 12,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderDose",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "e7070f7b4ca923b4",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Start",
        "label": "Set Ramp Start",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 16,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStart",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2320,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "7efe3e9feca267ab",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Stop",
        "label": "Set Ramp Stop",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 18,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStop",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2360,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "27a750e06688546a",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Time",
        "label": "Set Ramp Time",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 21,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampTime",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2400,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "519256aab2aae134",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow",
        "label": "Set Flow",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 8,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 180,
        "y": 2860,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "13c39d5f99cbe78d",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow (Gas)",
        "label": "Set Flow (Gas)",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 14,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderGasFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 200,
        "y": 3100,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "dcad88e1e5ca1681",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Pressure",
        "label": "Set Pressure",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 10,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderPressure",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 180,
        "y": 2940,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "e397440ab68413c8",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Dose",
        "label": "Set Dose",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 12,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderDose",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 170,
        "y": 3020,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "f8fe9ca4e5f942c1",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Start",
        "label": "Set Ramp Start",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 16,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStart",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 190,
        "y": 3180,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "cc11ef578bc091a6",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Stop",
        "label": "Set Ramp Stop",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 18,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStop",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 190,
        "y": 3220,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "6e7e66466fc810fc",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Time",
        "label": "Set Ramp Time",
        "tooltip": "",
        "group": "c0604acf3435ae78",
        "order": 21,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampTime",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 190,
        "y": 3260,
        "wires": [
            [
                "dcca9b2be981d0e3"
            ]
        ]
    },
    {
        "id": "cbf85a1028ca2c93",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotChip1",
        "label": "Temp",
        "tooltip": "",
        "group": "1853ba21.f1b306",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ]
    },
    {
        "id": "223c2cfc4ef4e0dc",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotChip2",
        "label": "Temp",
        "tooltip": "",
        "group": "b861fb62.1b9f38",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 660,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ]
    },
    {
        "id": "e412a469f25af6f3",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotCoil1",
        "label": "Temp.",
        "tooltip": "",
        "group": "1f3aa579c5b4973b",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 980,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ]
    },
    {
        "id": "70f7040d0d0ca47e",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotCoil2",
        "label": "Temp.",
        "tooltip": "",
        "group": "99486f5374ae4c69",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0.1",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ]
    },
    {
        "id": "aa4a95dee7466e57",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Pump A Flow Rate",
        "label": "Pump A Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 12,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PumpAFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 170,
        "y": 3440,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "72992e3df441f958",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Bin. Pump C Flow Rate",
        "label": "Bin. Pump C Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 16,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "BinaryPumpCFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 190,
        "y": 3600,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "966f16ad106a2797",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Bin. Pump D Flow Rate",
        "label": "Bin. Pump D Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 18,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "BinaryPumpDFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 190,
        "y": 3680,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "2e0ae211a493b3d1",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Pump B Flow Rate",
        "label": "Pump B Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PumpBFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 170,
        "y": 3520,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "fe5847013f61ab81",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpAFlowRate",
        "label": "Flow Syn Pump A Flow Rate (mL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "PumpAFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 3400,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "7bbed0d731514241",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpCFlowRate",
        "label": "Binary Pump C Flow Rate (uL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "BinaryPumpCFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 3560,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "a48c26ea8e2f2189",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpDFlowRate",
        "label": "Binary Pump D Flow Rate (uL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "BinaryPumpDFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 3640,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "dedf7087ab1c7ff1",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpBFlowRate",
        "label": "Flow Syn Pump B Flow Rate (mL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "PumpBFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 170,
        "y": 3480,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "9e997806a430e433",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor1Temp",
        "label": "Reactor 1 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 28,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor1Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 3740,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "eccdff2b42411467",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor2Temp",
        "label": "Reactor 2 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 29,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor2Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 3780,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "0b4f0c7572d9867b",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor3Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 30,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor3Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 3820,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "bb81d96e19a4a823",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor4Temp",
        "label": "Reactor 4 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 31,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor4Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 3860,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "d63b8e5e8400c98c",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotChip 1 Gauge",
        "group": "1853ba21.f1b306",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotChip 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "d245c94c3b8c1879",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotChip 2 Gauge",
        "group": "b861fb62.1b9f38",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotChip 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 850,
        "y": 580,
        "wires": []
    },
    {
        "id": "6474c5938e4295c7",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil 1 Gauge",
        "group": "1f3aa579c5b4973b",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotCoil 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 900,
        "wires": []
    },
    {
        "id": "305843c9398f88fc",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil 2 Gauge",
        "group": "99486f5374ae4c69",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotCoil 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 1220,
        "wires": []
    },
    {
        "id": "01473b9cfd543d65",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge FlowSynMaxi2SystemPressure",
        "group": "59c575dbf5467d2a",
        "order": 32,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn Maxi 2 System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 3420,
        "wires": []
    },
    {
        "id": "d36cf9621da7d890",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge FlowSynMaxi2FlowSynAPressure",
        "group": "59c575dbf5467d2a",
        "order": 33,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn Maxi 2 Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 3460,
        "wires": []
    },
    {
        "id": "6654041bdeec793e",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge FlowSynMaxi2FlowSynBPressure",
        "group": "59c575dbf5467d2a",
        "order": 34,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn Maxi 2 Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 3500,
        "wires": []
    },
    {
        "id": "72d05ba9adf71081",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge FlowSynMaxi2FlowBinaryCPressure",
        "group": "59c575dbf5467d2a",
        "order": 35,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn Maxi 2 Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8da8b66cd04bfd88",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge FlowSynMaxi2FlowBinaryDPressure",
        "group": "59c575dbf5467d2a",
        "order": 36,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn Maxi 2 Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 3580,
        "wires": []
    },
    {
        "id": "8f96608ae14e5a87",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Reactor 1 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 19,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 3640,
        "wires": []
    },
    {
        "id": "a17353bc620d8b19",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Reactor 2 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 20,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 3680,
        "wires": []
    },
    {
        "id": "3f28709c7fe51f55",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Reactor 3 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 21,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 3720,
        "wires": []
    },
    {
        "id": "483d14e628d9c611",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Reactor 4 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 22,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 3760,
        "wires": []
    },
    {
        "id": "faf1ee75762eb79a",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Pump A Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 4300,
        "wires": []
    },
    {
        "id": "e5d6d22ce1ec9cbe",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Pump B Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 4340,
        "wires": []
    },
    {
        "id": "d35d8c1e827bd98d",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Pump C Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 4380,
        "wires": []
    },
    {
        "id": "da46a79f8110bc84",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Gauge Pump D Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 4420,
        "wires": []
    },
    {
        "id": "ad160bb3bd8b5130",
        "type": "ui_chart",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Chart Reactor Temperatures",
        "group": "59c575dbf5467d2a",
        "order": 68,
        "width": 0,
        "height": 0,
        "label": "Reactor Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "d4d449901d60d49d",
        "type": "ui_chart",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Chart Flow Rates",
        "group": "59c575dbf5467d2a",
        "order": 69,
        "width": 0,
        "height": 0,
        "label": "Flow Rates",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "55",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "9ad8608e4032fe17",
        "type": "ui_template",
        "z": "300c6ec10595d0c1",
        "group": "f92bad53a3851b4d",
        "name": "ReactIR 702L 1 Data",
        "order": 2,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart3-reactir1-man\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n        console.log('Position ReactIR 1 MAN');\n        console.dir(data);\n            new Chart(document.getElementById(\"line-chart3-reactir1-man\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "34da9776f4aaec01",
        "type": "ui_template",
        "z": "300c6ec10595d0c1",
        "group": "1b5415305cc99c74",
        "name": "NMR 1 Data",
        "order": 1,
        "width": 24,
        "height": 6,
        "format": "<canvas id=\"line-chart3-nmr1-man\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position NMR1 MAN');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart3-nmr1-man\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'NMR1 Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 4720,
        "wires": [
            []
        ]
    },
    {
        "id": "544db2dfddcbab6a",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 43,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Valve A",
        "x": 1100,
        "y": 3880,
        "wires": []
    },
    {
        "id": "64b235d49517f2a4",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 45,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Valve B",
        "x": 1100,
        "y": 3920,
        "wires": []
    },
    {
        "id": "a22ac1e430585028",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 47,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Valve C",
        "x": 1090,
        "y": 3960,
        "wires": []
    },
    {
        "id": "80673dbbe1ecbe7d",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 49,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Valve D",
        "x": 1090,
        "y": 4000,
        "wires": []
    },
    {
        "id": "b3a18eb292713a6e",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 59,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "C/W Valve",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED C/W Valve",
        "x": 1080,
        "y": 4060,
        "wires": []
    },
    {
        "id": "15fcb1520ac677d9",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 51,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Inj Valve A",
        "x": 1110,
        "y": 4120,
        "wires": []
    },
    {
        "id": "4f0ba3734c95e9a0",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 53,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Flow Syn Inj Valve B",
        "x": 1110,
        "y": 4160,
        "wires": []
    },
    {
        "id": "206eae7fd8f195d3",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 55,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Inj Valve C",
        "x": 1100,
        "y": 4200,
        "wires": []
    },
    {
        "id": "1ff8f618cbf29092",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 57,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Binary Inj Valve D",
        "x": 1100,
        "y": 4240,
        "wires": []
    },
    {
        "id": "29bbbe2e93f7526c",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 65,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LED Chiller Detected",
        "x": 1100,
        "y": 4480,
        "wires": []
    },
    {
        "id": "e08feeebe5761acf",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Switch FlowUV 1",
        "label": "FlowUV 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 5420,
        "wires": [
            [
                "74daa39c7739a90d"
            ]
        ]
    },
    {
        "id": "cd23b2ee70705ac0",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Switch FlowUV 2",
        "label": "FlowUV 2",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 5480,
        "wires": [
            [
                "9e0344e8ddd6fa80"
            ]
        ]
    },
    {
        "id": "f41c325f135a9d9b",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch SF10 Vapourtec 1",
        "label": "SF10 Vapourtec 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 5180,
        "wires": [
            [
                "932e7ca88009322b"
            ]
        ]
    },
    {
        "id": "07b3f5343d45052b",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynMaxi 2",
        "label": "FlowSynMaxi 2",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 380,
        "y": 5120,
        "wires": [
            [
                "84040b91a8bb0dc4"
            ]
        ]
    },
    {
        "id": "b56700193289bef6",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch ReactIR 702L 1",
        "label": "ReactIR 702L 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 380,
        "y": 5300,
        "wires": [
            [
                "106f2476020d411a"
            ]
        ]
    },
    {
        "id": "f119b8b6edc69103",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch HotChip 1",
        "label": "HotChip 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 4880,
        "wires": [
            [
                "0f3f5c7534041350"
            ]
        ]
    },
    {
        "id": "f3c812e7b5f0962e",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch HotChip 2",
        "label": "HotChip 2",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 4940,
        "wires": [
            [
                "953053edc25e79d8"
            ]
        ]
    },
    {
        "id": "8d2f3f1d233c1d6c",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch HotCoil 1",
        "label": "HotCoil 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 5000,
        "wires": [
            [
                "6148a7979ee82bb4"
            ]
        ]
    },
    {
        "id": "3f07126e263784ef",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch HotCoil 2",
        "label": "HotCoil 2",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 5060,
        "wires": [
            [
                "56d3da5d12291485"
            ]
        ]
    },
    {
        "id": "bc9c48048361f784",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch NMR 1",
        "label": "NMR 1",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 5360,
        "wires": [
            [
                "d3efea68c809ec4d"
            ]
        ]
    },
    {
        "id": "6e22e5dd707533be",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "MANUALLY Activate/Deactivate Sub-Systems",
        "info": "",
        "x": 190,
        "y": 4840,
        "wires": []
    },
    {
        "id": "74daa39c7739a90d",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowuv1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 5420,
        "wires": [
            []
        ]
    },
    {
        "id": "144ce5e8ccd686f0",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch SF10 Vapourtec 2",
        "label": "SF10 Vapourtec 2",
        "tooltip": "",
        "group": "a8bc3fc9971dbe39",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 5240,
        "wires": [
            [
                "c3ae5f6f9284b717"
            ]
        ]
    },
    {
        "id": "0f3f5c7534041350",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 4880,
        "wires": [
            []
        ]
    },
    {
        "id": "953053edc25e79d8",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 4940,
        "wires": [
            []
        ]
    },
    {
        "id": "6148a7979ee82bb4",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 5000,
        "wires": [
            []
        ]
    },
    {
        "id": "56d3da5d12291485",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 5060,
        "wires": [
            []
        ]
    },
    {
        "id": "84040b91a8bb0dc4",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 5120,
        "wires": [
            []
        ]
    },
    {
        "id": "932e7ca88009322b",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 5180,
        "wires": [
            []
        ]
    },
    {
        "id": "c3ae5f6f9284b717",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec2.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 5240,
        "wires": [
            []
        ]
    },
    {
        "id": "106f2476020d411a",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reactIR702L1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 5300,
        "wires": [
            []
        ]
    },
    {
        "id": "d3efea68c809ec4d",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nmr1.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 5360,
        "wires": [
            []
        ]
    },
    {
        "id": "9e0344e8ddd6fa80",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowuv2.inUse",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 5480,
        "wires": [
            []
        ]
    },
    {
        "id": "010baab8936d14f7",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "??? Buttons must be updated according to real setting & not persistance value",
        "info": "",
        "x": 370,
        "y": 4800,
        "wires": []
    },
    {
        "id": "5b8f268861cf6431",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 4880,
        "wires": [
            [
                "f119b8b6edc69103",
                "f3c812e7b5f0962e",
                "8d2f3f1d233c1d6c",
                "3f07126e263784ef",
                "07b3f5343d45052b",
                "f41c325f135a9d9b",
                "144ce5e8ccd686f0",
                "b56700193289bef6",
                "bc9c48048361f784"
            ]
        ]
    },
    {
        "id": "4986aa2b7e15301a",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d60c267c.d14008",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "40c46cb9.73bf84",
        "type": "inject",
        "z": "a6e09bd3.85fe48",
        "name": "Trigger Set Global Variables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "74f01eb.2c556e"
            ]
        ]
    },
    {
        "id": "74f01eb.2c556e",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Set Device IP Addresses",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.ipAddr",
                "pt": "global",
                "to": "192.168.1.213",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.ipAddr",
                "pt": "global",
                "to": "192.168.1.211",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.ipAddr",
                "pt": "global",
                "to": "192.168.1.214",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.port",
                "pt": "global",
                "to": "80",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.port",
                "pt": "global",
                "to": "80",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv1.ipAddr",
                "pt": "global",
                "to": "192.168.1.156",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv1.port",
                "pt": "global",
                "to": "3456",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv2.ipAddr",
                "pt": "global",
                "to": "192.168.1.156",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump1.ipAddr",
                "pt": "global",
                "to": "192.168.1.158",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump2.ipAddr",
                "pt": "global",
                "to": "192.168.1.159",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv2.port",
                "pt": "global",
                "to": "3456",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "reactIR702L1.ipAddr",
                "pt": "global",
                "to": "192.168.1.50",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "reactIR702L1.port",
                "pt": "global",
                "to": "62552",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "f5a69aa3.1b4dc8"
            ]
        ]
    },
    {
        "id": "f5a69aa3.1b4dc8",
        "type": "function",
        "z": "a6e09bd3.85fe48",
        "name": "Set Global Init values (FlowSynMaxi1)",
        "func": "var initVariable00 ='0.0';\nvar initVariable0 = 0;\n\nglobal.set('flowsynmaxi1.setTempReactor1', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor2', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor3', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor4', initVariable00);\n\nglobal.set('flowsynmaxi1.pressureSystem', initVariable00);\nglobal.set('flowsynmaxi1.pressureFlowSynA', initVariable00);\nglobal.set('flowsynmaxi1.pressureFlowSynB', initVariable00);\nglobal.set('flowsynmaxi1.pressureBinaryC', initVariable00);\nglobal.set('flowsynmaxi1.pressureBinaryD', initVariable00);\n\nglobal.set('flowsynmaxi1.temperatureReactor1', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor2', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor3', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor4', initVariable00);\n\nglobal.set('flowsynmaxi1.valveOpenA', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenB', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenC', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenD', initVariable0);\n\nglobal.set('flowsynmaxi1.valveOpenCW', initVariable0);\n\nglobal.set('flowsynmaxi1.valveInjOpenA', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenB', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenC', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenD', initVariable0);\n\nglobal.set('flowsynmaxi1.flowRatePumpA', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpB', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpC', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpD', initVariable00);\n\nglobal.set('flowsynmaxi1.chillerDetected', initVariable0);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "17972a31.a15216",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Extract Public IPv4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.publicIPv4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "fb7fb156.07694"
            ]
        ]
    },
    {
        "id": "fb7fb156.07694",
        "type": "mqtt out",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Host IP Address (Public V4)",
        "topic": "ipAddr/FuturePharma/Fumehood1/public",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c025c73d.909a28",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "8ece64a4.ffd7b8",
        "type": "inject",
        "z": "a6e09bd3.85fe48",
        "name": "Trigger IP Address",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "ca1153c6.a24d3"
            ]
        ]
    },
    {
        "id": "833c344d.0778a8",
        "type": "mqtt out",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Host IP Address (Internal V4)",
        "topic": "ipAddr/FuturePharma/Fumehood1/internal",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c025c73d.909a28",
        "x": 970,
        "y": 420,
        "wires": []
    },
    {
        "id": "7f0dca00.5e1c78",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Extract Internal IPv4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.internalIPv4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "833c344d.0778a8"
            ]
        ]
    },
    {
        "id": "6ab09793.cc9578",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "ece3948.fd60368",
        "type": "catch",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "a09c186d.0d3348"
            ]
        ]
    },
    {
        "id": "a09c186d.0d3348",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "9dec9793.1f0bb8",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Broker",
        "info": "",
        "x": 90,
        "y": 140,
        "wires": []
    },
    {
        "id": "3d73b35a.48f29c",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "4cf2092f.91a5e8",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "INIT Equipment IP:port values",
        "info": "",
        "x": 140,
        "y": 260,
        "wires": []
    },
    {
        "id": "ac7e0c9b.aca3a",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "Keep track of Pi's Dynamic IP settings",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "c34c925e.d89f4",
        "type": "aedes broker",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Broker (Aedes)",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "9001",
        "mqtt_ws_path": "ws/mqtt",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "d60c267c.d14008"
            ],
            [
                "22f36743ce238482"
            ]
        ]
    },
    {
        "id": "ca1153c6.a24d3",
        "type": "ip",
        "z": "a6e09bd3.85fe48",
        "name": "Retrieve Host IP Address",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "7f0dca00.5e1c78",
                "17972a31.a15216",
                "6ab09793.cc9578"
            ]
        ]
    },
    {
        "id": "22f36743ce238482",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 430,
        "y": 240,
        "wires": []
    },
    {
        "id": "9155070971f48582",
        "type": "catch",
        "z": "cdb779666b3351ad",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "24ce737dad05d2b4"
            ]
        ]
    },
    {
        "id": "24ce737dad05d2b4",
        "type": "debug",
        "z": "cdb779666b3351ad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "0aa4925ad22de0bf",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "ae5b8c7460e5d4b0",
        "type": "mysql",
        "z": "cdb779666b3351ad",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "06dea3b2fad80dc4"
            ]
        ]
    },
    {
        "id": "e82004d01a286267",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "Create MySQL DB",
        "info": "",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "ba07e8efb609ab06",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "INSERT, DELETE entries in MySQL DB",
        "info": "",
        "x": 170,
        "y": 600,
        "wires": []
    },
    {
        "id": "ab436e477ed58510",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "SELECT * from testlist;",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * from testlist;",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "ae5b8c7460e5d4b0"
            ]
        ]
    },
    {
        "id": "06dea3b2fad80dc4",
        "type": "debug",
        "z": "cdb779666b3351ad",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 220,
        "wires": []
    },
    {
        "id": "a6bc6973c50ad307",
        "type": "mongodb out",
        "z": "cdb779666b3351ad",
        "mongodb": "b6462dea982cb7e1",
        "name": "Data",
        "collection": "pharma-data",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 800,
        "wires": []
    },
    {
        "id": "da599f08b7ce3b70",
        "type": "mongodb out",
        "z": "cdb779666b3351ad",
        "mongodb": "b6462dea982cb7e1",
        "name": "Commands",
        "collection": "pharma-commands",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 550,
        "y": 700,
        "wires": []
    },
    {
        "id": "78362be33b396823",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"timestamp\":\"2021-05-18T00:00:00.000Z\",\"metadata\":{\"sensorId\":\"HotCoil1\",\"type\":\"temperature\"},\"temp\":12}",
        "payloadType": "json",
        "x": 90,
        "y": 700,
        "wires": [
            [
                "597d4aca1b72cd1e"
            ]
        ]
    },
    {
        "id": "fb992463d7352bfb",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "f9076c1ea1690a7b"
            ]
        ]
    },
    {
        "id": "6e48b23d022586af",
        "type": "mongodb out",
        "z": "cdb779666b3351ad",
        "mongodb": "b6462dea982cb7e1",
        "name": "Test",
        "collection": "test",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 860,
        "wires": []
    },
    {
        "id": "f27e2a8396310cb0",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":{\"metadata\":{\"sensorId\":\"HotCoil1\",\"type\":\"temperature\"},\"timestamp\":\"2021-05-18T00:00:00.000Z\",\"temp\":12}}",
        "payloadType": "json",
        "x": 90,
        "y": 860,
        "wires": [
            [
                "6e48b23d022586af"
            ]
        ]
    },
    {
        "id": "f9076c1ea1690a7b",
        "type": "function",
        "z": "cdb779666b3351ad",
        "name": "TEST Data to MongoDB",
        "func": "const event = new Date('05 October 2011 14:48 UTC');\n\nmsg.payload = {\n    \n        \"metadata\": {\n            \"sensorId\": \"HotCoil1\",\n            \"type\": \"temperature\"\n\n        },\n    \"timestamp\": event,\n        \"temp\": 12\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 290,
        "y": 800,
        "wires": [
            [
                "a6bc6973c50ad307"
            ]
        ]
    },
    {
        "id": "597d4aca1b72cd1e",
        "type": "function",
        "z": "cdb779666b3351ad",
        "name": "TEST Command to MongoDB",
        "func": "const event = new Date('05 October 2011 14:48 UTC');\n\nmsg.payload = {\n    \n        \"metadata\": {\n            \"sensorId\": \"HotCoil1\",\n            \"type\": \"temperature\"\n\n        },\n    \"timestamp\": event,\n        \"temp\": 12\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 310,
        "y": 700,
        "wires": [
            [
                "da599f08b7ce3b70"
            ]
        ]
    },
    {
        "id": "067106b5dd72d1fa",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "Create MongoDB DB",
        "info": "",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "b652b88406fa4d20",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "Collections: Pharma.pharma-commands & Pharma.pharma-data",
        "info": "",
        "x": 250,
        "y": 560,
        "wires": []
    },
    {
        "id": "4fb3a117e35404de",
        "type": "comment",
        "z": "cdb779666b3351ad",
        "name": "Table: Pharma.testlist",
        "info": "",
        "x": 120,
        "y": 180,
        "wires": []
    },
    {
        "id": "07d4022642147326",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "DELETE from testlist where id >=0;",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DELETE from testlist where id >=0;",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "28c302da226bf0af"
            ]
        ]
    },
    {
        "id": "28c302da226bf0af",
        "type": "mysql",
        "z": "cdb779666b3351ad",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "d046268331e8f5c4"
            ]
        ]
    },
    {
        "id": "d046268331e8f5c4",
        "type": "debug",
        "z": "cdb779666b3351ad",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "b29f2d9ee441d426",
        "type": "debug",
        "z": "cdb779666b3351ad",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "46138be7b3eace18",
        "type": "mysql",
        "z": "cdb779666b3351ad",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "b29f2d9ee441d426"
            ]
        ]
    },
    {
        "id": "c4f12e30aa8d0ee6",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "DELETE from testruns where id >=0;",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DELETE from testruns where id >=0;",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "46138be7b3eace18"
            ]
        ]
    },
    {
        "id": "dcfe1a1f2c81a787",
        "type": "link in",
        "z": "cdb779666b3351ad",
        "name": "MongoDB Commands",
        "links": [
            "015365232b2d2503"
        ],
        "x": 425,
        "y": 660,
        "wires": [
            [
                "da599f08b7ce3b70"
            ]
        ]
    },
    {
        "id": "c8ee7a3892706b86",
        "type": "link in",
        "z": "cdb779666b3351ad",
        "name": "MongoDB Data",
        "links": [
            "44039dab1a2459e5"
        ],
        "x": 425,
        "y": 760,
        "wires": [
            [
                "a6bc6973c50ad307"
            ]
        ]
    },
    {
        "id": "a67ea1e7c113f275",
        "type": "inject",
        "z": "cdb779666b3351ad",
        "name": "SELECT * from testruns;",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * from testruns;",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "bf0ac9a2ab3cd733"
            ]
        ]
    },
    {
        "id": "bf0ac9a2ab3cd733",
        "type": "mysql",
        "z": "cdb779666b3351ad",
        "mydb": "0566a31df5b66cbe",
        "name": "Pharma (MySQL)",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "6115ca288ce6651c"
            ]
        ]
    },
    {
        "id": "6115ca288ce6651c",
        "type": "debug",
        "z": "cdb779666b3351ad",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 420,
        "wires": []
    },
    {
        "id": "d447ac6f25d9b985",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "How to setup devices / use Sub-FLows",
        "info": "",
        "x": 170,
        "y": 20,
        "wires": []
    },
    {
        "id": "fdfa6abb853d50b8",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "HotCoils / HotPlates",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "c4fe431145b99f74",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Use the Sub-Flows without the \"Flow\" at the end. The SubFlows with the \"Flow\" at the end is used for Manual operation",
        "info": "",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "474aee266006f9d9",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "2) These devices needs ONLY the following INPUTs",
        "info": "",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "0d5c78d6a19bbef5",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "a) Use a UI-Slider component to send the Temperature setting to the device",
        "info": "",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "ca464f814703c5de",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "b) Temp. > 0 (ON), Temp = 0 (OFF)",
        "info": "",
        "x": 280,
        "y": 220,
        "wires": []
    },
    {
        "id": "c2bb3dd2b197ee64",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "c) \"READ\"-command is only used for Manual Operations",
        "info": "",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "f1fe8ff93c9f60ed",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "ReactIR 702L",
        "info": "",
        "x": 110,
        "y": 360,
        "wires": []
    },
    {
        "id": "c06e772054520f64",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Use the Sub-Flows without the \"Flow\" at the end. The SubFlows with the \"Flow\" at the end is used for Manual operation",
        "info": "",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "a1fa75ef2885fff5",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "2) These devices needs ONLY the following INPUTs",
        "info": "",
        "x": 270,
        "y": 440,
        "wires": []
    },
    {
        "id": "af07a83b8a525b93",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "c) \"READ\"-command is only used for Manual Operations",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "0bdcd15d26c24a11",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "NB: OPC Node needs to be setup with the correct IP:port and OPC Server",
        "info": "",
        "x": 340,
        "y": 520,
        "wires": []
    },
    {
        "id": "903d39f25f1db5fc",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "NB: IP:port must be setup in the Settings TAB when the IP address is changed or added",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "1f3ca8ee8322b829",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "SF10 Vapourtec",
        "info": "",
        "x": 120,
        "y": 740,
        "wires": []
    },
    {
        "id": "e1e2967ee7b125c2",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Setup the USB/Serial port in the SF10 Vapourtec FLows",
        "info": "",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "21a941381f952c18",
        "type": "function",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 600,
        "wires": [
            [
                "75273f9ca8f1de5b"
            ]
        ]
    },
    {
        "id": "ece7cad68ac48380",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "3) Use the following 2 nodes to package data from ReactIR and to display (FLOW)",
        "info": "",
        "x": 360,
        "y": 560,
        "wires": []
    },
    {
        "id": "f88b3cf772942a4a",
        "type": "json",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c6d3e79b9f3e1417",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "4) Use the following 2 nodes to package data from ReactIR and to display (Automatic node Not the FLOW)",
        "info": "",
        "x": 440,
        "y": 640,
        "wires": []
    },
    {
        "id": "75273f9ca8f1de5b",
        "type": "ui_template",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "group": "f92bad53a3851b4d",
        "name": "ReactIR 702L 1 Data",
        "order": 1,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart3-instr\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.log('Position Test 1');\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position Test 2');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart3-instr\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "57f9f3a.e32620c",
        "type": "file in",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "filename": "/home/FluxiDominus_Pi_1/.node-red/.config.nodes.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "allProps": false,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "d1d4a711.9a25d8"
            ]
        ]
    },
    {
        "id": "d1d4a711.9a25d8",
        "type": "json",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "pretty": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "e1bdf411.316238",
                "bc4a48264cad15de"
            ]
        ]
    },
    {
        "id": "e1bdf411.316238",
        "type": "change",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$sort(\t   $$.(\t       $each(\t           $$,\t           function($v, $k) {\t        $k & \" : \" & $v.module\t    }\t       )\t)\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "1a0235f0.8c486a"
            ]
        ]
    },
    {
        "id": "1a0235f0.8c486a",
        "type": "debug",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "b6c696f6.b0bbe8",
        "type": "inject",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "57f9f3a.e32620c"
            ]
        ]
    },
    {
        "id": "bae74244.be8fa",
        "type": "comment",
        "z": "ac1e0817c5dd43f9",
        "name": "How Many Node modules in my configuration?",
        "info": "",
        "x": 240,
        "y": 60,
        "wires": []
    },
    {
        "id": "bc4a48264cad15de",
        "type": "debug",
        "z": "ac1e0817c5dd43f9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 490,
        "y": 260,
        "wires": []
    }
]