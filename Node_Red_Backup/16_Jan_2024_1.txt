[
    {
        "id": "8a0e73bbc365dbb1",
        "type": "tab",
        "label": "Instructions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10298351f754cc63",
        "type": "tab",
        "label": "Automatic",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "300c6ec10595d0c1",
        "type": "tab",
        "label": "Manual Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a6e09bd3.85fe48",
        "type": "tab",
        "label": "Settings and Servers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "133b6aba.dccfb5",
        "type": "tab",
        "label": "FumeHood",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e166d00e.d9731",
        "type": "tab",
        "label": "Optimise",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8b66c456.b56a28",
        "type": "tab",
        "label": "Record to Database",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a12afd1.57876",
        "type": "tab",
        "label": "WebCam",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2b02a849.3b5ab8",
        "type": "tab",
        "label": "Stepper motor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c76a3ed0.de6fd",
        "type": "subflow",
        "name": "FlowSynMaxi 1 OLD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 960,
                "wires": [
                    {
                        "id": "a1a9cecc.44b42"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2000,
                "y": 2600,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2640,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 1
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2680,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 2
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2720,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 3
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2760,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 4
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2800,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 5
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2840,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 6
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2880,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 7
                    }
                ]
            },
            {
                "x": 2000,
                "y": 2920,
                "wires": [
                    {
                        "id": "dde08ae6.0b2828",
                        "port": 8
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4220,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4260,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 1
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4300,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 2
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4340,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 3
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4380,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 4
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4420,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 5
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4460,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 6
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4500,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 7
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4540,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 8
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4580,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 9
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4620,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 10
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4660,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 11
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4700,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 12
                    }
                ]
            },
            {
                "x": 2000,
                "y": 4740,
                "wires": [
                    {
                        "id": "965abeac.5eab5",
                        "port": 13
                    }
                ]
            },
            {
                "x": 1980,
                "y": 4860,
                "wires": [
                    {
                        "id": "22474cd0.3e6cf4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2000,
                "y": 500,
                "wires": [
                    {
                        "id": "2b88afbb.a712d",
                        "port": 0
                    },
                    {
                        "id": "e9c36ff1.fc40f",
                        "port": 0
                    },
                    {
                        "id": "5d48886.d771f78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "98cb21df.da2ee",
        "type": "subflow",
        "name": "FlowUV 1",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2b034c7e.4bdce4",
        "type": "subflow",
        "name": "FlowUV 2",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3485362c.a922ca",
        "type": "subflow",
        "name": "BinaryPump 1",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "9cb49edd.a3e68",
        "type": "subflow",
        "name": "BinaryPump 2",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e399fc8fc0b218b9",
        "type": "subflow",
        "name": "SF10 Vapourtec 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 580,
                "wires": [
                    {
                        "id": "4cb1aa08cc0a8fe1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2040,
                "y": 960,
                "wires": [
                    {
                        "id": "22a278819ede7490",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 2060,
            "y": 580,
            "wires": [
                {
                    "id": "b9288a56f5dfd3c1",
                    "port": 0
                },
                {
                    "id": "22a6a89a16a5caae",
                    "port": 0
                },
                {
                    "id": "22a278819ede7490",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3bf455a61dc4725c",
        "type": "subflow",
        "name": "SF10 Vapourtec 1 Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 1040,
                "wires": [
                    {
                        "id": "3bba40e0c853a0c8"
                    },
                    {
                        "id": "79109ecf0d95c969"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3920,
                "y": 980,
                "wires": [
                    {
                        "id": "8a048c2c79db9bcb",
                        "port": 0
                    },
                    {
                        "id": "4a9d3536862f4853",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 3920,
            "y": 1160,
            "wires": [
                {
                    "id": "3bba40e0c853a0c8",
                    "port": 4
                },
                {
                    "id": "3bba40e0c853a0c8",
                    "port": "5"
                },
                {
                    "id": "12bf8fdd5e66b96d",
                    "port": 0
                },
                {
                    "id": "aaaaa4774f1eebff",
                    "port": 0
                },
                {
                    "id": "63a90c4df69d3f51",
                    "port": 0
                },
                {
                    "id": "6affa3e4b555e954",
                    "port": 0
                },
                {
                    "id": "f76c5818dd3166c7",
                    "port": 0
                },
                {
                    "id": "f04379813ac186e2",
                    "port": 0
                },
                {
                    "id": "3ff97091e52e54b2",
                    "port": 0
                },
                {
                    "id": "8a048c2c79db9bcb",
                    "port": 1
                },
                {
                    "id": "7ed7660147cfd110",
                    "port": 0
                },
                {
                    "id": "0b96b3f79cfa1f23",
                    "port": 0
                },
                {
                    "id": "cb609a078cb166f0",
                    "port": 0
                },
                {
                    "id": "cf82995da8ad5857",
                    "port": 0
                },
                {
                    "id": "8645f2d681216512",
                    "port": 0
                },
                {
                    "id": "4a9d3536862f4853",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "ef63b0d123a76daa",
        "type": "subflow",
        "name": "FlowSynMaxi 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 1120,
                "wires": [
                    {
                        "id": "5e4d284bebebb458"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1400,
                "y": 1280,
                "wires": [
                    {
                        "id": "4b9b31baaed0db78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bc1076baf3559e95",
        "type": "subflow",
        "name": "FlowSynMaxi Flow 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 580,
                "wires": [
                    {
                        "id": "a659a1dde18a78fd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3500,
                "y": 860,
                "wires": [
                    {
                        "id": "e9e1f331704c5162",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 3500,
            "y": 920,
            "wires": [
                {
                    "id": "9f86ab9d06e188da",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fadba47737eca3c5",
        "type": "subflow",
        "name": "ReactIR 702L 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "3d361ceb3f893235"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 140,
                "wires": [
                    {
                        "id": "3417a603ca42533b",
                        "port": 0
                    },
                    {
                        "id": "6098ac14dfb7e66f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fc608604922b7267",
        "type": "subflow",
        "name": "ReactIR 702L Flow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 160,
                "wires": [
                    {
                        "id": "eb3680040fb1bbbe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1740,
                "y": 180,
                "wires": [
                    {
                        "id": "abbc4709f6a7d7ab",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "17061720ba0331b7",
        "type": "subflow",
        "name": "HotChip2Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "135b8b59fd589dd6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 880,
                "wires": [
                    {
                        "id": "12964da3946ae83e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 560,
            "wires": [
                {
                    "id": "12964da3946ae83e",
                    "port": 1
                },
                {
                    "id": "fad63a8d2a608c79",
                    "port": 0
                },
                {
                    "id": "eb1555eb5bab060e",
                    "port": 0
                },
                {
                    "id": "810d184ebc13193a",
                    "port": 0
                },
                {
                    "id": "0ecb2499b1b9a3f2",
                    "port": 0
                },
                {
                    "id": "0f5f1de8686b591d",
                    "port": 0
                },
                {
                    "id": "4a58499a6d55a2f0",
                    "port": 0
                },
                {
                    "id": "a04733dcf3cbbee5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9dfeb25ce4f7592b",
        "type": "subflow",
        "name": "HotChip2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 340,
                "wires": [
                    {
                        "id": "abd8c202aa7d9ff5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "7eb1ea9d3b61c8f1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 320,
            "wires": [
                {
                    "id": "27cce9e4252346fe",
                    "port": 0
                },
                {
                    "id": "b91b2c1bbae07560",
                    "port": 0
                },
                {
                    "id": "7eb1ea9d3b61c8f1",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "39878a8b7ca6b377",
        "type": "subflow",
        "name": "HotChip1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 340,
                "wires": [
                    {
                        "id": "0ac0700d6f1a2850"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "732bc28c498bd671",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 320,
            "wires": [
                {
                    "id": "c10453785d7371ca",
                    "port": 0
                },
                {
                    "id": "f21fa7687ded114e",
                    "port": 0
                },
                {
                    "id": "732bc28c498bd671",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "dcba5a408b90db4f",
        "type": "subflow",
        "name": "HotChip1Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "b99f99462611d243"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 880,
                "wires": [
                    {
                        "id": "735f2b7821eee391",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 560,
            "wires": [
                {
                    "id": "735f2b7821eee391",
                    "port": 1
                },
                {
                    "id": "d6d3f5c2c913d8e0",
                    "port": 0
                },
                {
                    "id": "cb7b6df64ec26f35",
                    "port": 0
                },
                {
                    "id": "28c74b19d1cc23ea",
                    "port": 0
                },
                {
                    "id": "25d807fa95278cd7",
                    "port": 0
                },
                {
                    "id": "68cb939c1b4eb9b8",
                    "port": 0
                },
                {
                    "id": "01463e1ac22832a6",
                    "port": 0
                },
                {
                    "id": "f46fc9a59a8e79f9",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "755f6eaaa7c0cddd",
        "type": "subflow",
        "name": "HotCoil1Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "c13ee86cd1f9e261"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 880,
                "wires": [
                    {
                        "id": "0a0c60410998a429",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 560,
            "wires": [
                {
                    "id": "0a0c60410998a429",
                    "port": 1
                },
                {
                    "id": "bb633f3ddf4dc1cb",
                    "port": 0
                },
                {
                    "id": "915b61cf052f5f0c",
                    "port": 0
                },
                {
                    "id": "8641490c595e2416",
                    "port": 0
                },
                {
                    "id": "6b7add81527aaaf2",
                    "port": 0
                },
                {
                    "id": "87a61b92dad7344c",
                    "port": 0
                },
                {
                    "id": "0376014355675892",
                    "port": 0
                },
                {
                    "id": "23d1c010e87796cc",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9ff174e82057e50f",
        "type": "subflow",
        "name": "HotCoil1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 340,
                "wires": [
                    {
                        "id": "03134e6cba211cfc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "7a66fc3787892aa4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 320,
            "wires": [
                {
                    "id": "a3c9f5a4d619fb99",
                    "port": 0
                },
                {
                    "id": "ef31a38bfa5d7fe6",
                    "port": 0
                },
                {
                    "id": "7a66fc3787892aa4",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "e5d36bc87bf46f25",
        "type": "subflow",
        "name": "HotCoil2Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 580,
                "wires": [
                    {
                        "id": "255fca3e1a8a0462"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 880,
                "wires": [
                    {
                        "id": "0550af75819c144d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 560,
            "wires": [
                {
                    "id": "0550af75819c144d",
                    "port": 1
                },
                {
                    "id": "78a9f0e787a8d2ee",
                    "port": 0
                },
                {
                    "id": "78b0bd72bd5902e0",
                    "port": 0
                },
                {
                    "id": "61b7a2336faa6eab",
                    "port": 0
                },
                {
                    "id": "93eda2f48aaadb18",
                    "port": 0
                },
                {
                    "id": "726651f72bf66f9c",
                    "port": 0
                },
                {
                    "id": "6019df0046c78f58",
                    "port": 0
                },
                {
                    "id": "c1f0472fae27bfb4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "100af8884419f9cb",
        "type": "subflow",
        "name": "HotCoil2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 340,
                "wires": [
                    {
                        "id": "590abe5d6566ccc0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 500,
                "wires": [
                    {
                        "id": "f75079bc0eff60ac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1360,
            "y": 320,
            "wires": [
                {
                    "id": "478273ed9e778df8",
                    "port": 0
                },
                {
                    "id": "2a2785decd8f7504",
                    "port": 0
                },
                {
                    "id": "f75079bc0eff60ac",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "c183487.23389b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Pharma Tech Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b0db63ab.f1acb",
        "type": "ui_tab",
        "name": "Manual: Flow Syn Maxi 2",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e54e6c82.3d9b5",
        "type": "ui_tab",
        "name": "Manual Control",
        "icon": "fa-thermometer-full",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1853ba21.f1b306",
        "type": "ui_group",
        "name": "HotChip 1",
        "tab": "e54e6c82.3d9b5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b861fb62.1b9f38",
        "type": "ui_group",
        "name": "HotChip 2",
        "tab": "e54e6c82.3d9b5",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e35d02d7.f6aeb",
        "type": "ui_tab",
        "name": "Fumehood",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f9c5ce26.52f18",
        "type": "ui_group",
        "name": "Set Flow Rates",
        "tab": "b0db63ab.f1acb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e5633a14.a5ee38",
        "type": "ui_group",
        "name": "Set Valves",
        "tab": "b0db63ab.f1acb",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "8af4ac7b.4b64f",
        "type": "ui_group",
        "name": "Set Heater",
        "tab": "b0db63ab.f1acb",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "7327ab4f.36a614",
        "type": "ui_group",
        "name": "Status: Temp. & Press.",
        "tab": "b0db63ab.f1acb",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f82abfd2.c973f",
        "type": "ui_group",
        "name": "Status: Valves & Flows",
        "tab": "b0db63ab.f1acb",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "71d00e5a.8ef35",
        "type": "ui_group",
        "name": "Flow Syn Maxi 1: Pressures",
        "tab": "e35d02d7.f6aeb",
        "order": 6,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "70286f66.82076",
        "type": "ui_group",
        "name": "Flow Syn Maxi 1: Temperatures",
        "tab": "e35d02d7.f6aeb",
        "order": 7,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "f1c3b519.0843c8",
        "type": "ui_group",
        "name": "Flow Syn Maxi 1: Flows",
        "tab": "e35d02d7.f6aeb",
        "order": 8,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "fa3022cd.849c4",
        "type": "ui_group",
        "name": "Flow Syn Maxi 1: Status Valves",
        "tab": "e35d02d7.f6aeb",
        "order": 9,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "94135017.0a601",
        "type": "ui_group",
        "name": "Flow Syn Maxi 1: Chiller",
        "tab": "e35d02d7.f6aeb",
        "order": 10,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "89d9c446.b796e8",
        "type": "ui_group",
        "name": "Fumehood Record",
        "tab": "b0db63ab.f1acb",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "5abf5184.1ba7f",
        "type": "ui_group",
        "name": "Set Temperatures",
        "tab": "b0db63ab.f1acb",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "fcc4e2e3.07d67",
        "type": "ui_group",
        "name": "Alert",
        "tab": "b0db63ab.f1acb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "1d1505a8.e805ba",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "pharma",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "c025c73d.909a28",
        "type": "mqtt-broker",
        "name": "CSIR MQTT Broker",
        "broker": "146.64.72.70",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d12e8d36.668e2",
        "type": "ui_tab",
        "name": "Stepper Motor Control",
        "icon": " fa-file-code-o",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a0064b8b.befcb8",
        "type": "ui_group",
        "name": "Cam1",
        "tab": "2280a944.649bf6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "867cdf55.8bea9",
        "type": "ui_group",
        "name": "Output",
        "tab": "d12e8d36.668e2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "2280a944.649bf6",
        "type": "ui_tab",
        "name": "WebCam",
        "icon": "camera_alt",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d86e3ba5.2791c8",
        "type": "ui_group",
        "name": "Continue?",
        "tab": "b0db63ab.f1acb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "36a0308a.81664",
        "type": "ui_tab",
        "name": "Optimisation",
        "icon": "fa-search",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2d861bd4.e40a94",
        "type": "ui_group",
        "name": "Optimisation options",
        "tab": "36a0308a.81664",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f236e451.b2a578",
        "type": "ui_group",
        "name": "Python output",
        "tab": "36a0308a.81664",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "1dc9b881.43b697",
        "type": "ui_group",
        "name": "Results",
        "tab": "36a0308a.81664",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2e16cb22.999174",
        "type": "ui_group",
        "name": "Chart",
        "tab": "567d8fae.98148",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "6aa20356.9b59bc",
        "type": "ui_group",
        "name": "examples",
        "tab": "d5ad8b85.f5ba18",
        "order": 1,
        "disp": true,
        "width": 16,
        "collapse": false
    },
    {
        "id": "567d8fae.98148",
        "type": "ui_tab",
        "name": "Realtime Power",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d5ad8b85.f5ba18",
        "type": "ui_tab",
        "name": "Plotly",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "11426682.103bb9",
        "type": "telegram bot",
        "botname": "@CSIRPharmaTech_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "4f3df190.15939",
        "type": "ifttt-key"
    },
    {
        "id": "1fcf921f.da5dae",
        "type": "ui_group",
        "name": "Settings",
        "tab": "b0db63ab.f1acb",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "3ff012d4d8efe892",
        "type": "OpcUa-Endpoint2",
        "name": "",
        "endpoint": "opc.tcp://192.168.1.50:62552/iCOpcUaServer",
        "securityMode": "None",
        "securityPolicy": "None",
        "userIdentityType": "Anonymous",
        "userName": "",
        "password": "",
        "userCertificate": "",
        "userPrivatekey": "",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "useTransport": true,
        "maxChunkCount": "1",
        "maxMessageSize": "8192",
        "receiveBufferSize": "8192",
        "sendBufferSize": "8192",
        "subscriptions": [
            {
                "id": "s0",
                "name": "Default Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "1000",
                    "requestedMaxKeepAliveCount": "10",
                    "requestedPublishingInterval": "1000",
                    "maxNotificationsPerPublish": "0",
                    "priority": "100"
                }
            },
            {
                "id": "s1",
                "name": "Slow Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "100",
                    "requestedMaxKeepAliveCount": "20",
                    "requestedPublishingInterval": "5000",
                    "maxNotificationsPerPublish": "100",
                    "priority": "10"
                }
            },
            {
                "id": "s2",
                "name": "Fast Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "4000",
                    "requestedMaxKeepAliveCount": "100",
                    "requestedPublishingInterval": "250",
                    "maxNotificationsPerPublish": "100",
                    "priority": "200"
                }
            }
        ]
    },
    {
        "id": "1f3aa579c5b4973b",
        "type": "ui_group",
        "name": "HotCoil 1",
        "tab": "e54e6c82.3d9b5",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99486f5374ae4c69",
        "type": "ui_group",
        "name": "HotCoil 2",
        "tab": "e54e6c82.3d9b5",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "46e907f65e3dce84",
        "type": "ui_tab",
        "name": "Automation",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "56c7a41708ec20f4",
        "type": "ui_group",
        "name": "HotChip1",
        "tab": "46e907f65e3dce84",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "96632e11e1c04c24",
        "type": "ui_group",
        "name": "HotChip2",
        "tab": "46e907f65e3dce84",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "08f2e0d237277a3e",
        "type": "ui_group",
        "name": "HotCoil1",
        "tab": "46e907f65e3dce84",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "131978166ea601ba",
        "type": "ui_group",
        "name": "HotCoil2",
        "tab": "46e907f65e3dce84",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d99fa63256862037",
        "type": "ui_group",
        "name": "ReactIR 702L",
        "tab": "46e907f65e3dce84",
        "order": 5,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f92bad53a3851b4d",
        "type": "ui_group",
        "name": "ReactIR 702L 1",
        "tab": "e54e6c82.3d9b5",
        "order": 5,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3aec7fe7cbf92af0",
        "type": "ui_group",
        "name": "SF10 Vapourtec 1",
        "tab": "e54e6c82.3d9b5",
        "order": 6,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a84e115482e1d03d",
        "type": "ui_group",
        "name": "SF10 Vapourtec 1",
        "tab": "46e907f65e3dce84",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d74cc80985dec42",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\r",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "10000"
    },
    {
        "id": "59c575dbf5467d2a",
        "type": "ui_group",
        "name": "FlowSynMaxi2",
        "tab": "e54e6c82.3d9b5",
        "order": 7,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "947decbba47e6fc1",
        "type": "ui_group",
        "name": "FlowSynMaxi2",
        "tab": "46e907f65e3dce84",
        "order": 7,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2aa124154997b17a",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "f92bad53a3851b4d",
        "order": 3,
        "width": 19,
        "height": 1
    },
    {
        "id": "ccc2a10b1a915eb5",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "3aec7fe7cbf92af0",
        "order": 17,
        "width": 12,
        "height": 1
    },
    {
        "id": "90b5f0e04ebd2be8",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "3aec7fe7cbf92af0",
        "order": 19,
        "width": 12,
        "height": 1
    },
    {
        "id": "e507fe7713bacbb4",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "2f4c5308d088c651",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "a84005530f2cefe4",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "c5ebc19f39a8ba18",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "56c7a41708ec20f4",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "9997d710b0456a47",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "dac3f7d9a523055c",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "762a01bd23fadb49",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "c587837ad4e4b03e",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "96632e11e1c04c24",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "0fec31f20d9be674",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "95295a1f4462b795",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "fd563755a3109eec",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "5350f9d6dec1a054",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "08f2e0d237277a3e",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "62a315a476765ae2",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "f5c405c588e2f4fe",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "2515645b685d869b",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "7291742f068f2672",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "131978166ea601ba",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "0ec0411f553e13c5",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "0a972d455e64e3a3",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "1169cb20fad43ac1",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "18ae159cf7610ed6",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "38cf1e6548440550",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "7a00dde58542e4d6",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "5325d375958e8e3f",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "098d7595354255b1",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d350fafa1d5076b4",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "36f6a2060dd1f175",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "e5bd3da3d07bfa50",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "bd3a3314a7729fc1",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "a84e115482e1d03d",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "439cb11084239b7c",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 18,
        "width": 20,
        "height": 1
    },
    {
        "id": "567ca5fade6697bb",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 19,
        "width": 20,
        "height": 1
    },
    {
        "id": "32b8e6ddd970893d",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 20,
        "width": 20,
        "height": 1
    },
    {
        "id": "dd3472069d8f2f14",
        "type": "ui_spacer",
        "z": "10298351f754cc63",
        "name": "spacer",
        "group": "947decbba47e6fc1",
        "order": 21,
        "width": 20,
        "height": 1
    },
    {
        "id": "ac11df20.5dcab",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dcbadb5.27e7828",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "PumpAFlowRate",
        "label": "Flow Syn Pump A Flow Rate (mL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "50",
        "step": "0.05",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "b87fefd9.33a57"
            ]
        ]
    },
    {
        "id": "906a9506.89fdf8",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "PumpBFlowRate",
        "label": "Flow Syn Pump B Flow Rate (uL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "50",
        "step": "0.05",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "614b2ede.3123a"
            ]
        ]
    },
    {
        "id": "e5fb74c7.ea7bd8",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "BinaryPumpCFlowRate",
        "label": "Binary Pump C Flow Rate (uL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "50",
        "step": "0.05",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "f26d1606.4979b8"
            ]
        ]
    },
    {
        "id": "b1264223.fc59c",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "BinaryPumpDFlowRate",
        "label": "Flow Binary Pump D Flow Rate (uL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "50",
        "step": "0.05",
        "x": 790,
        "y": 400,
        "wires": [
            [
                "44a85cf.1531ca4"
            ]
        ]
    },
    {
        "id": "365c3fb.b24f7c",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 0 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setFlowRatePumpA",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 100,
        "wires": [
            [
                "9289ae3.e77f95"
            ]
        ]
    },
    {
        "id": "544d66c3.588ed8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 1 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setFlowRatePumpB",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 220,
        "wires": [
            [
                "cf61c5d5.9d0b68"
            ]
        ]
    },
    {
        "id": "4a684bc8.f0ca74",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 2 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setFlowRatePumpC",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 340,
        "wires": [
            [
                "d98b2030.2e4a4"
            ]
        ]
    },
    {
        "id": "6a0879df.6c8988",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 3 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setFlowRatePumpD",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 460,
        "wires": [
            [
                "81c47d42.d263b"
            ]
        ]
    },
    {
        "id": "71cacf4.82c3e3",
        "type": "tcp request",
        "z": "c76a3ed0.de6fd",
        "name": "toFlowSynMaxiTCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "x": 2610,
        "y": 1360,
        "wires": [
            [
                "61a5d278.80ae2c"
            ]
        ]
    },
    {
        "id": "cd3fa260.6acf3",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor1Temp",
        "label": "Reactor 1 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "90",
        "step": "0.1",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "363fb278.e1db4e"
            ]
        ]
    },
    {
        "id": "34c4b8f4.b8e318",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor2Temp",
        "label": "Reactor 2 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "90",
        "step": "0.1",
        "x": 780,
        "y": 640,
        "wires": [
            [
                "2fbcacee.1efa04"
            ]
        ]
    },
    {
        "id": "504f7051.a30cd",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor3Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "90",
        "step": "0.1",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "6da86f32.73c52"
            ]
        ]
    },
    {
        "id": "86268d97.f69d",
        "type": "ui_slider",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor4Temp",
        "label": "Reactor 4 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": 0,
        "max": "90",
        "step": "0.1",
        "x": 780,
        "y": 800,
        "wires": [
            [
                "14bd6f8c.fb188"
            ]
        ]
    },
    {
        "id": "61dcb3a1.46463c",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynValveA",
        "label": "FlowSyn Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 780,
        "y": 860,
        "wires": [
            [
                "4a8cfa52.d88ec4"
            ]
        ]
    },
    {
        "id": "4060740c.8ae30c",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynValveB",
        "label": "FlowSyn Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 780,
        "y": 960,
        "wires": [
            [
                "566cb5b8.a218fc"
            ]
        ]
    },
    {
        "id": "cfd79700.760ea8",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowBinaryValveC",
        "label": "FlowBinary Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 790,
        "y": 1060,
        "wires": [
            [
                "87c88fc4.8ab81"
            ]
        ]
    },
    {
        "id": "eb91bff.4c1434",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowBinaryValveD",
        "label": "FlowBinary Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "e71764c4.e34928"
            ]
        ]
    },
    {
        "id": "4e054f14.e09bc",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 860,
        "wires": [
            [
                "26d2f654.65d04a"
            ]
        ]
    },
    {
        "id": "4a8cfa52.d88ec4",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckFlowSynValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "4e054f14.e09bc"
            ],
            [
                "9487cda1.8ed51"
            ]
        ]
    },
    {
        "id": "9487cda1.8ed51",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 900,
        "wires": [
            [
                "5e5fa2fb.d1da0c"
            ]
        ]
    },
    {
        "id": "2743046b.0a538c",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 960,
        "wires": [
            [
                "9e9e8632.ba3ee8"
            ]
        ]
    },
    {
        "id": "566cb5b8.a218fc",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckFlowSynValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "2743046b.0a538c"
            ],
            [
                "663b9443.b91f8c"
            ]
        ]
    },
    {
        "id": "663b9443.b91f8c",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1000,
        "wires": [
            [
                "f9e18a1d.634e18"
            ]
        ]
    },
    {
        "id": "ad23a4a7.d0d868",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenC",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1060,
        "wires": [
            [
                "d599c7d8.b5df78"
            ]
        ]
    },
    {
        "id": "87c88fc4.8ab81",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckBinaryValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "ad23a4a7.d0d868"
            ],
            [
                "abf8cf3f.3e1f1"
            ]
        ]
    },
    {
        "id": "abf8cf3f.3e1f1",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenC",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1100,
        "wires": [
            [
                "f2c60c5d.dd37d"
            ]
        ]
    },
    {
        "id": "567f8735.217878",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1160,
        "wires": [
            [
                "87dc0d4a.e76f3"
            ]
        ]
    },
    {
        "id": "e71764c4.e34928",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckBinaryValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1160,
        "wires": [
            [
                "567f8735.217878"
            ],
            [
                "e7e45b0d.e6a208"
            ]
        ]
    },
    {
        "id": "e7e45b0d.e6a208",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1200,
        "wires": [
            [
                "9bc72b97.a0dfe8"
            ]
        ]
    },
    {
        "id": "46268eb4.ff9be",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowCWValve",
        "label": "FlowCW Valve (ON = Collect)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 780,
        "y": 1260,
        "wires": [
            [
                "245e3300.8114de"
            ]
        ]
    },
    {
        "id": "978f7dfd.69aca",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 8",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenCW",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1260,
        "wires": [
            [
                "d54092ba.03fad"
            ]
        ]
    },
    {
        "id": "245e3300.8114de",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckCWValveSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 1260,
        "wires": [
            [
                "978f7dfd.69aca"
            ],
            [
                "8a67cf34.52462"
            ]
        ]
    },
    {
        "id": "8a67cf34.52462",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 9 \\r\\n",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setValveOpenCW",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1300,
        "wires": [
            [
                "b62d5b62.082308"
            ]
        ]
    },
    {
        "id": "56f5bdaa.25a114",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynInjValveA",
        "label": "FlowSyn Inj Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 790,
        "y": 1360,
        "wires": [
            [
                "57f0d5dc.9d08ec"
            ]
        ]
    },
    {
        "id": "644c2f7c.5f06e",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynInjValveB",
        "label": "FlowSyn Inj Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 790,
        "y": 1460,
        "wires": [
            [
                "b15824a2.e7ec88"
            ]
        ]
    },
    {
        "id": "5fdc74fb.7ee9ac",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowBinaryInjValveC",
        "label": "FlowBinary Inj Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 800,
        "y": 1560,
        "wires": [
            [
                "aaecd06c.e5de"
            ]
        ]
    },
    {
        "id": "b924f9f6.6ca1d8",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "FlowBinaryInjValveD",
        "label": "FlowBinary Inj Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "e5633a14.a5ee38",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 800,
        "y": 1660,
        "wires": [
            [
                "765fab99.8a4ac4"
            ]
        ]
    },
    {
        "id": "d8b640a7.acfc5",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1360,
        "wires": [
            [
                "e4095d5e.207d1"
            ]
        ]
    },
    {
        "id": "57f0d5dc.9d08ec",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckFlowSynInjValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 1360,
        "wires": [
            [
                "d8b640a7.acfc5"
            ],
            [
                "d0f9a4b6.d797a8"
            ]
        ]
    },
    {
        "id": "d0f9a4b6.d797a8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1400,
        "wires": [
            [
                "8145f66c.e23358"
            ]
        ]
    },
    {
        "id": "25f9ee11.239212",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1460,
        "wires": [
            [
                "e98286b9.d89978"
            ]
        ]
    },
    {
        "id": "b15824a2.e7ec88",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckFlowSynInjValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 1460,
        "wires": [
            [
                "25f9ee11.239212"
            ],
            [
                "72fc1058.e0907"
            ]
        ]
    },
    {
        "id": "72fc1058.e0907",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1500,
        "wires": [
            [
                "9ab0d00d.590fa"
            ]
        ]
    },
    {
        "id": "71937b68.e6d524",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenC",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1560,
        "wires": [
            [
                "b7a4316b.f1d8b"
            ]
        ]
    },
    {
        "id": "aaecd06c.e5de",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckBinaryInjValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1560,
        "wires": [
            [
                "71937b68.e6d524"
            ],
            [
                "eec07e91.2c61a"
            ]
        ]
    },
    {
        "id": "eec07e91.2c61a",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenC",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1600,
        "wires": [
            [
                "13105b87.eecbe4"
            ]
        ]
    },
    {
        "id": "d2f3f19.cb89b1",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1660,
        "wires": [
            [
                "d4b10281.7e335"
            ]
        ]
    },
    {
        "id": "765fab99.8a4ac4",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckBinaryInjValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1660,
        "wires": [
            [
                "d2f3f19.cb89b1"
            ],
            [
                "b31c958b.6a7b88"
            ]
        ]
    },
    {
        "id": "b31c958b.6a7b88",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setInjValveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1700,
        "wires": [
            [
                "76e3c4fd.ef193c"
            ]
        ]
    },
    {
        "id": "507651a2.63abb",
        "type": "ui_switch",
        "z": "c76a3ed0.de6fd",
        "name": "Heater",
        "label": "Heater",
        "tooltip": "",
        "group": "8af4ac7b.4b64f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 750,
        "y": 1760,
        "wires": [
            [
                "8f688ec9.74576"
            ]
        ]
    },
    {
        "id": "8dcf75a5.751dd8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setHeaterON",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1760,
        "wires": [
            [
                "e8b47506.c1cb18"
            ]
        ]
    },
    {
        "id": "8f688ec9.74576",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "CheckHeaterSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1760,
        "wires": [
            [
                "8dcf75a5.751dd8"
            ],
            [
                "4b81fc9b.91fcf4"
            ]
        ]
    },
    {
        "id": "4b81fc9b.91fcf4",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.setHeaterON",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1800,
        "wires": [
            [
                "761ced5e.1f1fd4"
            ]
        ]
    },
    {
        "id": "259b8d4d.9a87b2",
        "type": "tcp request",
        "z": "c76a3ed0.de6fd",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "splitc": "\\n",
        "x": 1080,
        "y": 1960,
        "wires": [
            [
                "c129844c.3caa28",
                "d166bd1a.4c6e8"
            ]
        ]
    },
    {
        "id": "da56ca12.e55c38",
        "type": "inject",
        "z": "c76a3ed0.de6fd",
        "name": "TriggerReadingsTempPress",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 0",
        "payloadType": "str",
        "x": 820,
        "y": 1880,
        "wires": [
            [
                "57e45c2e.eebbb4"
            ]
        ]
    },
    {
        "id": "c129844c.3caa28",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 2120,
        "wires": [
            [
                "dde08ae6.0b2828"
            ]
        ]
    },
    {
        "id": "5af918ac.9e4f38",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynMaxi1SystemPressure",
        "group": "7327ab4f.36a614",
        "order": 3,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 2110,
        "y": 1840,
        "wires": []
    },
    {
        "id": "acf79c34.5a5a9",
        "type": "tcp request",
        "z": "c76a3ed0.de6fd",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "x": 1080,
        "y": 3200,
        "wires": [
            [
                "939a8735.707ab8"
            ]
        ]
    },
    {
        "id": "31f60f08.b265",
        "type": "inject",
        "z": "c76a3ed0.de6fd",
        "name": "TriggerReadingsValvesRatesChillers",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 1",
        "payloadType": "str",
        "x": 850,
        "y": 2980,
        "wires": [
            [
                "654ad037.d4406"
            ]
        ]
    },
    {
        "id": "939a8735.707ab8",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 3200,
        "wires": [
            [
                "965abeac.5eab5"
            ]
        ]
    },
    {
        "id": "dde08ae6.0b2828",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ExtractTempPressure",
        "func": "// < P Pa Pb Pc Pd T1 T2 T3 T4 >\nvar r = ' ';\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar systemPressure = output[1];\nvar flowSynAPressure = output[2];\nvar flowSynBPressure = output[3];\nvar flowBianryCPressure = output[4];\nvar flowBinaryDPressure = output[5];\nvar reactor1Temperature = output[6];\nvar reactor2Temperature = output[7];\nvar reactor3Temperature = output[8];\nvar reactor4Temperature = output[9];\n\nvar msg1 = {payload: systemPressure, topic: \"System Pressure\"};\nvar msg2 = {payload: flowSynAPressure, topic: \"Syn Flow A Pressure\"};\nvar msg3 = {payload: flowSynBPressure, topic: \"Syn Flow B Pressure\"};\nvar msg4 = {payload: flowBianryCPressure, topic: \"Binary C Pressure\"};\nvar msg5 = {payload: flowBinaryDPressure, topic: \"Binary D Pressure\"};\nvar msg6 = {payload: reactor1Temperature, topic: \"Reactor 1 Temperature\"};\nvar msg7 = {payload: reactor2Temperature, topic: \"Reactor 2 Temperature\"};\nvar msg8 = {payload: reactor3Temperature, topic: \"Reactor 3 Temperature\"};\nvar msg9 = {payload: reactor4Temperature, topic: \"Reactor 4 Temperature\"};\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9]];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1960,
        "wires": [
            [
                "5af918ac.9e4f38",
                "5d6e0671.8981a8",
                "7887db16.e81654",
                "79be0a43.9cbf04"
            ],
            [
                "23b0c25e.f88ebe",
                "f55f4735.e7d538",
                "79be0a43.9cbf04"
            ],
            [
                "b3a72aac.9e2da8",
                "ebfff293.be6b4",
                "79be0a43.9cbf04"
            ],
            [
                "a1b683a6.fe5b2",
                "92d0fe7a.1cbfd",
                "79be0a43.9cbf04"
            ],
            [
                "6705c355.0fbddc",
                "aca98034.91959",
                "79be0a43.9cbf04"
            ],
            [
                "166ebe68.90f292",
                "91c628b3.3660c8",
                "67015a10.d1e934"
            ],
            [
                "a75a95d4.0a7008",
                "ebb454e2.25a358",
                "67015a10.d1e934"
            ],
            [
                "3b48c404.8484ec",
                "e05d3574.0fea78",
                "67015a10.d1e934"
            ],
            [
                "9d8d50e4.ccbf9",
                "7aaedd0a.103804",
                "67015a10.d1e934"
            ]
        ]
    },
    {
        "id": "b87fefd9.33a57",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "365c3fb.b24f7c"
            ]
        ]
    },
    {
        "id": "9289ae3.e77f95",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 100,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "cf61c5d5.9d0b68",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 220,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "d98b2030.2e4a4",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 340,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "81c47d42.d263b",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 460,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "26d2f654.65d04a",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 860,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "5e5fa2fb.d1da0c",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 900,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "9e9e8632.ba3ee8",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 960,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "f9e18a1d.634e18",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1000,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "d599c7d8.b5df78",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1060,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "f2c60c5d.dd37d",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1100,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "87dc0d4a.e76f3",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1160,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "9bc72b97.a0dfe8",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1200,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "d54092ba.03fad",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 1260,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "b62d5b62.082308",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1300,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "e4095d5e.207d1",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1360,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "8145f66c.e23358",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1400,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "e98286b9.d89978",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1460,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "9ab0d00d.590fa",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1500,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "b7a4316b.f1d8b",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1560,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "13105b87.eecbe4",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1600,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "d4b10281.7e335",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1660,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "76e3c4fd.ef193c",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1700,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "e8b47506.c1cb18",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 1760,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "761ced5e.1f1fd4",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 1800,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "57e45c2e.eebbb4",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "3295a0e5.2302b"
            ]
        ]
    },
    {
        "id": "654ad037.d4406",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 3060,
        "wires": [
            [
                "cfef6756.459bf8"
            ]
        ]
    },
    {
        "id": "614b2ede.3123a",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "544d66c3.588ed8"
            ]
        ]
    },
    {
        "id": "f26d1606.4979b8",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "4a684bc8.f0ca74"
            ]
        ]
    },
    {
        "id": "44a85cf.1531ca4",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 460,
        "wires": [
            [
                "6a0879df.6c8988"
            ]
        ]
    },
    {
        "id": "bd767c2e.6d111",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi1.port",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "cmdToSend",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2350,
        "y": 1360,
        "wires": [
            [
                "71cacf4.82c3e3"
            ]
        ]
    },
    {
        "id": "3295a0e5.2302b",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1880,
        "wires": [
            [
                "259b8d4d.9a87b2"
            ]
        ]
    },
    {
        "id": "cfef6756.459bf8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 3060,
        "wires": [
            [
                "acf79c34.5a5a9"
            ]
        ]
    },
    {
        "id": "23b0c25e.f88ebe",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynMaxi1FlowSynAPressure",
        "group": "7327ab4f.36a614",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 2120,
        "y": 1920,
        "wires": []
    },
    {
        "id": "5d6e0671.8981a8",
        "type": "ui_chart",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "System Pressure",
        "group": "7327ab4f.36a614",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "System Pressure",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "45",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 2070,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "5262b0a2.036",
        "type": "ui_chart",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "All Pressures",
        "group": "7327ab4f.36a614",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Syn Flow & Binary Pump Pressures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "45",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 2210,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b3a72aac.9e2da8",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "FlowSynMaxi1FlowSynBPressure",
        "group": "7327ab4f.36a614",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 2120,
        "y": 2000,
        "wires": []
    },
    {
        "id": "a1b683a6.fe5b2",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryCPressure",
        "group": "7327ab4f.36a614",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 2130,
        "y": 2080,
        "wires": []
    },
    {
        "id": "6705c355.0fbddc",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryDPressure",
        "group": "7327ab4f.36a614",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 2130,
        "y": 2160,
        "wires": []
    },
    {
        "id": "7887db16.e81654",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureSystem",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1880,
        "wires": [
            [
                "54a13d8f.ddbf54"
            ]
        ]
    },
    {
        "id": "f55f4735.e7d538",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureFlowSynA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "ebfff293.be6b4",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureFlowSynB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "92d0fe7a.1cbfd",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureBinaryC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "aca98034.91959",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureBinaryD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "965abeac.5eab5",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ExtractValvesFlows",
        "func": "// * Vs Vi F1 F2 F3 F4 C *\nvar r = ' ';\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar Vs = output[1];\nvar Vi = output[2];\nvar F1 = output[3];\nvar F2 = output[4];\nvar F3 = output[5];\nvar F4 = output[6];\nvar C  = output[7];\n\nvar msg1 = {};\nif ((Vs & 0x01) == 0x01) {\n    msg1 = {payload: true}    \n} else {\n    msg1 = {payload: false} \n}\nvar msg2 = {};\nif ((Vs & 0x02) == 0x02) {\n    msg2 = {payload: true}    \n} else {\n    msg2 = {payload: false} \n}\nvar msg3 = {};\nif ((Vs & 0x04) == 0x04) {\n    msg3 = {payload: true}    \n} else {\n    msg3 = {payload: false} \n}\nvar msg4 = {};\nif ((Vs & 0x08) == 0x08) {\n    msg4 = {payload: true}    \n} else {\n    msg4 = {payload: false} \n}\nvar msg5 = {};\nif ((Vs & 0x10) == 0x10) {\n    msg5 = {payload: true}    \n} else {\n    msg5 = {payload: false} \n}\nvar msg6 = {};\nif ((Vi & 0x01) == 0x01) {\n    msg6 = {payload: true}    \n} else {\n    msg6 = {payload: false} \n}\nvar msg7 = {};\nif ((Vi & 0x02) == 0x02) {\n    msg7 = {payload: true}    \n} else {\n    msg7 = {payload: false} \n}\nvar msg8 = {};\nif ((Vi & 0x04) == 0x04) {\n    msg8 = {payload: true}    \n} else {\n    msg8 = {payload: false} \n}\nvar msg9 = {};\nif ((Vi & 0x08) == 0x08) {\n    msg9 = {payload: true}    \n} else {\n    msg9 = {payload: false} \n}\nvar msg10 = {payload: F1, topic: \"Pump A Flow Rate\"};\nvar msg11 = {payload: F2, topic: \"Pump B Flow Rate\"};\nvar msg12 = {payload: F3, topic: \"Pump C Flow Rate\"};\nvar msg13 = {payload: F4, topic: \"Pump D Flow Rate\"};\nvar msg14 = {};\nif (C == '1') {\n    msg14 = {payload: true}    \n} else {\n    msg14 = {payload: false} \n}\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9], [msg10],\n       [msg11], [msg12], [msg13], [msg14]];",
        "outputs": 14,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 3200,
        "wires": [
            [
                "da693b51.48d008",
                "51ece76.6d05518",
                "c7fed41a.b4a1b8"
            ],
            [
                "c95c1f7f.87787",
                "2f4663e6.06ed7c",
                "cd8ff911.9e19c8"
            ],
            [
                "93b50a4e.e42838",
                "e9f1243e.889958",
                "fc8891e1.b0395"
            ],
            [
                "8e812f9.fc283d",
                "25c8cf87.d23d3",
                "351a3c05.301074"
            ],
            [
                "fdadd0cd.636fe",
                "fc51f212.c138c",
                "8bc42274.0a66d"
            ],
            [
                "72be4fb.b3d63b",
                "b8e4d90b.d64d68",
                "e1eb24b8.a77548"
            ],
            [
                "e3f9005d.5fbb8",
                "bd2c6431.a1cd18",
                "a5052313.1ecc4"
            ],
            [
                "34d47c96.ffdf74",
                "7abaf477.466cfc",
                "4b66a41f.c59d2c"
            ],
            [
                "c0b16b89.8b03e8",
                "a5746b55.f7b548",
                "cb9dc64c.30cef8"
            ],
            [
                "3fcaabc6.009174",
                "899d784c.d425f8",
                "d6a788f7.22b608",
                "d16ca56e.46d818"
            ],
            [
                "b0edb84a.964248",
                "59af6dc.5925b94",
                "d6a788f7.22b608",
                "bf127b26.0989c8"
            ],
            [
                "8b403c01.e9bd4",
                "84937d70.c8eac",
                "d6a788f7.22b608",
                "f1f2c79d.cdc358"
            ],
            [
                "bcacdcb7.91325",
                "7142dfcd.9fee6",
                "d6a788f7.22b608",
                "dce7ab24.3179f8"
            ],
            [
                "16cc717c.4bce9f",
                "ce21b01d.48cd7"
            ]
        ],
        "outputLabels": [
            "Flow Syn Valve A",
            "Flow Syn Valve B",
            "Binary Valve C",
            "Binary Valve D",
            "C/W Valve",
            "Flow Syn Inj Valve A",
            "Flow Syn Inj Valve B",
            "Binary Inj Valve C",
            "Binary Inj Valve D",
            "Pump A Flow Rate",
            "Pump B Flow Rate",
            "Pump C Flow Rate",
            "Pump D Flow Rate",
            "Chiller Detected"
        ]
    },
    {
        "id": "da693b51.48d008",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 6,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Valve A",
        "x": 2070,
        "y": 3040,
        "wires": []
    },
    {
        "id": "c95c1f7f.87787",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 7,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Valve B",
        "x": 2070,
        "y": 3120,
        "wires": []
    },
    {
        "id": "93b50a4e.e42838",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 8,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Binary Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Valve C",
        "x": 2060,
        "y": 3200,
        "wires": []
    },
    {
        "id": "8e812f9.fc283d",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 9,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Binary Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Valve D",
        "x": 2060,
        "y": 3280,
        "wires": []
    },
    {
        "id": "51ece76.6d05518",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "2f4663e6.06ed7c",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "e9f1243e.889958",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "25c8cf87.d23d3",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "fdadd0cd.636fe",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 14,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "C/W Valve",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "C/W Valve",
        "x": 2050,
        "y": 3360,
        "wires": []
    },
    {
        "id": "fc51f212.c138c",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveOpenCW",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "166ebe68.90f292",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor 1 Temp.",
        "group": "7327ab4f.36a614",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 2060,
        "y": 2240,
        "wires": []
    },
    {
        "id": "91c628b3.3660c8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.temperatureReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "a75a95d4.0a7008",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor 2 Temp.",
        "group": "7327ab4f.36a614",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 2060,
        "y": 2320,
        "wires": []
    },
    {
        "id": "ebb454e2.25a358",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.temperatureReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "3b48c404.8484ec",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor 3 Temp.",
        "group": "7327ab4f.36a614",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 2060,
        "y": 2400,
        "wires": []
    },
    {
        "id": "e05d3574.0fea78",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.temperatureReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "9d8d50e4.ccbf9",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor 4 Temp.",
        "group": "7327ab4f.36a614",
        "order": 11,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 2060,
        "y": 2480,
        "wires": []
    },
    {
        "id": "7aaedd0a.103804",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.temperatureReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "3fcaabc6.009174",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "Pump A Flow Rate",
        "group": "f82abfd2.c973f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 2070,
        "y": 3760,
        "wires": []
    },
    {
        "id": "899d784c.d425f8",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.flowRatePumpA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "16cc717c.4bce9f",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "order": 15,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Chiller Detected",
        "x": 2060,
        "y": 4080,
        "wires": []
    },
    {
        "id": "b0edb84a.964248",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "name": "Pump B Flow Rate",
        "group": "f82abfd2.c973f",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 2070,
        "y": 3840,
        "wires": []
    },
    {
        "id": "8b403c01.e9bd4",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Pump C Flow Rate",
        "group": "f82abfd2.c973f",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 2070,
        "y": 3920,
        "wires": []
    },
    {
        "id": "bcacdcb7.91325",
        "type": "ui_gauge",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Pump D Flow Rate",
        "group": "f82abfd2.c973f",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 2070,
        "y": 4000,
        "wires": []
    },
    {
        "id": "59af6dc.5925b94",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.flowRatePumpB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3880,
        "wires": [
            []
        ]
    },
    {
        "id": "84937d70.c8eac",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.flowRatePumpC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "7142dfcd.9fee6",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.flowRatePumpD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 4040,
        "wires": [
            []
        ]
    },
    {
        "id": "d6a788f7.22b608",
        "type": "ui_chart",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Flow Rates",
        "group": "f82abfd2.c973f",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Flow Rates",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "55",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 2050,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "72be4fb.b3d63b",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 10,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Inj Valve A",
        "x": 2080,
        "y": 3440,
        "wires": []
    },
    {
        "id": "e3f9005d.5fbb8",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 11,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Inj Valve B",
        "x": 2080,
        "y": 3520,
        "wires": []
    },
    {
        "id": "34d47c96.ffdf74",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 12,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Inj Valve C",
        "x": 2070,
        "y": 3600,
        "wires": []
    },
    {
        "id": "c0b16b89.8b03e8",
        "type": "ui_led",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "order": 13,
        "group": "f82abfd2.c973f",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Inj Valve D",
        "x": 2070,
        "y": 3680,
        "wires": []
    },
    {
        "id": "b8e4d90b.d64d68",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveInjOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "bd2c6431.a1cd18",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveInjOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "7abaf477.466cfc",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveInjOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "a5746b55.f7b548",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.valveInjOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3720,
        "wires": [
            []
        ]
    },
    {
        "id": "ce21b01d.48cd7",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.chillerDetected",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 4120,
        "wires": [
            []
        ]
    },
    {
        "id": "67015a10.d1e934",
        "type": "ui_chart",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "Reactor Temperatures",
        "group": "7327ab4f.36a614",
        "order": 12,
        "width": 0,
        "height": 0,
        "label": "Reactor Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 2080,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "363fb278.e1db4e",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Reactor 1 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "96e8bb95.cc2c68"
            ]
        ]
    },
    {
        "id": "2fbcacee.1efa04",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Reactor 2 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 620,
        "wires": [
            [
                "e9c36ff1.fc40f"
            ]
        ]
    },
    {
        "id": "6da86f32.73c52",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Reactor 3 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "9d4ee102.20463"
            ]
        ]
    },
    {
        "id": "14bd6f8c.fb188",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Store Reactor 4 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 780,
        "wires": [
            [
                "9cae0ca4.95c3c"
            ]
        ]
    },
    {
        "id": "61a5d278.80ae2c",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2860,
        "y": 1360,
        "wires": [
            [
                "25aecff7.c3d07"
            ]
        ]
    },
    {
        "id": "25aecff7.c3d07",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3050,
        "y": 1360,
        "wires": [
            [],
            [],
            [
                "d7c1b625.c6b748"
            ]
        ]
    },
    {
        "id": "d64e1dda.dffb6",
        "type": "tcp request",
        "z": "c76a3ed0.de6fd",
        "name": "toFlowSynMaxiTCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "splitc": "\\n",
        "x": 2610,
        "y": 1440,
        "wires": [
            [
                "97dfe6db.ec81a8"
            ]
        ]
    },
    {
        "id": "97dfe6db.ec81a8",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 1440,
        "wires": [
            [
                "90dbb415.7a4e58"
            ]
        ]
    },
    {
        "id": "90dbb415.7a4e58",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3050,
        "y": 1440,
        "wires": [
            [],
            [],
            [
                "ead304.cd2a8d"
            ]
        ]
    },
    {
        "id": "ad4688d4.e87658",
        "type": "tcp request",
        "z": "c76a3ed0.de6fd",
        "name": "toFlowSynMaxiTCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "splitc": "\\n",
        "x": 2610,
        "y": 1520,
        "wires": [
            [
                "204cb8f1.fb0968"
            ]
        ]
    },
    {
        "id": "204cb8f1.fb0968",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "d7c1b625.c6b748",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1440,
        "wires": [
            [
                "d64e1dda.dffb6"
            ]
        ]
    },
    {
        "id": "ead304.cd2a8d",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1520,
        "wires": [
            [
                "ad4688d4.e87658"
            ]
        ]
    },
    {
        "id": "5d48886.d771f78",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "Set Temps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*& @1 @2 @3 @4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@1",
                "fromt": "str",
                "to": "flowsynmaxi1.setTempReactor1-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@2",
                "fromt": "str",
                "to": "flowsynmaxi1.setTempReactor2-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@3",
                "fromt": "str",
                "to": "flowsynmaxi1.setTempReactor3-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@4",
                "fromt": "str",
                "to": "flowsynmaxi1.setTempReactor4-hex",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 660,
        "wires": [
            [
                "9e2cad67.ec9d5"
            ]
        ]
    },
    {
        "id": "9e2cad67.ec9d5",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 660,
        "wires": [
            [
                "bd767c2e.6d111"
            ]
        ]
    },
    {
        "id": "8bc42274.0a66d",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "CW Valve",
        "links": [
            "5bc0d24f.291abc"
        ],
        "x": 2215,
        "y": 3360,
        "wires": []
    },
    {
        "id": "5bc0d24f.291abc",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "8bc42274.0a66d"
        ],
        "x": 535,
        "y": 1260,
        "wires": [
            [
                "60c33999.079e28"
            ]
        ]
    },
    {
        "id": "60c33999.079e28",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "46268eb4.ff9be"
            ]
        ]
    },
    {
        "id": "c7fed41a.b4a1b8",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Flow Syn Valve A",
        "links": [
            "c01787e0.6b8e38"
        ],
        "x": 2195,
        "y": 3040,
        "wires": []
    },
    {
        "id": "fc8891e1.b0395",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Binary Valve C",
        "links": [
            "7e8fe021.8183c"
        ],
        "x": 2195,
        "y": 3200,
        "wires": []
    },
    {
        "id": "351a3c05.301074",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Binary Valve D",
        "links": [
            "d935386f.451418"
        ],
        "x": 2215,
        "y": 3280,
        "wires": []
    },
    {
        "id": "cd8ff911.9e19c8",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Flow Syn Valve B",
        "links": [
            "4efb774f.96ada8"
        ],
        "x": 2195,
        "y": 3120,
        "wires": []
    },
    {
        "id": "e1eb24b8.a77548",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Flow Syn Inj Valve A",
        "links": [
            "bc852cf3.51383"
        ],
        "x": 2215,
        "y": 3440,
        "wires": []
    },
    {
        "id": "a5052313.1ecc4",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Flow Syn Inj Valve B",
        "links": [
            "7a0143c8.e7750c"
        ],
        "x": 2215,
        "y": 3520,
        "wires": []
    },
    {
        "id": "4b66a41f.c59d2c",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Binary Inj Valve C",
        "links": [
            "a75c55fb.7906f8"
        ],
        "x": 2195,
        "y": 3600,
        "wires": []
    },
    {
        "id": "cb9dc64c.30cef8",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Binary Inj Valve D",
        "links": [
            "d84a6ad3.afbf28"
        ],
        "x": 2195,
        "y": 3660,
        "wires": []
    },
    {
        "id": "c01787e0.6b8e38",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "c7fed41a.b4a1b8"
        ],
        "x": 535,
        "y": 860,
        "wires": [
            [
                "b5a3d6b0.448c68"
            ]
        ]
    },
    {
        "id": "b5a3d6b0.448c68",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 860,
        "wires": [
            [
                "61dcb3a1.46463c"
            ]
        ]
    },
    {
        "id": "4efb774f.96ada8",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "cd8ff911.9e19c8"
        ],
        "x": 535,
        "y": 960,
        "wires": [
            [
                "20f4a9b8.37f726"
            ]
        ]
    },
    {
        "id": "20f4a9b8.37f726",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 960,
        "wires": [
            [
                "4060740c.8ae30c"
            ]
        ]
    },
    {
        "id": "7e8fe021.8183c",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "fc8891e1.b0395"
        ],
        "x": 535,
        "y": 1060,
        "wires": [
            [
                "90358b9d.0da4c8"
            ]
        ]
    },
    {
        "id": "90358b9d.0da4c8",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1060,
        "wires": [
            [
                "cfd79700.760ea8"
            ]
        ]
    },
    {
        "id": "d935386f.451418",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "351a3c05.301074"
        ],
        "x": 535,
        "y": 1160,
        "wires": [
            [
                "1c36a8ab.504927"
            ]
        ]
    },
    {
        "id": "1c36a8ab.504927",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1160,
        "wires": [
            [
                "eb91bff.4c1434"
            ]
        ]
    },
    {
        "id": "bc852cf3.51383",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "e1eb24b8.a77548"
        ],
        "x": 535,
        "y": 1360,
        "wires": [
            [
                "22b49b04.ebe9b4"
            ]
        ]
    },
    {
        "id": "22b49b04.ebe9b4",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1360,
        "wires": [
            [
                "56f5bdaa.25a114"
            ]
        ]
    },
    {
        "id": "7a0143c8.e7750c",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "a5052313.1ecc4"
        ],
        "x": 535,
        "y": 1460,
        "wires": [
            [
                "20cd0af1.d12fe6"
            ]
        ]
    },
    {
        "id": "20cd0af1.d12fe6",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1460,
        "wires": [
            [
                "644c2f7c.5f06e"
            ]
        ]
    },
    {
        "id": "a75c55fb.7906f8",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "4b66a41f.c59d2c"
        ],
        "x": 535,
        "y": 1560,
        "wires": [
            [
                "16d26323.702d2d"
            ]
        ]
    },
    {
        "id": "16d26323.702d2d",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1560,
        "wires": [
            [
                "5fdc74fb.7ee9ac"
            ]
        ]
    },
    {
        "id": "d84a6ad3.afbf28",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "links": [
            "cb9dc64c.30cef8"
        ],
        "x": 535,
        "y": 1660,
        "wires": [
            [
                "c301fa1b.702728"
            ]
        ]
    },
    {
        "id": "c301fa1b.702728",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 630,
        "y": 1660,
        "wires": [
            [
                "b924f9f6.6ca1d8"
            ]
        ]
    },
    {
        "id": "d16ca56e.46d818",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Pump A Flow Rate",
        "links": [
            "b04bb91c.8a4568"
        ],
        "x": 2215,
        "y": 3760,
        "wires": []
    },
    {
        "id": "b04bb91c.8a4568",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "Pump A Flow Rate",
        "links": [
            "d16ca56e.46d818"
        ],
        "x": 515,
        "y": 80,
        "wires": [
            [
                "2b88afbb.a712d"
            ]
        ]
    },
    {
        "id": "2b88afbb.a712d",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "dcbadb5.27e7828",
                "83f7a6b5.6df368",
                "5d027416.a3ef0c"
            ]
        ]
    },
    {
        "id": "7e43a10.5d0c16",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "Pump B Flow Rate",
        "links": [
            "bf127b26.0989c8"
        ],
        "x": 515,
        "y": 200,
        "wires": [
            [
                "4f423b54.593114"
            ]
        ]
    },
    {
        "id": "4f423b54.593114",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "906a9506.89fdf8",
                "3c87a2bd.9cfb7e",
                "15e8d004.4890a"
            ]
        ]
    },
    {
        "id": "3095e4f1.36edec",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "Pump C Flow Rate",
        "links": [
            "f1f2c79d.cdc358"
        ],
        "x": 515,
        "y": 320,
        "wires": [
            [
                "b37bf599.a4afb8"
            ]
        ]
    },
    {
        "id": "b37bf599.a4afb8",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "e5fb74c7.ea7bd8",
                "8397a023.6267a",
                "99b2f0c7.fd684"
            ]
        ]
    },
    {
        "id": "c2ab1682.c7e148",
        "type": "link in",
        "z": "c76a3ed0.de6fd",
        "name": "Pump D Flow Rate",
        "links": [
            "dce7ab24.3179f8"
        ],
        "x": 515,
        "y": 440,
        "wires": [
            [
                "6c425a3b.b8c194"
            ]
        ]
    },
    {
        "id": "6c425a3b.b8c194",
        "type": "rbe",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 610,
        "y": 440,
        "wires": [
            [
                "b1264223.fc59c",
                "1d8fa71d.feeb29",
                "8f7feb3e.f87458"
            ]
        ]
    },
    {
        "id": "bf127b26.0989c8",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Pump B Flow Rate",
        "links": [
            "7e43a10.5d0c16"
        ],
        "x": 2215,
        "y": 3840,
        "wires": []
    },
    {
        "id": "f1f2c79d.cdc358",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Pump C Flow Rate",
        "links": [
            "3095e4f1.36edec"
        ],
        "x": 2215,
        "y": 3920,
        "wires": []
    },
    {
        "id": "dce7ab24.3179f8",
        "type": "link out",
        "z": "c76a3ed0.de6fd",
        "name": "Pump D Flow Rate",
        "links": [
            "c2ab1682.c7e148"
        ],
        "x": 2215,
        "y": 4000,
        "wires": []
    },
    {
        "id": "83f7a6b5.6df368",
        "type": "ui_numeric",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "label": "Pump A Flow Rate",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 6,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "x": 790,
        "y": 120,
        "wires": [
            [
                "b87fefd9.33a57"
            ]
        ]
    },
    {
        "id": "3c87a2bd.9cfb7e",
        "type": "ui_numeric",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "label": "Pump B Flow Rate",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 7,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "x": 790,
        "y": 240,
        "wires": [
            [
                "614b2ede.3123a"
            ]
        ]
    },
    {
        "id": "8397a023.6267a",
        "type": "ui_numeric",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "label": "Bin. Pump C Flow Rate",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 8,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "x": 790,
        "y": 360,
        "wires": [
            [
                "f26d1606.4979b8"
            ]
        ]
    },
    {
        "id": "1d8fa71d.feeb29",
        "type": "ui_numeric",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "label": "Bin. Pump D Flow Rate",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 9,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "x": 790,
        "y": 480,
        "wires": [
            [
                "44a85cf.1531ca4"
            ]
        ]
    },
    {
        "id": "a697e66a.9fab88",
        "type": "comment",
        "z": "c76a3ed0.de6fd",
        "name": "Status lights of valves is not needed anymore becuase the Set valves option gets updated if a chnage is made manually on the reactor",
        "info": "",
        "x": 2010,
        "y": 3000,
        "wires": []
    },
    {
        "id": "79be0a43.9cbf04",
        "type": "throttle",
        "z": "c76a3ed0.de6fd",
        "d": true,
        "name": "",
        "throttleType": "time",
        "timeLimit": "5",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 2030,
        "y": 1800,
        "wires": [
            [
                "5262b0a2.036"
            ]
        ]
    },
    {
        "id": "d166bd1a.4c6e8",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "connect failed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 2220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "22474cd0.3e6cf4",
        "type": "catch",
        "z": "c76a3ed0.de6fd",
        "name": "Check if reactor is connected",
        "scope": [
            "259b8d4d.9a87b2",
            "acf79c34.5a5a9"
        ],
        "uncaught": false,
        "x": 1420,
        "y": 4860,
        "wires": [
            []
        ]
    },
    {
        "id": "a1a9cecc.44b42",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "Check topic for distribution",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PumpAFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PumpBFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpCFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpDFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor1Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor2Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor3Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor4Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowCWValve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heater",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 18,
        "x": 280,
        "y": 960,
        "wires": [
            [
                "83f7a6b5.6df368"
            ],
            [
                "3c87a2bd.9cfb7e"
            ],
            [
                "8397a023.6267a"
            ],
            [
                "1d8fa71d.feeb29"
            ],
            [
                "cd3fa260.6acf3",
                "ec7c0fd6.fad3e"
            ],
            [
                "34c4b8f4.b8e318",
                "b61a0720.1a1dd8"
            ],
            [
                "504f7051.a30cd",
                "d7f1fa9b.604818",
                "73d2107d.d1798"
            ],
            [
                "86268d97.f69d"
            ],
            [
                "61dcb3a1.46463c"
            ],
            [
                "4060740c.8ae30c"
            ],
            [
                "cfd79700.760ea8"
            ],
            [
                "eb91bff.4c1434"
            ],
            [
                "46268eb4.ff9be"
            ],
            [
                "56f5bdaa.25a114"
            ],
            [
                "644c2f7c.5f06e"
            ],
            [
                "5fdc74fb.7ee9ac"
            ],
            [
                "b924f9f6.6ca1d8"
            ],
            [
                "507651a2.63abb"
            ]
        ]
    },
    {
        "id": "96e8bb95.cc2c68",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.setTempReactor1-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 540,
        "wires": [
            [
                "5d48886.d771f78"
            ]
        ]
    },
    {
        "id": "e9c36ff1.fc40f",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.setTempReactor2-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 620,
        "wires": [
            [
                "5d48886.d771f78"
            ]
        ]
    },
    {
        "id": "9d4ee102.20463",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.setTempReactor3-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 700,
        "wires": [
            [
                "5d48886.d771f78"
            ]
        ]
    },
    {
        "id": "9cae0ca4.95c3c",
        "type": "function",
        "z": "c76a3ed0.de6fd",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.setTempReactor4-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 780,
        "wires": [
            [
                "5d48886.d771f78"
            ]
        ]
    },
    {
        "id": "5d027416.a3ef0c",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "PumpAFlowRate",
        "label": "Flow Syn Pump A Flow Rate (mL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 790,
        "y": 80,
        "wires": [
            [
                "b87fefd9.33a57"
            ]
        ]
    },
    {
        "id": "15e8d004.4890a",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "PumpBFlowRate",
        "label": "Flow Syn Pump B Flow Rate (mL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "614b2ede.3123a"
            ]
        ]
    },
    {
        "id": "99b2f0c7.fd684",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "PumpCFlowRate",
        "label": "Binary Pump C Flow Rate (uL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "",
        "x": 790,
        "y": 320,
        "wires": [
            [
                "f26d1606.4979b8"
            ]
        ]
    },
    {
        "id": "8f7feb3e.f87458",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "PumpDFlowRate",
        "label": "Binary Pump D Flow Rate (uL/min)",
        "tooltip": "",
        "group": "f9c5ce26.52f18",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "",
        "x": 790,
        "y": 440,
        "wires": [
            [
                "44a85cf.1531ca4"
            ]
        ]
    },
    {
        "id": "ec7c0fd6.fad3e",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor1Temp",
        "label": "Reactor 1 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 780,
        "y": 520,
        "wires": [
            [
                "363fb278.e1db4e"
            ]
        ]
    },
    {
        "id": "b61a0720.1a1dd8",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor2Temp",
        "label": "Reactor 2 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 780,
        "y": 600,
        "wires": [
            [
                "2fbcacee.1efa04"
            ]
        ]
    },
    {
        "id": "d7f1fa9b.604818",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor3Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 780,
        "y": 680,
        "wires": [
            [
                "6da86f32.73c52"
            ]
        ]
    },
    {
        "id": "73d2107d.d1798",
        "type": "ui_text_input",
        "z": "c76a3ed0.de6fd",
        "name": "Reactor4Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "5abf5184.1ba7f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 780,
        "y": 760,
        "wires": [
            [
                "14bd6f8c.fb188"
            ]
        ]
    },
    {
        "id": "54a13d8f.ddbf54",
        "type": "switch",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "flowsynmaxi1.pressureSystemMax",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2270,
        "y": 1880,
        "wires": [
            [
                "e7c0d05b.17397"
            ]
        ]
    },
    {
        "id": "e7c0d05b.17397",
        "type": "change",
        "z": "c76a3ed0.de6fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureAlarm",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "f4d044c9.1ebbf8",
        "type": "tcp request",
        "z": "98cb21df.da2ee",
        "name": "Uniqsis-Laptop",
        "server": "192.168.1.188",
        "port": "3456",
        "out": "time",
        "splitc": "1000",
        "x": 620,
        "y": 280,
        "wires": [
            [
                "e3f0bfcd.97434",
                "403565b1.a1ffbc"
            ]
        ]
    },
    {
        "id": "f19d639b.9ee73",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Status()",
        "payloadType": "str",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "e3f0bfcd.97434",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "7bb48cd4.36fe84",
        "type": "function",
        "z": "98cb21df.da2ee",
        "name": "",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 280,
        "wires": [
            [
                "f4d044c9.1ebbf8",
                "7cbe752a.67546c"
            ]
        ]
    },
    {
        "id": "403565b1.a1ffbc",
        "type": "function",
        "z": "98cb21df.da2ee",
        "name": "",
        "func": "// return msg;\n\nvar output = msg.payload;\nmsg.payload = output.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "c177b7f6.2b0ec8"
            ]
        ]
    },
    {
        "id": "c177b7f6.2b0ec8",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "fd0ec8f8.9ba588",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "GetMinMax()",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "513762db.4ad03c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get(1,250,350,50,0)",
        "payloadType": "str",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "3e688325.64958c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Rate(40)",
        "payloadType": "str",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "d6cbad73.522aa",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "PixelToWavelength(92)",
        "payloadType": "str",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "455d275c.b79da8",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "WavelengthToPixel(200)",
        "payloadType": "str",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "6188dde4.dab344",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SetPathLength(1)",
        "payloadType": "str",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "89b4635b.3962c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SetTimeAveraging(5)",
        "payloadType": "str",
        "x": 220,
        "y": 360,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "2a0b3d6.3651ec2",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "Strobe(5,20)",
        "payloadType": "str",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "f7cff0f9.befc",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeAuto(1,200,400)",
        "payloadType": "str",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "a01632ab.51ffe",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeOn(1)",
        "payloadType": "str",
        "x": 470,
        "y": 460,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "384124df.f9596c",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Blank()",
        "payloadType": "str",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "d00d2c90.e4e05",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StrobeOn(0)",
        "payloadType": "str",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "7cbe752a.67546c",
        "type": "debug",
        "z": "98cb21df.da2ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "2b813f92.cdd9a",
        "type": "comment",
        "z": "98cb21df.da2ee",
        "name": "Need to run twice(sometimes)",
        "info": "",
        "x": 710,
        "y": 460,
        "wires": []
    },
    {
        "id": "85466790.d86fe8",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get(1,250,350,50)",
        "payloadType": "str",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "35cfa536.db853a",
        "type": "inject",
        "z": "98cb21df.da2ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Get()",
        "payloadType": "str",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "7bb48cd4.36fe84"
            ]
        ]
    },
    {
        "id": "25c71a8097caba87",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "499f54fee7fa7fb8",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Set InUse Flag",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\") || {};\n\nsf10Vapourtec1.inUse = true;\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nmsg.payload = sf10Vapourtec1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "381bfb5b068e20c5",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Receive Command: Link to SF10 Vapourtec 1",
        "info": "",
        "x": 190,
        "y": 540,
        "wires": []
    },
    {
        "id": "9dcf9fdfeb554bb4",
        "type": "mqtt out",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "topic": "subflow/sf10vapourtec1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1950,
        "y": 620,
        "wires": []
    },
    {
        "id": "778b971fa7d666bb",
        "type": "mqtt in",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "topic": "subflow/sf10vapourtec1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 960,
        "wires": [
            [
                "ed017f1ea54d533f"
            ]
        ]
    },
    {
        "id": "22a6a89a16a5caae",
        "type": "inject",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "499f54fee7fa7fb8"
            ]
        ]
    },
    {
        "id": "4cb1aa08cc0a8fe1",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "8253d446697f0c74"
            ]
        ]
    },
    {
        "id": "8253d446697f0c74",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "sf10Vapourtec1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "b9288a56f5dfd3c1",
                "0958657a36119e32"
            ],
            []
        ]
    },
    {
        "id": "605eca13ccd55237",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "b0bb338c89632303",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1730,
        "y": 620,
        "wires": [
            [
                "9dcf9fdfeb554bb4"
            ]
        ]
    },
    {
        "id": "ac34ca4df61b04ab",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "b9288a56f5dfd3c1",
        "type": "change",
        "z": "e399fc8fc0b218b9",
        "name": "Command received",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "975f46529d288422",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Return result from Serial port",
        "info": "",
        "x": 140,
        "y": 920,
        "wires": []
    },
    {
        "id": "f4a5379235533145",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"START\"}",
        "info": "",
        "x": 230,
        "y": 440,
        "wires": []
    },
    {
        "id": "fa4a7ab71cb2b687",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"STOP\"}",
        "info": "",
        "x": 220,
        "y": 480,
        "wires": []
    },
    {
        "id": "c8d29f37c42c5471",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "4577921abc9e3c97",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}",
        "info": "",
        "x": 320,
        "y": 240,
        "wires": []
    },
    {
        "id": "da5239bb38266369",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}",
        "info": "",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "08c6e6eb9580ac5d",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}",
        "info": "",
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "16cae053f9df88e9",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}",
        "info": "",
        "x": 330,
        "y": 360,
        "wires": []
    },
    {
        "id": "83466901bf9e749e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartSpeed\": 0.9, \"rampStopSpeed\": 1.9, \"rampTIme\": 1.5}",
        "info": "",
        "x": 470,
        "y": 400,
        "wires": []
    },
    {
        "id": "4d2635032246247e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"VALVE\", \"valve\":\"A\"}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "795d535c4a83ad7b",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "OUTPUT",
        "info": "",
        "x": 1120,
        "y": 100,
        "wires": []
    },
    {
        "id": "c2ec8f0064d2bb3e",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "Receive Response: Link to SF10 Vapourtec 1",
        "info": "",
        "x": 190,
        "y": 860,
        "wires": []
    },
    {
        "id": "22a278819ede7490",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Generate Status / Output",
        "func": "var timestamp = msg.myepoch;\n\nvar responseString = \"\";\nvar statusMsg = {};\nvar outputMsg = {};\n\nresponseString = \"Mode: \" + msg.payload.settings.mode + ' [State: ' + msg.payload.state + ']';\n\nstatusMsg.payload = responseString;\noutputMsg.payload = msg.payload;\n\nreturn [statusMsg, outputMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "78d471b2b4d60a53",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Check Response: Success / Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 960,
        "wires": [
            [
                "38675d53d9d2d9e9",
                "776cc4a1e45db9ad"
            ],
            []
        ]
    },
    {
        "id": "4f30d0c598400f3b",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 640,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "0958657a36119e32",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "4f30d0c598400f3b"
            ],
            [
                "8539917c234dc38a"
            ],
            [
                "7265cd25f5ecc61e"
            ],
            [
                "4f30d0c598400f3b"
            ],
            [
                "4f30d0c598400f3b"
            ]
        ]
    },
    {
        "id": "8539917c234dc38a",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar valve = msg.valve || \"A\";\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        valve: valve\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "7265cd25f5ecc61e",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "name": "FLOW / REG / DOSE / GAS / RAMP",
        "property": "mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 740,
        "wires": [
            [
                "66686fd2593909a3"
            ],
            [
                "de2c7a407a20c427"
            ],
            [
                "26ce96dee153b079"
            ],
            [
                "b636f2d2b8b79dbb"
            ],
            [
                "bbf2812f351a0d39"
            ]
        ]
    },
    {
        "id": "66686fd2593909a3",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar mode = msg.mode || \"\";\nvar flowrate = msg.flowrate || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        mode: mode,\n        flowrate: flowrate\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 720,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "de2c7a407a20c427",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar mode = msg.mode || \"\";\nvar pressure = msg.pressure || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        mode: mode,\n        pressure: pressure\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 760,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "26ce96dee153b079",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar mode = msg.mode || \"\";\nvar dose = msg.dose || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        mode: mode,\n        dose: dose\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 800,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "b636f2d2b8b79dbb",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar mode = msg.mode || \"\";\nvar gasflowrate = msg.gasflowrate || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        mode: mode,\n        gasflowrate: gasflowrate\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 840,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "bbf2812f351a0d39",
        "type": "function",
        "z": "e399fc8fc0b218b9",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar mode = msg.mode || \"\";\nvar rampStartRate = msg.rampStartRate || 0.0;\nvar rampStopRate = msg.rampStopRate || 0.0;\nvar rampTime = msg.rampTime || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        mode: mode,\n        rampStartRate: rampStartRate,\n        rampStopRate: rampStopRate,\n        rampTime: rampTime\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 880,
        "wires": [
            [
                "b0bb338c89632303"
            ]
        ]
    },
    {
        "id": "ed017f1ea54d533f",
        "type": "json",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 960,
        "wires": [
            [
                "78d471b2b4d60a53"
            ]
        ]
    },
    {
        "id": "38675d53d9d2d9e9",
        "type": "switch",
        "z": "e399fc8fc0b218b9",
        "d": true,
        "name": "Check Settings payload present: Yes / No ",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 1040,
        "wires": [
            [
                "22a278819ede7490"
            ],
            []
        ]
    },
    {
        "id": "776cc4a1e45db9ad",
        "type": "simpletime",
        "z": "e399fc8fc0b218b9",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 870,
        "y": 940,
        "wires": [
            [
                "22a278819ede7490"
            ]
        ]
    },
    {
        "id": "ad7c54c9f4116047",
        "type": "comment",
        "z": "e399fc8fc0b218b9",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec1\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 1830,
        "y": 160,
        "wires": []
    },
    {
        "id": "68fd199b11f8d622",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Init SF10 vapourtec 1 (State, Mode, values & InUse)",
        "func": "var sf10Vapourtec1 = {\n        deviceName: \"sf10Vapourtec1\",\n        deviceType: \"Pump\",\n        inUse: false,\n        remoteEnabled: false,\n        tele: {\n            cmnd: '',\n            settings: {\n                mode: '',\n                flowrate: 0.0,\n                pressure: 0.0,\n                dose: 0.0,\n                gasflowrate: 0.0,\n                rampStartRate: 0.0,\n                rampStopRate: 0.0,\n                rampTime: 0.0\n            },\n            state: {\n                status: 'STOP',\n                valve: 'A',\n                response: '',\n            },\n            timestamp: ''\n        }\n};\n\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nmsg.payload = sf10Vapourtec1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7197f78e23a063dd",
        "type": "inject",
        "z": "3bf455a61dc4725c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "68fd199b11f8d622"
            ]
        ]
    },
    {
        "id": "6a0bbf2fbb34f208",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "INIT: Variables at startup",
        "info": "",
        "x": 150,
        "y": 20,
        "wires": []
    },
    {
        "id": "9b1af040dc096aa8",
        "type": "mqtt in",
        "z": "3bf455a61dc4725c",
        "name": "",
        "topic": "subflow/sf10vapourtec1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 740,
        "wires": [
            [
                "137c2b1dcc21a78f"
            ]
        ]
    },
    {
        "id": "29c74471f9cd5241",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 580,
        "wires": []
    },
    {
        "id": "3bba40e0c853a0c8",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "REMOTEEN/ START/ STOP/ VALVE/MODE/FLOW/GASFLOW/REG/DOSE/RAMP/GV",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STOP",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "MODE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GV",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "7ed7660147cfd110"
            ],
            [
                "0b96b3f79cfa1f23"
            ],
            [
                "cb609a078cb166f0"
            ],
            [
                "d92e9111992a785f"
            ],
            [
                "92de1de966d6aea5",
                "6809dc08bcdf5324"
            ],
            [
                "92de1de966d6aea5"
            ],
            []
        ]
    },
    {
        "id": "f96310d090f62782",
        "type": "mqtt out",
        "z": "3bf455a61dc4725c",
        "name": "",
        "topic": "subflow/sf10vapourtec1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 4020,
        "y": 920,
        "wires": []
    },
    {
        "id": "e3eb49b6c3ef4fb6",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "?????? UPDATE Globa l variable",
        "info": "",
        "x": 1370,
        "y": 20,
        "wires": []
    },
    {
        "id": "92de1de966d6aea5",
        "type": "serial request",
        "z": "3bf455a61dc4725c",
        "name": "",
        "serial": "5d74cc80985dec42",
        "x": 3030,
        "y": 980,
        "wires": [
            [
                "94087ec57e5fbf5c"
            ]
        ]
    },
    {
        "id": "79109ecf0d95c969",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Slider: Flow/GasFlow/Pressure/Dose/RampStart/RampStop/RampTime",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "SliderFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderGasFlow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderPressure",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderDose",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStart",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampStop",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SliderRampTime",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 590,
        "y": 1240,
        "wires": [
            [
                "12bf8fdd5e66b96d"
            ],
            [
                "aaaaa4774f1eebff"
            ],
            [
                "63a90c4df69d3f51"
            ],
            [
                "6affa3e4b555e954"
            ],
            [
                "f76c5818dd3166c7"
            ],
            [
                "f04379813ac186e2"
            ],
            [
                "3ff97091e52e54b2"
            ],
            []
        ]
    },
    {
        "id": "12bf8fdd5e66b96d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETFLOW command & Set flow",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1200,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "aaaaa4774f1eebff",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETGASFLOW command & Set gasflow",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "63a90c4df69d3f51",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETREG command & Set pressure",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1280,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6affa3e4b555e954",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETDOSE command & Set dose",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "d92e9111992a785f",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Valve: B / A",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "B",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1020,
        "wires": [
            [
                "cf82995da8ad5857",
                "92de1de966d6aea5"
            ],
            [
                "8645f2d681216512",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "cf82995da8ad5857",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "B",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 1020,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "8645f2d681216512",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "A",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 1060,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6809dc08bcdf5324",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Mode: FLOW/REG/DOSE/GAS/RAMP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "815aff4df4aa6e25"
            ],
            [
                "eeb0e6d73f854d45"
            ],
            [
                "33acca1d18d90ac0"
            ],
            [
                "539fc17f353b1c26"
            ],
            [
                "350c028bf6e9b392"
            ]
        ]
    },
    {
        "id": "815aff4df4aa6e25",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "eeb0e6d73f854d45",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "33acca1d18d90ac0",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "539fc17f353b1c26",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "350c028bf6e9b392",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f76c5818dd3166c7",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampStart",
        "rules": [
            {
                "t": "set",
                "p": "rampStart",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.rampStart",
                "pt": "global",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStartRate",
                "pt": "global",
                "to": "rampStart",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1360,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "f04379813ac186e2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampStop",
        "rules": [
            {
                "t": "set",
                "p": "rampStop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampTime",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStopRate",
                "pt": "global",
                "to": "rampStop",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1400,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "3ff97091e52e54b2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build SETRAMP command & Set rampTime",
        "rules": [
            {
                "t": "set",
                "p": "rampTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @x @y @z",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@x",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStartRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@y",
                "fromt": "str",
                "to": "sf10Vapourtec1.tele.settings.rampStopRate",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@z",
                "fromt": "str",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampTime",
                "pt": "global",
                "to": "rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "RAMP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1440,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6b965ef404e068cc",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Buttons - Command in msg.payload",
        "info": "",
        "x": 500,
        "y": 960,
        "wires": []
    },
    {
        "id": "81dcdfdd83b8ec07",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "Sliders (Variable values) - Variable Name in msg.topic & Variable Value in msg.payload",
        "info": "",
        "x": 640,
        "y": 1160,
        "wires": []
    },
    {
        "id": "91174aa6461588b8",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Check Command: REMOTEEN / VALVE / SET / START / STOP",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 690,
        "y": 740,
        "wires": [
            [
                "da665d69cb36b117"
            ],
            [
                "b1a808017b2c3651"
            ],
            [
                "c4bc66c944d26b0e"
            ],
            [
                "8d7f8124fdd6339e"
            ],
            [
                "036e01cd94b48b4e"
            ]
        ]
    },
    {
        "id": "f52aaeb71dfd32bb",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 140,
        "wires": []
    },
    {
        "id": "61b972bd1053124a",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"START\"}",
        "info": "",
        "x": 230,
        "y": 460,
        "wires": []
    },
    {
        "id": "4aea6ee3af2ea47e",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"STOP\"}",
        "info": "",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "a810cda021a0fc2f",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 250,
        "y": 180,
        "wires": []
    },
    {
        "id": "69764842c215a7e8",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"FLOW\", \"flowrate\": 0.5}",
        "info": "",
        "x": 320,
        "y": 260,
        "wires": []
    },
    {
        "id": "54c2e99fce114d6a",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"REG\", \"pressure\": 0.6}",
        "info": "",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "6699f9c1fe67f272",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"DOSE\", \"dose\": 0.7}",
        "info": "",
        "x": 310,
        "y": 340,
        "wires": []
    },
    {
        "id": "12a06d0fdc86d704",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"GAS\", \"gasflowrate\": 0.8}",
        "info": "",
        "x": 330,
        "y": 380,
        "wires": []
    },
    {
        "id": "67a0ef647079cfc0",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"SET\", \"mode\":\"RAMP\", \"rampStartRate\": 0.9, \"rampStopRate\": 1.9, \"rampTime\": 1.5}",
        "info": "",
        "x": 460,
        "y": 420,
        "wires": []
    },
    {
        "id": "137c2b1dcc21a78f",
        "type": "json",
        "z": "3bf455a61dc4725c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "91174aa6461588b8"
            ]
        ]
    },
    {
        "id": "da665d69cb36b117",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create REMOTEEN command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "REMOTEEN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 640,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "391660fa1def5aa7",
        "type": "json",
        "z": "3bf455a61dc4725c",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3770,
        "y": 920,
        "wires": [
            [
                "f96310d090f62782"
            ]
        ]
    },
    {
        "id": "8d7f8124fdd6339e",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create START command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "START",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "036e01cd94b48b4e",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create STOP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 860,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "d66117d40254edfd",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\":\"sf10Vapourtec1\", \"command\":\"VALVE\", \"valve\":\"A\"}",
        "info": "",
        "x": 260,
        "y": 220,
        "wires": []
    },
    {
        "id": "b1a808017b2c3651",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create VALVE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "payload.valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "VALVE @valve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@valve",
                "fromt": "str",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.valve",
                "pt": "global",
                "to": "valve",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 680,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "c4bc66c944d26b0e",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1230,
        "y": 740,
        "wires": [
            [
                "05998983f073c8f2"
            ],
            [
                "48d9fdc1c99acf58"
            ],
            [
                "6152fe701a906236"
            ],
            [
                "0c31da3fd757fcb8"
            ],
            [
                "7cbb66135c97e02a"
            ]
        ]
    },
    {
        "id": "638aacb98d817013",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "flowrate",
                "pt": "msg",
                "to": "payload.flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETFLOW @flowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@flowrate",
                "fromt": "str",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.flowrate",
                "pt": "global",
                "to": "flowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 540,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "4047a8c0070d250c",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "OUTPUT",
        "info": "",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "b55c3add3e132019",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 700,
        "wires": []
    },
    {
        "id": "099f151f40a6d504",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "8a048c2c79db9bcb",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\");\nvar timestamp = msg.myepoch;\nvar sentCommand = msg.request_payload || \"\";\nvar status = msg.status || \"\";\nvar response = msg.payload || {};\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nsf10Vapourtec1.tele.state.response = response;\nsf10Vapourtec1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec1.deviceName,\n        deviceType: sf10Vapourtec1.deviceType,\n        settings: {\n            cmnd: sentCommand,\n            mode: sf10Vapourtec1.tele.settings.mode,\n            flowrate: sf10Vapourtec1.tele.settings.flowrate,\n            pressure: sf10Vapourtec1.tele.settings.pressure,\n            dose: sf10Vapourtec1.tele.settings.dose,\n            gasflowrate: sf10Vapourtec1.tele.settings.gasflowrate,\n            rampStartRate: sf10Vapourtec1.tele.settings.rampStartRate,\n            rampStopRate: sf10Vapourtec1.tele.settings.rampStopRate,\n            rampTime: sf10Vapourtec1.tele.settings.rampTime\n        },\n        state: {\n            response: response,\n            status: status\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nstatusMsg = {\n    payload: sentCommand + ' - ' + status + ' [' + response + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 980,
        "wires": [
            [
                "391660fa1def5aa7"
            ],
            []
        ]
    },
    {
        "id": "b516025e7c90df87",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETREG command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload.pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETREG @pressure",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@pressure",
                "fromt": "str",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.pressure",
                "pt": "global",
                "to": "pressure",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 580,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "50dc82d2bc7d1984",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETDOSE command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "dose",
                "pt": "msg",
                "to": "payload.dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETDOSE @dose",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@dose",
                "fromt": "str",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.dose",
                "pt": "global",
                "to": "dose",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 620,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "998f3e84c168c75d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETGASFLOW command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "gasflowrate",
                "pt": "msg",
                "to": "payload.gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETGASFLOW @gasflowrate",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@gasflowrate",
                "fromt": "str",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.gasflowrate",
                "pt": "global",
                "to": "gasflowrate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 660,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "9902bef7282cee4d",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Create SETRAMP command, Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "startRate",
                "pt": "msg",
                "to": "payload.rampStartRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "stopRate",
                "pt": "msg",
                "to": "payload.rampStopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "payload.rampTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mode",
                "pt": "msg",
                "to": "payload.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SETRAMP @startRate @stopRate @time",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@startRate",
                "fromt": "str",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@stopRate",
                "fromt": "str",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@time",
                "fromt": "str",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStartRate",
                "pt": "global",
                "to": "startRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampStopRate",
                "pt": "global",
                "to": "stopRate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.rampTime",
                "pt": "global",
                "to": "time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.settings.mode",
                "pt": "global",
                "to": "mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 700,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "7ed7660147cfd110",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 900,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "0b96b3f79cfa1f23",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "START",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 940,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "cb609a078cb166f0",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.state.status",
                "pt": "global",
                "to": "STOP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "sf10Vapourtec1.tele.cmnd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 980,
        "wires": [
            [
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "d6820b0fb6d93474",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "{\"payload\": {\"deviceName\": \"sf10Vapourtec1\",\"deviceType\":\"Pump\", \"cmnd\":\"SETREG 0.6\",\"settings: {\"mode\":\"FLOW\",\"flowrate\":9.0,\"pressure\":8.7,\"dose\":7.6,\"gasflowrate\":4.5,\"rampStartRate\":4.0,\"rampStopRate\":3,\"rampTime\":2},\"state\":{\"status\":\"STOP\", \"valve\":\"A\",\"response\":\"OK\\r\"}, \"timestamp\":\"1705043077320\"}}",
        "info": "",
        "x": 1790,
        "y": 180,
        "wires": []
    },
    {
        "id": "c0234698772ed1c9",
        "type": "inject",
        "z": "3bf455a61dc4725c",
        "name": "TriggerSF10 Settings Send",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1700,
        "wires": [
            [
                "92148a79ab48e124"
            ]
        ]
    },
    {
        "id": "92148a79ab48e124",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "name": "inUse?",
        "property": "sf10Vapourtec1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1700,
        "wires": [
            [
                "f9a0236060f30eb9"
            ]
        ]
    },
    {
        "id": "eb2b760381321ade",
        "type": "switch",
        "z": "3bf455a61dc4725c",
        "d": true,
        "name": "Settings NOT Empty",
        "property": "payload.settings",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "d8a42060ec9cb18a"
            ]
        ]
    },
    {
        "id": "f9a0236060f30eb9",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Read Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "eb2b760381321ade",
                "d8a42060ec9cb18a"
            ]
        ]
    },
    {
        "id": "d8a42060ec9cb18a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Build response payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sf10Vapourtec1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "settings",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.settings",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.state",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valve",
                "pt": "msg",
                "to": "sf10Vapourtec1.tele.state.valve",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1700,
        "wires": [
            [
                "3eb0c8c24c7eb23f"
            ]
        ]
    },
    {
        "id": "ab5be5d00382705a",
        "type": "comment",
        "z": "3bf455a61dc4725c",
        "name": "When Settings is present, periodically send output message",
        "info": "",
        "x": 280,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4a9d3536862f4853",
        "type": "function",
        "z": "3bf455a61dc4725c",
        "name": "Build Response message & Status Ouput",
        "func": "var sf10Vapourtec1 = global.get(\"sf10Vapourtec1\");\nvar timestamp = msg.myepoch;\n\nvar settings = msg.settings || {};\nvar state = msg.state || \"\";\n// var valve = msg.valve || \"\";\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\n// responseMsg = {\n//     payload: \"sf10Vapourtec1\",\n//     settings: settings,\n//     state: state,\n//     valve: valve\n//     };\n\nresponseMsg = {\n    payload: {\n        deviceName: sf10Vapourtec1.deviceName,\n        deviceType: sf10Vapourtec1.deviceType,\n        cmnd: sf10Vapourtec1.tele.cmnd,\n        settings: settings,\n        state: state,\n        timestamp: timestamp\n    }\n};\n\nglobal.set(\"sf10Vapourtec1\", sf10Vapourtec1);\n\nstatusMsg = {\n    payload: 'MODE: ' + settings.mode + ' [State: ' + state + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1700,
        "wires": [
            [
                "391660fa1def5aa7"
            ],
            []
        ]
    },
    {
        "id": "bf027b162f5258b2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE FLOW Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE FLOW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 540,
        "wires": [
            [
                "34d9c7301ad792f9",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "6389f737842c61ad",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE REG Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE REG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 580,
        "wires": [
            [
                "d1ba9896bcb9c574",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "c649fbca7f0991c3",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE DOSE Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE DOSE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 620,
        "wires": [
            [
                "2e7a7381b47ef82d",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "1526dccb80de3990",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE GAS Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE GAS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 660,
        "wires": [
            [
                "05fe1cdeeded5311",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "3591a028dbcf13d2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "MODE RAMP Cmnd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "MODE RAMP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 700,
        "wires": [
            [
                "3f010c43bd61082b",
                "92de1de966d6aea5"
            ]
        ]
    },
    {
        "id": "34d9c7301ad792f9",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 540,
        "wires": [
            [
                "8caede5f4f5dda94"
            ]
        ]
    },
    {
        "id": "d1ba9896bcb9c574",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 580,
        "wires": [
            [
                "6968ead28a2462f1"
            ]
        ]
    },
    {
        "id": "2e7a7381b47ef82d",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 620,
        "wires": [
            [
                "39793d1694bbec65"
            ]
        ]
    },
    {
        "id": "05fe1cdeeded5311",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 660,
        "wires": [
            [
                "a0350420714b8d24"
            ]
        ]
    },
    {
        "id": "3f010c43bd61082b",
        "type": "delay",
        "z": "3bf455a61dc4725c",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 700,
        "wires": [
            [
                "35c091610e2ea56a"
            ]
        ]
    },
    {
        "id": "05998983f073c8f2",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 540,
        "wires": [
            [
                "bf027b162f5258b2"
            ]
        ]
    },
    {
        "id": "48d9fdc1c99acf58",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 580,
        "wires": [
            [
                "6389f737842c61ad"
            ]
        ]
    },
    {
        "id": "6152fe701a906236",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 620,
        "wires": [
            [
                "c649fbca7f0991c3"
            ]
        ]
    },
    {
        "id": "0c31da3fd757fcb8",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 660,
        "wires": [
            [
                "1526dccb80de3990"
            ]
        ]
    },
    {
        "id": "7cbb66135c97e02a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Store Payload",
        "rules": [
            {
                "t": "set",
                "p": "payloadStore",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 700,
        "wires": [
            [
                "3591a028dbcf13d2"
            ]
        ]
    },
    {
        "id": "8caede5f4f5dda94",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 540,
        "wires": [
            [
                "638aacb98d817013"
            ]
        ]
    },
    {
        "id": "6968ead28a2462f1",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 580,
        "wires": [
            [
                "b516025e7c90df87"
            ]
        ]
    },
    {
        "id": "39793d1694bbec65",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 620,
        "wires": [
            [
                "50dc82d2bc7d1984"
            ]
        ]
    },
    {
        "id": "a0350420714b8d24",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 660,
        "wires": [
            [
                "998f3e84c168c75d"
            ]
        ]
    },
    {
        "id": "35c091610e2ea56a",
        "type": "change",
        "z": "3bf455a61dc4725c",
        "name": "Restore Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadStore",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 700,
        "wires": [
            [
                "9902bef7282cee4d"
            ]
        ]
    },
    {
        "id": "94087ec57e5fbf5c",
        "type": "simpletime",
        "z": "3bf455a61dc4725c",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 3210,
        "y": 980,
        "wires": [
            [
                "8a048c2c79db9bcb"
            ]
        ]
    },
    {
        "id": "3eb0c8c24c7eb23f",
        "type": "simpletime",
        "z": "3bf455a61dc4725c",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 1410,
        "y": 1700,
        "wires": [
            [
                "4a9d3536862f4853"
            ]
        ]
    },
    {
        "id": "416e771d68d0f37d",
        "type": "inject",
        "z": "ef63b0d123a76daa",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "f359c570b253314a"
            ]
        ]
    },
    {
        "id": "380641847c099cc2",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "f359c570b253314a",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Set InUse Flag",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\") || {};\n\nflowsynmaxi2.inUse = true;\n\nglobal.set(\"flowsynmaxi2\", flowsynmaxi2);\n\nmsg.payload = flowsynmaxi2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7f876d1500e15126",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "998e5f101ed42ffa",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"PumpAFlowRate\", \"command\":\"SET\", \"value\": 2.5}",
        "info": "",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "1ef3dc8a5ba0cc57",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\",\"temperatureRead\":29.5} ??????????????",
        "info": "",
        "x": 1290,
        "y": 160,
        "wires": []
    },
    {
        "id": "8dea984eca3c1f5a",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "58a8b43bc3360ee9",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5e4d284bebebb458",
        "type": "switch",
        "z": "ef63b0d123a76daa",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "flowsynmaxi2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 1120,
        "wires": [
            [
                "b2e5015deb0e6dbb"
            ],
            []
        ]
    },
    {
        "id": "71d4794b07b6989a",
        "type": "json",
        "z": "ef63b0d123a76daa",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1030,
        "y": 1120,
        "wires": [
            [
                "0714fb46889200b9"
            ]
        ]
    },
    {
        "id": "b2e5015deb0e6dbb",
        "type": "switch",
        "z": "ef63b0d123a76daa",
        "name": "Check Command: REMOTEEN / SET",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "b41677142a4640e8"
            ]
        ]
    },
    {
        "id": "b41677142a4640e8",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar subDevice = msg.topic || \"\";\nvar command = msg.command || \"\";\nvar value = msg.value;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        subDevice: subDevice,\n        command: command,\n        value: value\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1120,
        "wires": [
            [
                "71d4794b07b6989a"
            ]
        ]
    },
    {
        "id": "5640eb18d22c645b",
        "type": "json",
        "z": "ef63b0d123a76daa",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "3e2b1814b5fedc09"
            ]
        ]
    },
    {
        "id": "0714fb46889200b9",
        "type": "mqtt out",
        "z": "ef63b0d123a76daa",
        "name": "",
        "topic": "subflow/flowsynmax2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1240,
        "y": 1120,
        "wires": []
    },
    {
        "id": "fee0fdc680de2b68",
        "type": "mqtt in",
        "z": "ef63b0d123a76daa",
        "name": "",
        "topic": "subflow/flowsynmax2/data",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1280,
        "wires": [
            [
                "5640eb18d22c645b"
            ]
        ]
    },
    {
        "id": "97837b7d30e60b4e",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "Return result from Serial port",
        "info": "",
        "x": 160,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4b9b31baaed0db78",
        "type": "function",
        "z": "ef63b0d123a76daa",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\");\nvar timestamp = msg.myepoch;\n\nvar responseMsg = {};\n\nresponseMsg = {\n    payload: {\n        payload: \"flowsynmaxi2\",\n        sentCommand: 'POLL',\n        settings: flowsynmaxi2.settings,\n        dataTempPress: flowsynmaxi2.dataTempPress,\n        dataRateValves: flowsynmaxi2.dataRateValves,\n        timestamp: timestamp\n    }\n};\n    \nreturn responseMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "56c38e9482ba038e",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowSynValveA\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 520,
        "wires": []
    },
    {
        "id": "17576aeb966e42b5",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"PumpBFlowRate\", \"command\":\"SET\", \"value\": 2.5}",
        "info": "",
        "x": 340,
        "y": 200,
        "wires": []
    },
    {
        "id": "448f94a7bd1005ef",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"BinaryPumpCFlowRate\", \"command\":\"SET\", \"value\": 2.5}",
        "info": "",
        "x": 360,
        "y": 240,
        "wires": []
    },
    {
        "id": "0b8660d4cd7dcc70",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"BinaryPumpDFlowRate\", \"command\":\"SET\", \"value\": 2.5}",
        "info": "",
        "x": 360,
        "y": 280,
        "wires": []
    },
    {
        "id": "03a5d4edb2b71667",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"Reactor1Temp\", \"command\":\"SET\", \"value\": 25}",
        "info": "",
        "x": 330,
        "y": 340,
        "wires": []
    },
    {
        "id": "e72af8b611560981",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"Reactor2Temp\", \"command\":\"SET\", \"value\": 26}",
        "info": "",
        "x": 330,
        "y": 380,
        "wires": []
    },
    {
        "id": "19edd52b9b43cb57",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"Reactor3Temp\", \"command\":\"SET\", \"value\": 27}",
        "info": "",
        "x": 330,
        "y": 420,
        "wires": []
    },
    {
        "id": "608cb1109f59db95",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"Reactor4Temp\", \"command\":\"SET\", \"value\": 28}",
        "info": "",
        "x": 330,
        "y": 460,
        "wires": []
    },
    {
        "id": "af4aab9a59ac7155",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowSynValveB\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 560,
        "wires": []
    },
    {
        "id": "f755cd924f48bc0c",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowBinaryValveC\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "c52e80c580c57a3c",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowBinaryValveD\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 640,
        "wires": []
    },
    {
        "id": "7d52ae309431a261",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowCWValve\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 330,
        "y": 700,
        "wires": []
    },
    {
        "id": "e44aedfcc34cc4ba",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowSynInjValveA\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 760,
        "wires": []
    },
    {
        "id": "7b67912a5ac77568",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowSynInjValveB\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 340,
        "y": 800,
        "wires": []
    },
    {
        "id": "03e6c1c7f895ba27",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowBinaryInjValveC\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 350,
        "y": 840,
        "wires": []
    },
    {
        "id": "66ee0b07b56d9e30",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"FlowBinaryInjValveD\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 350,
        "y": 880,
        "wires": []
    },
    {
        "id": "977decf31c6445cb",
        "type": "comment",
        "z": "ef63b0d123a76daa",
        "name": "{\"payload\":\"flowsynmaxi1\", \"topic\": \"Heater\", \"command\":\"SET\", \"value\": true}",
        "info": "",
        "x": 310,
        "y": 940,
        "wires": []
    },
    {
        "id": "3e2b1814b5fedc09",
        "type": "simpletime",
        "z": "ef63b0d123a76daa",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 550,
        "y": 1280,
        "wires": [
            [
                "4b9b31baaed0db78"
            ]
        ]
    },
    {
        "id": "a659a1dde18a78fd",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "Check topic for distribution",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PumpAFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PumpBFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpCFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpDFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor1Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor2Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor3Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor4Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowCWValve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heater",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 18,
        "x": 840,
        "y": 580,
        "wires": [
            [
                "d509917a514f6217"
            ],
            [
                "90514bb28a576c43"
            ],
            [
                "8eb769946bdab110"
            ],
            [
                "c0a61c92ee6f7d33"
            ],
            [
                "7e3ec68cf038bd35"
            ],
            [
                "59d3b5c729eacfcf"
            ],
            [
                "4d639e01107f981d"
            ],
            [
                "f19a77419a063783"
            ],
            [
                "15856c868b88289a"
            ],
            [
                "e93f493ea476249c"
            ],
            [
                "d157e407dc7d9d4e"
            ],
            [
                "dc4b30643a6eadcb"
            ],
            [
                "bb71a74f3c954cdf"
            ],
            [
                "048a9dbdb6f15a47"
            ],
            [
                "32027fc0b76f4b57"
            ],
            [
                "85b342c058962bbc"
            ],
            [
                "43d9bfff5af1afba"
            ],
            [
                "06d958263bd9540e"
            ]
        ]
    },
    {
        "id": "d509917a514f6217",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 140,
        "wires": [
            [
                "f00a3df07a43d7fa"
            ]
        ]
    },
    {
        "id": "f00a3df07a43d7fa",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 0 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setFlowRatePumpA",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 140,
        "wires": [
            [
                "16c02fd1a975ca82"
            ]
        ]
    },
    {
        "id": "16c02fd1a975ca82",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 140,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "15856c868b88289a",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 500,
        "wires": [
            [
                "e46591addddc9f45"
            ],
            [
                "b9e736ada0209289"
            ]
        ]
    },
    {
        "id": "e46591addddc9f45",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 500,
        "wires": [
            [
                "1f5025ddc7248c57"
            ]
        ]
    },
    {
        "id": "b9e736ada0209289",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 540,
        "wires": [
            [
                "ad1be83485f2d9de"
            ]
        ]
    },
    {
        "id": "1f5025ddc7248c57",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 500,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "ad1be83485f2d9de",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 540,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "18bca6363aea8424",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "cmdToSend",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 700,
        "wires": [
            [
                "c5c9a30fa232ce06"
            ]
        ]
    },
    {
        "id": "c5c9a30fa232ce06",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 700,
        "wires": [
            [
                "5979b1c9e48b19d6"
            ]
        ]
    },
    {
        "id": "5979b1c9e48b19d6",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3040,
        "y": 700,
        "wires": [
            [
                "1731ee58a10dca7c",
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "1731ee58a10dca7c",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3230,
        "y": 700,
        "wires": [
            [],
            [],
            [
                "f93efb1e88f9815a"
            ]
        ]
    },
    {
        "id": "94fb6dc79d426082",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "response",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3230,
        "y": 780,
        "wires": [
            [],
            [],
            [
                "85c996e0e9c192b2"
            ]
        ]
    },
    {
        "id": "673b6459d8e5751e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 780,
        "wires": [
            [
                "94fb6dc79d426082",
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "a684de3d98154a8c",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 780,
        "wires": [
            [
                "673b6459d8e5751e"
            ]
        ]
    },
    {
        "id": "f93efb1e88f9815a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 780,
        "wires": [
            [
                "a684de3d98154a8c"
            ]
        ]
    },
    {
        "id": "85c996e0e9c192b2",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cmdToSend",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 860,
        "wires": [
            [
                "d4e284ace434684e"
            ]
        ]
    },
    {
        "id": "d4e284ace434684e",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "toFlowSynMaxi2TCPCommand",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 2790,
        "y": 860,
        "wires": [
            [
                "cebfb9e98cf2a644"
            ]
        ]
    },
    {
        "id": "cebfb9e98cf2a644",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.response = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3040,
        "y": 860,
        "wires": [
            [
                "9f86ab9d06e188da"
            ]
        ]
    },
    {
        "id": "d25f4dabfb42b5b1",
        "type": "mqtt in",
        "z": "bc1076baf3559e95",
        "name": "",
        "topic": "subflow/flowsynmax2/cmnd",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "36cb170d62e0d457"
            ]
        ]
    },
    {
        "id": "36cb170d62e0d457",
        "type": "json",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "106fe2fbbfe56877"
            ]
        ]
    },
    {
        "id": "106fe2fbbfe56877",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload.subDevice",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PumpAFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PumpBFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpCFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BinaryPumpDFlowRate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor1Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor2Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor3Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reactor4Temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowCWValve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowSynInjValveB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FlowBinaryInjValveD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heater",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 19,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "9cf9c8db331c6bd3"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ],
            [
                "939293b561c978aa"
            ]
        ]
    },
    {
        "id": "9cf9c8db331c6bd3",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Convert Value",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp.subDevice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "a659a1dde18a78fd"
            ]
        ]
    },
    {
        "id": "939293b561c978aa",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp.subDevice",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 260,
        "wires": [
            [
                "a659a1dde18a78fd"
            ]
        ]
    },
    {
        "id": "90514bb28a576c43",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1590,
        "y": 180,
        "wires": [
            [
                "51c4b155c16f6a4a"
            ]
        ]
    },
    {
        "id": "51c4b155c16f6a4a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 1 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setFlowRatePumpB",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 180,
        "wires": [
            [
                "d200d8b89ea883f3"
            ]
        ]
    },
    {
        "id": "d200d8b89ea883f3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 180,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "e9e1f331704c5162",
        "type": "link in",
        "z": "bc1076baf3559e95",
        "name": "link in 1",
        "links": [
            "3b9ff44a6b27fcbc",
            "d207fbb4a65f7542"
        ],
        "x": 3425,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc87f58583c214c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 2 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setFlowRatePumpC",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 220,
        "wires": [
            [
                "9211d8444fdf5a06"
            ]
        ]
    },
    {
        "id": "6bc5630cf5fa6728",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*j 3 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "setValue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setFlowRatePumpD",
                "pt": "global",
                "to": "setValue",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 260,
        "wires": [
            [
                "68990e390edc9d1a"
            ]
        ]
    },
    {
        "id": "9211d8444fdf5a06",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 220,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "68990e390edc9d1a",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 260,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "8eb769946bdab110",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 220,
        "wires": [
            [
                "4fc87f58583c214c"
            ]
        ]
    },
    {
        "id": "c0a61c92ee6f7d33",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToMicroLitersPerMinute",
        "func": "var valStr = msg.payload;\nvar valFloat = parseFloat(valStr);\nvar result = valFloat * 1000;\nmsg.payload = result.toString(16);  // Value in HEX\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "6bc5630cf5fa6728"
            ]
        ]
    },
    {
        "id": "3b561bcb379322db",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 1 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setTempReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 320,
        "wires": [
            [
                "bfd740680db5df51"
            ]
        ]
    },
    {
        "id": "24f40de6add41f7d",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 2 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setTempReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 360,
        "wires": [
            [
                "4b9eabf8cc022014"
            ]
        ]
    },
    {
        "id": "a40abfcb34c4dbe6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 3 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setTempReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 400,
        "wires": [
            [
                "5ca8a2f96650a58e"
            ]
        ]
    },
    {
        "id": "b24ab6b5edd2a45f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Reactor 4 Set Temp",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setTempReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 440,
        "wires": [
            [
                "39e549305c4cf318"
            ]
        ]
    },
    {
        "id": "9a926ab00cf1bf1f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Set Temps",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*& @1 @2 @3 @4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@1",
                "fromt": "str",
                "to": "flowsynmaxi2.settings.setTempReactor1-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@2",
                "fromt": "str",
                "to": "flowsynmaxi2.settings.setTempReactor2-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@3",
                "fromt": "str",
                "to": "flowsynmaxi2.settings.setTempReactor3-hex",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@4",
                "fromt": "str",
                "to": "flowsynmaxi2.settings.setTempReactor4-hex",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 400,
        "wires": [
            [
                "7950e82a1c19201e"
            ]
        ]
    },
    {
        "id": "7950e82a1c19201e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 400,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "bfd740680db5df51",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor1-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 320,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "4b9eabf8cc022014",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor2-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 360,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "5ca8a2f96650a58e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor3-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 400,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "39e549305c4cf318",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToHex",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload;\nglobal.set(\"flowsynmaxi1.settings.setTempReactor4-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 440,
        "wires": [
            [
                "9a926ab00cf1bf1f"
            ]
        ]
    },
    {
        "id": "eb0612e620ac4af9",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 580,
        "wires": [
            [
                "008f1990e2609ce7"
            ]
        ]
    },
    {
        "id": "e93f493ea476249c",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 580,
        "wires": [
            [
                "eb0612e620ac4af9"
            ],
            [
                "35ebf0ba825dab7a"
            ]
        ]
    },
    {
        "id": "35ebf0ba825dab7a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 620,
        "wires": [
            [
                "b7207dc2e80ff5d5"
            ]
        ]
    },
    {
        "id": "008f1990e2609ce7",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 580,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "b7207dc2e80ff5d5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 620,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "42409cc4f2f37d37",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenC",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 660,
        "wires": [
            [
                "8e8fec2d3b189c1c"
            ]
        ]
    },
    {
        "id": "d157e407dc7d9d4e",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 660,
        "wires": [
            [
                "42409cc4f2f37d37"
            ],
            [
                "70a7f4889d280382"
            ]
        ]
    },
    {
        "id": "70a7f4889d280382",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenC",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 700,
        "wires": [
            [
                "aee078f2e1cd652c"
            ]
        ]
    },
    {
        "id": "e50de3b4eb4768f3",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 740,
        "wires": [
            [
                "acfe84c32d5c2ca4"
            ]
        ]
    },
    {
        "id": "dc4b30643a6eadcb",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 740,
        "wires": [
            [
                "e50de3b4eb4768f3"
            ],
            [
                "3e571ae0c7375828"
            ]
        ]
    },
    {
        "id": "3e571ae0c7375828",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 780,
        "wires": [
            [
                "c262fee6646430e2"
            ]
        ]
    },
    {
        "id": "b6c8e5a5cbaf8f89",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 8",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenCW",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 840,
        "wires": [
            [
                "ac0201c4d4d3c6a3"
            ]
        ]
    },
    {
        "id": "bb71a74f3c954cdf",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckCWValveSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1560,
        "y": 840,
        "wires": [
            [
                "b6c8e5a5cbaf8f89"
            ],
            [
                "0b3789096f796477"
            ]
        ]
    },
    {
        "id": "0b3789096f796477",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*e 9 \\r\\n",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setValveOpenCW",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 880,
        "wires": [
            [
                "69d8ef003732d9d1"
            ]
        ]
    },
    {
        "id": "76439ba9dc34e980",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenA",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 940,
        "wires": [
            [
                "05c56feec7baf02e"
            ]
        ]
    },
    {
        "id": "048a9dbdb6f15a47",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynInjValveASwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 940,
        "wires": [
            [
                "76439ba9dc34e980"
            ],
            [
                "876db8675329024f"
            ]
        ]
    },
    {
        "id": "876db8675329024f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenA",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 980,
        "wires": [
            [
                "f18edf56642f0e90"
            ]
        ]
    },
    {
        "id": "ee753b4c3a7e427c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenB",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1020,
        "wires": [
            [
                "be69bb79ef0f32d5"
            ]
        ]
    },
    {
        "id": "32027fc0b76f4b57",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckFlowSynInjValveBSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 1020,
        "wires": [
            [
                "ee753b4c3a7e427c"
            ],
            [
                "d47d0892ee488835"
            ]
        ]
    },
    {
        "id": "d47d0892ee488835",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 5",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenB",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1060,
        "wires": [
            [
                "db49c1964b345ed5"
            ]
        ]
    },
    {
        "id": "e6173d06e6a28825",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenC",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1100,
        "wires": [
            [
                "d97c471052328e22"
            ]
        ]
    },
    {
        "id": "85b342c058962bbc",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryInjValveCSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 1100,
        "wires": [
            [
                "e6173d06e6a28825"
            ],
            [
                "92b2832a908b519f"
            ]
        ]
    },
    {
        "id": "92b2832a908b519f",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenC",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1140,
        "wires": [
            [
                "88854cb2eafc705f"
            ]
        ]
    },
    {
        "id": "89d2da7c6e45575d",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenD",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1180,
        "wires": [
            [
                "d35a24f9af7505a7"
            ]
        ]
    },
    {
        "id": "43d9bfff5af1afba",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckBinaryInjValveDSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 1180,
        "wires": [
            [
                "89d2da7c6e45575d"
            ],
            [
                "69894063cf2bbb17"
            ]
        ]
    },
    {
        "id": "69894063cf2bbb17",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*A 7",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setInjValveOpenD",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1220,
        "wires": [
            [
                "d1d49b1fc96d3adc"
            ]
        ]
    },
    {
        "id": "a6d14d6d0e0da27a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setHeaterON",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1280,
        "wires": [
            [
                "2ff5c957ba4856e3"
            ]
        ]
    },
    {
        "id": "06d958263bd9540e",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "CheckHeaterSwitch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 1280,
        "wires": [
            [
                "a6d14d6d0e0da27a"
            ],
            [
                "5d05788c040d1667"
            ]
        ]
    },
    {
        "id": "5d05788c040d1667",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Create command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "*E 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.settings.setHeaterON",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 1320,
        "wires": [
            [
                "bbc07fa2746d0824"
            ]
        ]
    },
    {
        "id": "8e8fec2d3b189c1c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 660,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "aee078f2e1cd652c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 700,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "acfe84c32d5c2ca4",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 740,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "c262fee6646430e2",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 780,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "ac0201c4d4d3c6a3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 840,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "69d8ef003732d9d1",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 880,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "05c56feec7baf02e",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 940,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "f18edf56642f0e90",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 980,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "be69bb79ef0f32d5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1020,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "db49c1964b345ed5",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1060,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d97c471052328e22",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1100,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "88854cb2eafc705f",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1140,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d35a24f9af7505a7",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1180,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "d1d49b1fc96d3adc",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1220,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "2ff5c957ba4856e3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2200,
        "y": 1280,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "bbc07fa2746d0824",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2200,
        "y": 1320,
        "wires": [
            [
                "18bca6363aea8424"
            ]
        ]
    },
    {
        "id": "9f86ab9d06e188da",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Generate Stutus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "response",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3360,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "be058b0c9c4007a6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.pressureSystem",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureSystem",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1520,
        "wires": [
            [
                "9d827da57f55283c"
            ]
        ]
    },
    {
        "id": "e598e5b3cfbc1aa6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.pressureFlowSynA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureFlowSynA",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "6bd59c219ee80631",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.pressureFlowSynB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureFlowSynB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "429107892b4609b7",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.pressureBinaryC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureBinaryC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "c58c737cf0d9e1ec",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.pressureBinaryD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureBinaryD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "bd28e25cf23b069c",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.temperatureReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.temperatureReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "be8ca4f291cf5963",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.temperatureReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.temperatureReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "34d7e17cdc1105ee",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.temperatureReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.temperatureReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "4c7b76e658654e07",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.temperatureReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.temperatureReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "9d827da57f55283c",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "flowsynmaxi2.pressureSystemMax",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1490,
        "y": 1520,
        "wires": [
            [
                "f8088713c3fc46e2"
            ]
        ]
    },
    {
        "id": "f8088713c3fc46e2",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.dataTempPress.pressureAlarm",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "183def7ccb2dcbf3",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Extract Temp & Pressure",
        "func": "// < P Pa Pb Pc Pd T1 T2 T3 T4 >\nvar r = ' ';\n\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar systemPressure = output[1];\nvar flowSynAPressure = output[2];\nvar flowSynBPressure = output[3];\nvar flowBianryCPressure = output[4];\nvar flowBinaryDPressure = output[5];\nvar reactor1Temperature = output[6];\nvar reactor2Temperature = output[7];\nvar reactor3Temperature = output[8];\nvar reactor4Temperature = output[9];\n\nvar msg1 = { payload: parseFloat(systemPressure),      topic: \"System Pressure\"};\nvar msg2 = { payload: parseFloat(flowSynAPressure),    topic: \"Syn Flow A Pressure\"};\nvar msg3 = { payload: parseFloat(flowSynBPressure),    topic: \"Syn Flow B Pressure\"};\nvar msg4 = { payload: parseFloat(flowBianryCPressure), topic: \"Binary C Pressure\"};\nvar msg5 = { payload: parseFloat(flowBinaryDPressure), topic: \"Binary D Pressure\"};\nvar msg6 = { payload: parseFloat(reactor1Temperature), topic: \"Reactor 1 Temperature\"};\nvar msg7 = { payload: parseFloat(reactor2Temperature), topic: \"Reactor 2 Temperature\"};\nvar msg8 = { payload: parseFloat(reactor3Temperature), topic: \"Reactor 3 Temperature\"};\nvar msg9 = { payload: parseFloat(reactor4Temperature), topic: \"Reactor 4 Temperature\"};\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9]];",
        "outputs": 9,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1640,
        "wires": [
            [
                "be058b0c9c4007a6"
            ],
            [
                "e598e5b3cfbc1aa6"
            ],
            [
                "6bd59c219ee80631"
            ],
            [
                "429107892b4609b7"
            ],
            [
                "c58c737cf0d9e1ec"
            ],
            [
                "bd28e25cf23b069c"
            ],
            [
                "be8ca4f291cf5963"
            ],
            [
                "34d7e17cdc1105ee"
            ],
            [
                "4c7b76e658654e07"
            ]
        ]
    },
    {
        "id": "6712c5295a4abbac",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1600,
        "wires": [
            [
                "c778b786cb23ed60"
            ]
        ]
    },
    {
        "id": "bb2fac7ffc7d23ba",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1640,
        "wires": [
            [
                "183def7ccb2dcbf3"
            ]
        ]
    },
    {
        "id": "e0bc43ab7492de99",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "connect failed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c778b786cb23ed60",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 440,
        "y": 1640,
        "wires": [
            [
                "bb2fac7ffc7d23ba",
                "e0bc43ab7492de99"
            ]
        ]
    },
    {
        "id": "dd94318c446e2e7c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1600,
        "wires": [
            [
                "6712c5295a4abbac"
            ]
        ]
    },
    {
        "id": "06d6edcfb6f2e458",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerReadingsTempPress",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 0",
        "payloadType": "str",
        "x": 180,
        "y": 1560,
        "wires": [
            [
                "d125886b71b4234d"
            ]
        ]
    },
    {
        "id": "6983099e82650470",
        "type": "tcp request",
        "z": "bc1076baf3559e95",
        "name": "reqDataFromDevice",
        "server": "",
        "port": "",
        "out": "char",
        "ret": "buffer",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 480,
        "y": 2200,
        "wires": [
            [
                "d04bf05bf1552a63"
            ]
        ]
    },
    {
        "id": "ec858eccb625edae",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerReadingsValvesRatesChillers",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "*Q 1",
        "payloadType": "str",
        "x": 190,
        "y": 2160,
        "wires": [
            [
                "f3cddb2d71130cb0"
            ]
        ]
    },
    {
        "id": "d04bf05bf1552a63",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 2200,
        "wires": [
            [
                "7b6a099305579d0c"
            ]
        ]
    },
    {
        "id": "f3cddb2d71130cb0",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ConvertToBuffer",
        "func": "msg.payload = Buffer.from(msg.payload +\"\\r\\n\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 2160,
        "wires": [
            [
                "5b1a54a9eaa53af0"
            ]
        ]
    },
    {
        "id": "5b1a54a9eaa53af0",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "flowsynmaxi2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "flowsynmaxi2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 2160,
        "wires": [
            [
                "6983099e82650470"
            ]
        ]
    },
    {
        "id": "7b6a099305579d0c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "ExtractValvesFlows",
        "func": "// * Vs Vi F1 F2 F3 F4 C *\nvar r = ' ';\n\nvar json = {payload: msg.payload};\nvar output = json.payload.split(' ');\nvar Vs = output[1];\nvar Vi = output[2];\nvar F1 = output[3];\nvar F2 = output[4];\nvar F3 = output[5];\nvar F4 = output[6];\nvar C  = output[7];\n\nvar msg1 = {};\nif ((Vs & 0x01) == 0x01) {\n    msg1 = {payload: true}    \n} else {\n    msg1 = {payload: false} \n}\nvar msg2 = {};\nif ((Vs & 0x02) == 0x02) {\n    msg2 = {payload: true}    \n} else {\n    msg2 = {payload: false} \n}\nvar msg3 = {};\nif ((Vs & 0x04) == 0x04) {\n    msg3 = {payload: true}    \n} else {\n    msg3 = {payload: false} \n}\nvar msg4 = {};\nif ((Vs & 0x08) == 0x08) {\n    msg4 = {payload: true}    \n} else {\n    msg4 = {payload: false} \n}\nvar msg5 = {};\nif ((Vs & 0x10) == 0x10) {\n    msg5 = {payload: true}    \n} else {\n    msg5 = {payload: false} \n}\nvar msg6 = {};\nif ((Vi & 0x01) == 0x01) {\n    msg6 = {payload: true}    \n} else {\n    msg6 = {payload: false} \n}\nvar msg7 = {};\nif ((Vi & 0x02) == 0x02) {\n    msg7 = {payload: true}    \n} else {\n    msg7 = {payload: false} \n}\nvar msg8 = {};\nif ((Vi & 0x04) == 0x04) {\n    msg8 = {payload: true}    \n} else {\n    msg8 = {payload: false} \n}\nvar msg9 = {};\nif ((Vi & 0x08) == 0x08) {\n    msg9 = {payload: true}    \n} else {\n    msg9 = {payload: false} \n}\nvar msg10 = {payload: parseFloat(F1), topic: \"Pump A Flow Rate\"};\nvar msg11 = {payload: parseFloat(F2), topic: \"Pump B Flow Rate\"};\nvar msg12 = {payload: parseFloat(F3), topic: \"Pump C Flow Rate\"};\nvar msg13 = {payload: parseFloat(F4), topic: \"Pump D Flow Rate\"};\nvar msg14 = {};\nif (C == '1') {\n    msg14 = {payload: true}    \n} else {\n    msg14 = {payload: false} \n}\n\nreturn [[msg1], [msg2], [msg3], [msg4], [msg5],\n       [msg6], [msg7], [msg8], [msg9], [msg10],\n       [msg11], [msg12], [msg13], [msg14]];",
        "outputs": 14,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2200,
        "wires": [
            [
                "54d163fa25d30758"
            ],
            [
                "46fbf74f6d0a4d58"
            ],
            [
                "119a15f4281f386b"
            ],
            [
                "e6ea0f428a7212ac"
            ],
            [
                "7eb333b77173e0cb"
            ],
            [
                "1deb412d7ad763b5"
            ],
            [
                "b00b8f99d1021bb6"
            ],
            [
                "b175945d78ece3fb"
            ],
            [
                "be70597374b39bd6"
            ],
            [
                "0efe25b60d01f7b2"
            ],
            [
                "8284f21d94d6e971"
            ],
            [
                "131ba306a43f6d7a"
            ],
            [
                "e8a35164cf76fd74"
            ],
            [
                "0f99fb6864016ce9"
            ]
        ],
        "outputLabels": [
            "Flow Syn Valve A",
            "Flow Syn Valve B",
            "Binary Valve C",
            "Binary Valve D",
            "C/W Valve",
            "Flow Syn Inj Valve A",
            "Flow Syn Inj Valve B",
            "Binary Inj Valve C",
            "Binary Inj Valve D",
            "Pump A Flow Rate",
            "Pump B Flow Rate",
            "Pump C Flow Rate",
            "Pump D Flow Rate",
            "Chiller Detected"
        ]
    },
    {
        "id": "54d163fa25d30758",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "46fbf74f6d0a4d58",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "119a15f4281f386b",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e6ea0f428a7212ac",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb333b77173e0cb",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveOpenCW",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveOpenCW",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "0efe25b60d01f7b2",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.flowRatePumpA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.flowRatePumpA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "8284f21d94d6e971",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.flowRatePumpB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.flowRatePumpB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "131ba306a43f6d7a",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.flowRatePumpC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.flowRatePumpC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a35164cf76fd74",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.flowRatePumpD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.flowRatePumpD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "1deb412d7ad763b5",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveInjOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveInjOpenA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "b00b8f99d1021bb6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveInjOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveInjOpenB",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "b175945d78ece3fb",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveInjOpenC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveInjOpenC",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "be70597374b39bd6",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.valveInjOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.valveInjOpenD",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "0f99fb6864016ce9",
        "type": "change",
        "z": "bc1076baf3559e95",
        "name": "Store Result",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi2.chillerDetected",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.dataRateValves.chillerDetected",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "1bac10e36db908aa",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "Status lights of valves is not needed anymore becuase the Set valves option gets updated if a chnage is made manually on the reactor",
        "info": "",
        "x": 1570,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f8be3d5e81ced4bc",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "INIT: Variables at startup",
        "info": "",
        "x": 170,
        "y": 20,
        "wires": []
    },
    {
        "id": "1e0b7c3200055b7e",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "cf72d6d263c5b06c"
            ]
        ]
    },
    {
        "id": "cf72d6d263c5b06c",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Set Global Init values (FlowSynMaxi2)",
        "func": "var initVariable00 = 0.0;\nvar initVariable0 = 0;\nvar initBooleanFalse = false;\n\nglobal.set(\"flowsynmaxi2.settings.setFlowRatePumpA\", initVariable00);\nglobal.set(\"flowsynmaxi2.settings.setFlowRatePumpB\", initVariable00);\nglobal.set(\"flowsynmaxi2.settings.setFlowRatePumpC\", initVariable00);\nglobal.set(\"flowsynmaxi2.settings.setFlowRatePumpD\", initVariable00);\n\nglobal.set('flowsynmaxi2.settings.setTempReactor1', initVariable00);\nglobal.set('flowsynmaxi2.settings.setTempReactor2', initVariable00);\nglobal.set('flowsynmaxi2.settings.setTempReactor3', initVariable00);\nglobal.set('flowsynmaxi2.settings.setTempReactor4', initVariable00);\n\nglobal.set(\"flowsynmaxi2.settings.setValveOpenA\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setValveOpenB\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setValveOpenC\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setValveOpenD\", initBooleanFalse);\n\nglobal.set(\"flowsynmaxi2.settings.setValveOpenCW\", initBooleanFalse);\n\nglobal.set('flowsynmaxi2.dataTempPress.pressureSystem', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.pressureFlowSynA', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.pressureFlowSynB', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.pressureBinaryC', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.pressureBinaryD', initVariable00);\n\nglobal.set('flowsynmaxi2.dataTempPress.temperatureReactor1', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.temperatureReactor2', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.temperatureReactor3', initVariable00);\nglobal.set('flowsynmaxi2.dataTempPress.temperatureReactor4', initVariable00);\n\nglobal.set('flowsynmaxi2.dataRateValves.valveOpenA', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveOpenB', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveOpenC', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveOpenD', initBooleanFalse);\n\nglobal.set('flowsynmaxi2.dataRateValves.valveOpenCW', initBooleanFalse);\n\nglobal.set(\"flowsynmaxi2.settings.setInjValveOpenA\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setInjValveOpenB\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setInjValveOpenC\", initBooleanFalse);\nglobal.set(\"flowsynmaxi2.settings.setInjValveOpenD\", initBooleanFalse);\n\nglobal.set(\"flowsynmaxi2.settings.setHeaterON\", initBooleanFalse);\n\nglobal.set('flowsynmaxi2.dataRateValves.valveInjOpenA', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveInjOpenB', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveInjOpenC', initBooleanFalse);\nglobal.set('flowsynmaxi2.dataRateValves.valveInjOpenD', initBooleanFalse);\n\nglobal.set('flowsynmaxi2.dataRateValves.flowRatePumpA', initVariable00);\nglobal.set('flowsynmaxi2.dataRateValves.flowRatePumpB', initVariable00);\nglobal.set('flowsynmaxi2.dataRateValves.flowRatePumpC', initVariable00);\nglobal.set('flowsynmaxi2.dataRateValves.flowRatePumpD', initVariable00);\n\nglobal.set('flowsynmaxi2.dataRateValves.chillerDetected', initBooleanFalse);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d125886b71b4234d",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "inUse?",
        "property": "flowsynmaxi2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1560,
        "wires": [
            [
                "dd94318c446e2e7c"
            ]
        ]
    },
    {
        "id": "7e3ec68cf038bd35",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 320,
        "wires": [
            [
                "3b561bcb379322db"
            ]
        ]
    },
    {
        "id": "59d3b5c729eacfcf",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 360,
        "wires": [
            [
                "24f40de6add41f7d"
            ]
        ]
    },
    {
        "id": "4d639e01107f981d",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 400,
        "wires": [
            [
                "a40abfcb34c4dbe6"
            ]
        ]
    },
    {
        "id": "f19a77419a063783",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "toFloat",
        "func": "var valueString = msg.payload || \"0\";\nvar valueFloat = parseFloat(valueString);\n\nmsg.payload = valueFloat;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 440,
        "wires": [
            [
                "b24ab6b5edd2a45f"
            ]
        ]
    },
    {
        "id": "d207fbb4a65f7542",
        "type": "link out",
        "z": "bc1076baf3559e95",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "e9e1f331704c5162"
        ],
        "x": 815,
        "y": 2660,
        "wires": []
    },
    {
        "id": "305c7a1a6b37f12e",
        "type": "inject",
        "z": "bc1076baf3559e95",
        "name": "TriggerFlowSynMaxi1Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2700,
        "wires": [
            [
                "3e0b50a7515b1337"
            ]
        ]
    },
    {
        "id": "3e0b50a7515b1337",
        "type": "switch",
        "z": "bc1076baf3559e95",
        "name": "inUse?",
        "property": "flowsynmaxi2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 2700,
        "wires": [
            [
                "dc37f87f9db28957"
            ]
        ]
    },
    {
        "id": "26447723398dbb0a",
        "type": "comment",
        "z": "bc1076baf3559e95",
        "name": "Periodic Read Readings",
        "info": "",
        "x": 150,
        "y": 2660,
        "wires": []
    },
    {
        "id": "dc37f87f9db28957",
        "type": "function",
        "z": "bc1076baf3559e95",
        "name": "Build result package",
        "func": "var flowsynmaxi2 = global.get(\"flowsynmaxi2\");\nvar newMsg = {};\nvar payloadContent = {};\n\npayloadContent = {\n    settings: flowsynmaxi2.settings,\n    dataTempPress: flowsynmaxi2.dataTempPress,\n    dataRateValves: flowsynmaxi2.dataRateValves\n}\n\nnewMsg = {\n    payload: payloadContent\n}\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2700,
        "wires": [
            [
                "7c72c44e611ff792",
                "d207fbb4a65f7542"
            ]
        ]
    },
    {
        "id": "7c72c44e611ff792",
        "type": "json",
        "z": "bc1076baf3559e95",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 850,
        "y": 2700,
        "wires": [
            [
                "e33baa909ff20958"
            ]
        ]
    },
    {
        "id": "e33baa909ff20958",
        "type": "mqtt out",
        "z": "bc1076baf3559e95",
        "name": "",
        "topic": "subflow/flowsynmax2/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1050,
        "y": 2700,
        "wires": []
    },
    {
        "id": "4af4d2e17d39a262",
        "type": "mqtt in",
        "z": "fadba47737eca3c5",
        "name": "",
        "topic": "subflow/reactIR702L1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "382b4b8f7cd0bce4"
            ]
        ]
    },
    {
        "id": "3d361ceb3f893235",
        "type": "mqtt out",
        "z": "fadba47737eca3c5",
        "name": "",
        "topic": "subflow/reactIR702L1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "9c0d8a74d86339c8",
        "type": "function",
        "z": "fadba47737eca3c5",
        "name": "Set InUse Flag",
        "func": "var reactIR702L1 = global.get(\"reactIR702L1\") || {};\n\nreactIR702L1.inUse = true;\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nmsg.payload = reactIR702L1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "3417a603ca42533b",
        "type": "inject",
        "z": "fadba47737eca3c5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 90,
        "y": 20,
        "wires": [
            [
                "9c0d8a74d86339c8"
            ]
        ]
    },
    {
        "id": "382b4b8f7cd0bce4",
        "type": "json",
        "z": "fadba47737eca3c5",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 710,
        "y": 140,
        "wires": [
            [
                "6098ac14dfb7e66f"
            ]
        ]
    },
    {
        "id": "f2636ec4404f3497",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "OUTPUT",
        "info": "",
        "x": 460,
        "y": 60,
        "wires": []
    },
    {
        "id": "dcc9123075ca095c",
        "type": "comment",
        "z": "fadba47737eca3c5",
        "name": "{\"payload\": {\"deviceName\": \"reactIR702L1\", \"deviceType\": \"IR\", settings:{}, state: {\"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "6098ac14dfb7e66f",
        "type": "switch",
        "z": "fadba47737eca3c5",
        "name": "Array / otherwise",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c2be66596af129f2",
        "type": "OpcUa-Client2-Read",
        "z": "fc608604922b7267",
        "inputs": 1,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "attributeId": "Value",
        "nodeId": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "bed561094dd78eb7"
            ],
            []
        ]
    },
    {
        "id": "ffca4f23913f62d6",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Init reactIR702L1 (Temp., State & Clear InUse)",
        "func": "var reactIR702L1 = {\n    deviceName: 'reactIR702L1',\n    deviceType: 'IR',\n\n    inUse : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n        },\n        state: {\n            data: []\n        },\n        timestamp: ''\n    }\n};\n\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nmsg.payload = reactIR702L1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "314222b24e93604d",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "dfb0e16e6899e9d3",
        "type": "inject",
        "z": "fc608604922b7267",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "ffca4f23913f62d6"
            ]
        ]
    },
    {
        "id": "f232b840397fa915",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "554fe8b91ceea7f6",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "Periodic Read RAW Values",
        "info": "",
        "x": 150,
        "y": 380,
        "wires": []
    },
    {
        "id": "b47de409faf4c396",
        "type": "inject",
        "z": "fc608604922b7267",
        "name": "TriggerReactIR702L1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "af34727910bcfb83"
            ]
        ]
    },
    {
        "id": "af34727910bcfb83",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "inUse?",
        "property": "reactIR702L1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "29a7223a71b5f9b4"
            ]
        ]
    },
    {
        "id": "7623cc801b2754ba",
        "type": "mqtt in",
        "z": "fc608604922b7267",
        "name": "",
        "topic": "subflow/reactIR702L1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "eb3680040fb1bbbe"
            ]
        ]
    },
    {
        "id": "d05e77efd684aa55",
        "type": "mqtt out",
        "z": "fc608604922b7267",
        "name": "",
        "topic": "subflow/reactIR702L1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1830,
        "y": 300,
        "wires": []
    },
    {
        "id": "1bda8f923f4efebe",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Read RAW data [ns=2;s=Local.iCIR.Probe1.SpectraRaw]",
        "func": "var newMsg = {};\n\nnewMsg.payload = \"ns=2;s=Local.iCIR.Probe1.SpectraRaw\";\nnewMsg.topic = \"ns=2;s=Local.iCIR.Probe1.SpectraRaw\";\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 180,
        "wires": [
            [
                "c2be66596af129f2"
            ]
        ]
    },
    {
        "id": "eb3680040fb1bbbe",
        "type": "switch",
        "z": "fc608604922b7267",
        "name": "READ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "1bda8f923f4efebe"
            ],
            []
        ]
    },
    {
        "id": "a655c9741f7b20e2",
        "type": "OpcUa-Client2-Read",
        "z": "fc608604922b7267",
        "inputs": 1,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "attributeId": "Value",
        "nodeId": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "x": 1090,
        "y": 420,
        "wires": [
            [
                "bed561094dd78eb7"
            ],
            []
        ]
    },
    {
        "id": "29a7223a71b5f9b4",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Read RAW data [ns=2;s=Local.iCIR.Probe1.SpectraRaw]",
        "func": "var newMsg = {};\n\nnewMsg.payload = \"ns=2;s=Local.iCIR.Probe1.SpectraRaw\";\nnewMsg.topic = \"ns=2;s=Local.iCIR.Probe1.SpectraRaw\";\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "a655c9741f7b20e2"
            ]
        ]
    },
    {
        "id": "e587e3195d5f29b4",
        "type": "json",
        "z": "fc608604922b7267",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1770,
        "y": 260,
        "wires": [
            [
                "d05e77efd684aa55"
            ]
        ]
    },
    {
        "id": "abbc4709f6a7d7ab",
        "type": "function",
        "z": "fc608604922b7267",
        "name": "Convert JSON Object -> Array",
        "func": "var resultObject = msg.payload;\nvar timestamp = msg.myepoch;\n\nvar reactIR702L1 = global.get(\"reactIR702L1\") || {};\n\nvar newMsg = {};\n\nconst resultArray = Object.values(resultObject);\n\nreactIR702L1.tele.state.data = resultArray;\nreactIR702L1.tele.timestamp = timestamp;\n\nnewMsg = {\n    payload: {\n        deviceName: reactIR702L1.deviceName,\n        deviceType: reactIR702L1.deviceType,\n        settings: {},\n        state: {\n            data: resultArray\n        },\n        timestamp: timestamp\n    }\n}\n\nglobal.set(\"reactIR702L1\", reactIR702L1);\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 180,
        "wires": [
            [
                "e587e3195d5f29b4"
            ]
        ]
    },
    {
        "id": "f3ecbb4dc9efede2",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "OUTPUT",
        "info": "",
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "bed561094dd78eb7",
        "type": "simpletime",
        "z": "fc608604922b7267",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "abbc4709f6a7d7ab"
            ]
        ]
    },
    {
        "id": "2b6231fcef4f5e26",
        "type": "comment",
        "z": "fc608604922b7267",
        "name": "{\"payload\": {\"deviceName\": \"reactIR702L1\", \"deviceType\": \"IR\", settings:{}, state: {\"data\":[-0.046,-0.3917, ..., -0.8244,-0.7822]),\"timestamp\":\"1704889482003\"}}",
        "info": "",
        "x": 1160,
        "y": 120,
        "wires": []
    },
    {
        "id": "9da3c186fb1c2f43",
        "type": "inject",
        "z": "17061720ba0331b7",
        "name": "TriggerHotChip2TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "5230384dcf385667"
            ]
        ]
    },
    {
        "id": "dca8abbcec8c7008",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 800,
        "wires": [
            [
                "cafd6ef609e09e1e"
            ]
        ]
    },
    {
        "id": "028aa30d829799b8",
        "type": "tcp request",
        "z": "17061720ba0331b7",
        "name": "HotChip2TCPIPReq",
        "server": "192.168.1.214",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 640,
        "y": 880,
        "wires": [
            [
                "3e24aa1e823b2a06"
            ]
        ]
    },
    {
        "id": "cafd6ef609e09e1e",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "028aa30d829799b8"
            ]
        ]
    },
    {
        "id": "ec5fdcd5f369d69d",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Init HotChip2 (Temp., State & InUse)",
        "func": "var hotchip2 = {\n    deviceName: 'hotchip2',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotchip2\", hotchip2);\n\nmsg.payload = hotchip2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2c2cc516c08b36",
        "type": "inject",
        "z": "17061720ba0331b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "ec5fdcd5f369d69d"
            ]
        ]
    },
    {
        "id": "cceead96cb7ec02b",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "a395c2413cefc1a6",
        "type": "mqtt in",
        "z": "17061720ba0331b7",
        "name": "",
        "topic": "subflow/hotchip2/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "fe73c50f908c2262"
            ]
        ]
    },
    {
        "id": "edf3dc8ee89c058a",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "805419d0239b14f5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotchip2.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "3055e667257cf31b",
        "type": "tcp request",
        "z": "17061720ba0331b7",
        "name": "HotChip2TCPIPCommand",
        "server": "192.168.1.214",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "810d184ebc13193a"
            ]
        ]
    },
    {
        "id": "9e6d23b85e367ba6",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "3055e667257cf31b"
            ]
        ]
    },
    {
        "id": "810d184ebc13193a",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "be5d1d5e6be6aa30",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "9e6d23b85e367ba6",
                "eb1555eb5bab060e"
            ]
        ]
    },
    {
        "id": "4cbf4adeac8e5322",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "9e6d23b85e367ba6",
                "fad63a8d2a608c79"
            ]
        ]
    },
    {
        "id": "135b8b59fd589dd6",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "4cbf4adeac8e5322"
            ],
            [
                "be5d1d5e6be6aa30"
            ],
            [
                "dca8abbcec8c7008",
                "0ecb2499b1b9a3f2"
            ],
            [
                "805419d0239b14f5",
                "0f5f1de8686b591d",
                "17576dbd73544cd5"
            ]
        ]
    },
    {
        "id": "5230384dcf385667",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "inUse?",
        "property": "hotchip2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "dca8abbcec8c7008"
            ]
        ]
    },
    {
        "id": "138c4ba58c6fa5af",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "401d60722a03b559",
        "type": "mqtt out",
        "z": "17061720ba0331b7",
        "name": "",
        "topic": "subflow/hotchip2/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "3e24aa1e823b2a06",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 880,
        "wires": [
            [
                "d8a962a03f968368"
            ]
        ]
    },
    {
        "id": "0ae694a3e26312b7",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "96455dc9a24e3124",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "fe73c50f908c2262",
        "type": "json",
        "z": "17061720ba0331b7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "ab62f7d4afdd50f9"
            ]
        ]
    },
    {
        "id": "ab62f7d4afdd50f9",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "8caffbf7f1a0ce64",
                "eb1555eb5bab060e"
            ],
            [
                "04db0f06540a8c06"
            ]
        ]
    },
    {
        "id": "8caffbf7f1a0ce64",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "b4d5c4a00b43a754",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "9e6d23b85e367ba6"
            ]
        ]
    },
    {
        "id": "9b4c7829c3af9cdb",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "a4e957901767fd8b",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{\"payload\":\"hotchip2\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "393408e9b51ddf9f",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "c80a470de7e0ad58",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{\"payload\":\"hotchip2\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "4441c8147f286566",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "12964da3946ae83e",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip2 = global.get(\"hotchip2\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip2.tele.cmnd = 'POLL';\nhotchip2.tele.state.temp = temperature;\nhotchip2.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip2.deviceName,\n        deviceType: hotchip2.deviceType,\n        cmnd: hotchip2.tele.cmnd,\n        settings: {\n            temp: hotchip2.tele.settings.temp\n        },\n        state: {\n            temp: hotchip2.tele.state.temp,\n            state: hotchip2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotchip2\", hotchip2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip2.tele.settings.temp + ' [Temp. Read: ' + hotchip2.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "a620620b25aa5c90"
            ],
            []
        ]
    },
    {
        "id": "a620620b25aa5c90",
        "type": "json",
        "z": "17061720ba0331b7",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "401d60722a03b559"
            ]
        ]
    },
    {
        "id": "e1dc4da98ed1ac1f",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "c61a18f0e44c6b33",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "bfa3f5f5c56bc672",
        "type": "switch",
        "z": "17061720ba0331b7",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "4a58499a6d55a2f0"
            ],
            [
                "a04733dcf3cbbee5"
            ]
        ]
    },
    {
        "id": "4a58499a6d55a2f0",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a04733dcf3cbbee5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip2.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fad63a8d2a608c79",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "eb1555eb5bab060e",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0ecb2499b1b9a3f2",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0f5f1de8686b591d",
        "type": "function",
        "z": "17061720ba0331b7",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "17576dbd73544cd5",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "bfa3f5f5c56bc672"
            ]
        ]
    },
    {
        "id": "04db0f06540a8c06",
        "type": "change",
        "z": "17061720ba0331b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "bfa3f5f5c56bc672",
                "b4d5c4a00b43a754"
            ]
        ]
    },
    {
        "id": "d8a962a03f968368",
        "type": "simpletime",
        "z": "17061720ba0331b7",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 850,
        "y": 920,
        "wires": [
            [
                "12964da3946ae83e"
            ]
        ]
    },
    {
        "id": "75b66a97dae27377",
        "type": "comment",
        "z": "17061720ba0331b7",
        "name": "{\"payload\": {\"deviceName\":\"hotchip2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "bbe24a9d57c092dc",
        "type": "inject",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "3cd5a8d122c65283"
            ]
        ]
    },
    {
        "id": "02dd201741347e10",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "3cd5a8d122c65283",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Set InUse Flag",
        "func": "var hotchip2 = global.get(\"hotchip2\") || {};\n\nhotchip2.inUse = true;\n\nglobal.set(\"hotchip2\", hotchip2);\n\nmsg.payload = hotchip2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba062fea9355dbf",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "c57879fdf522a40e",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{\"payload\":\"hotchip2\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "4a49f4da66d0fd89",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ef16427ae4dcdcc",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "abd8c202aa7d9ff5",
        "type": "switch",
        "z": "9dfeb25ce4f7592b",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "5ef1387b46536e18"
            ],
            []
        ]
    },
    {
        "id": "384ff75c0dc09486",
        "type": "json",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "2852ca90bd14310b"
            ]
        ]
    },
    {
        "id": "5ef1387b46536e18",
        "type": "switch",
        "z": "9dfeb25ce4f7592b",
        "name": "Check Command: REMOTEEN / SET",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "f1f7d8d6ecf18b6a",
                "b91b2c1bbae07560"
            ],
            [
                "bc0245b353d52219",
                "27cce9e4252346fe"
            ]
        ]
    },
    {
        "id": "bc0245b353d52219",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar temperatureSet = msg.temperature || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "384ff75c0dc09486"
            ]
        ]
    },
    {
        "id": "76c28278e87aede7",
        "type": "json",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "ae68d5caf7717793"
            ]
        ]
    },
    {
        "id": "2852ca90bd14310b",
        "type": "mqtt out",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "topic": "subflow/hotchip2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "b008c84473462c2e",
        "type": "mqtt in",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "topic": "subflow/hotchip2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "76c28278e87aede7"
            ]
        ]
    },
    {
        "id": "27cce9e4252346fe",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Status string & Set Global variable",
        "func": "var hotchip2 = global.get(\"hotchip2\");\n\nvar command = msg.command || \"\";\nvar setTemperature = msg.temperature || 0.0;\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotchip2.tele.state.temp + ')]';\n\nhotchip2.tele.settings.temp = setTemperature;\nglobal.set(\"hotchip2\", hotchip2);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6a5e5dc2a92aa2b7",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{\"payload\":\"hotchip2\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "1d94edd96a9cfe02",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "f1f7d8d6ecf18b6a",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "384ff75c0dc09486"
            ]
        ]
    },
    {
        "id": "b91b2c1bbae07560",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Status string",
        "func": "var command = msg.command || \"\";\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "02d0590d63b41a7c",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "7eb1ea9d3b61c8f1",
        "type": "function",
        "z": "9dfeb25ce4f7592b",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip2 = global.get(\"hotchip2\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip2.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip2.deviceName,\n        deviceType: hotchip2.deviceType,\n        cmnd: hotchip2.tele.cmnd,\n        settings: {\n            temp: hotchip2.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotchip2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotchip2\", hotchip2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip2.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ae68d5caf7717793",
        "type": "simpletime",
        "z": "9dfeb25ce4f7592b",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "7eb1ea9d3b61c8f1"
            ]
        ]
    },
    {
        "id": "e4067ee07c411ad8",
        "type": "comment",
        "z": "9dfeb25ce4f7592b",
        "name": "{\"payload\": {\"deviceName\":\"hotchip2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "f84ff2e52af68dd9",
        "type": "inject",
        "z": "39878a8b7ca6b377",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "e38003923033293e"
            ]
        ]
    },
    {
        "id": "ddb5681e3b359622",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "e38003923033293e",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Set InUse Flag",
        "func": "var hotchip1 = global.get(\"hotchip1\") || {};\n\nhotchip1.inUse = true;\n\nglobal.set(\"hotchip1\", hotchip1);\n\nmsg.payload = hotchip1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "71bd888717c5a66d",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "09a39c321093f3f2",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{\"payload\":\"hotchip1\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "cb443e561027166c",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "88d4863465ebe4df",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "0ac0700d6f1a2850",
        "type": "switch",
        "z": "39878a8b7ca6b377",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotchip1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "171beb0ef6752731"
            ],
            []
        ]
    },
    {
        "id": "fbe707e3de56aa41",
        "type": "json",
        "z": "39878a8b7ca6b377",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "d6ad750996cc9f75"
            ]
        ]
    },
    {
        "id": "171beb0ef6752731",
        "type": "switch",
        "z": "39878a8b7ca6b377",
        "name": "Check Command: REMOTEEN / SET",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "55a20a7ebe32da7d",
                "f21fa7687ded114e"
            ],
            [
                "abdfc62e3ac3f1a6",
                "c10453785d7371ca"
            ]
        ]
    },
    {
        "id": "abdfc62e3ac3f1a6",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar temperatureSet = msg.temperature || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "fbe707e3de56aa41"
            ]
        ]
    },
    {
        "id": "c285fc3c65487a8f",
        "type": "json",
        "z": "39878a8b7ca6b377",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "ca801faaa88db028"
            ]
        ]
    },
    {
        "id": "d6ad750996cc9f75",
        "type": "mqtt out",
        "z": "39878a8b7ca6b377",
        "name": "",
        "topic": "subflow/hotchip1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "dbe9cafb550fe75e",
        "type": "mqtt in",
        "z": "39878a8b7ca6b377",
        "name": "",
        "topic": "subflow/hotchip1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "c285fc3c65487a8f"
            ]
        ]
    },
    {
        "id": "c10453785d7371ca",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Status string & Set Global variable",
        "func": "var hotchip1 = global.get(\"hotchip1\");\n\nvar command = msg.command || \"\";\nvar setTemperature = msg.temperature || 0.0;\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotchip1.tele.state.temp + ')]';\n\nhotchip1.tele.settings.temp = setTemperature;\nglobal.set(\"hotchip1\", hotchip1);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4726ccdf8856af95",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{\"payload\":\"hotchip1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "9db35f754462080b",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "55a20a7ebe32da7d",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "fbe707e3de56aa41"
            ]
        ]
    },
    {
        "id": "f21fa7687ded114e",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Status string",
        "func": "var command = msg.command || \"\";\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d29a9f4f6063fcd7",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "732bc28c498bd671",
        "type": "function",
        "z": "39878a8b7ca6b377",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip1 = global.get(\"hotchip1\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip1.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip1.deviceName,\n        deviceType: hotchip1.deviceType,\n        cmnd: hotchip1.tele.cmnd,\n        settings: {\n            temp: hotchip1.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotchip1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotchip1\", hotchip1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip1.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ca801faaa88db028",
        "type": "simpletime",
        "z": "39878a8b7ca6b377",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "732bc28c498bd671"
            ]
        ]
    },
    {
        "id": "8958939e977cec21",
        "type": "comment",
        "z": "39878a8b7ca6b377",
        "name": "{\"payload\": {\"deviceName\":\"hotchip1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "de01e19d86d2da8f",
        "type": "inject",
        "z": "dcba5a408b90db4f",
        "name": "TriggerHotChip1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "f2d4cd16e91cc15c"
            ]
        ]
    },
    {
        "id": "917ffc7959255bf7",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 800,
        "wires": [
            [
                "f4a806380b8d733a"
            ]
        ]
    },
    {
        "id": "3c8d9d45fb51adba",
        "type": "tcp request",
        "z": "dcba5a408b90db4f",
        "name": "HotChip1TCPIPReq",
        "server": "192.168.1.211",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 640,
        "y": 880,
        "wires": [
            [
                "dba7fd01d5ddc1d8"
            ]
        ]
    },
    {
        "id": "f4a806380b8d733a",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "3c8d9d45fb51adba"
            ]
        ]
    },
    {
        "id": "8104e9c1a3162e9a",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Init HotChip1 (Temp., State & InUse)",
        "func": "var hotchip1 = {\n    deviceName: 'hotchip1',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotchip1\", hotchip1);\n\nmsg.payload = hotchip1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "242c4357e6c8db87",
        "type": "inject",
        "z": "dcba5a408b90db4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "8104e9c1a3162e9a"
            ]
        ]
    },
    {
        "id": "6e81a66ddde75a15",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "c04e3382240a2633",
        "type": "mqtt in",
        "z": "dcba5a408b90db4f",
        "name": "",
        "topic": "subflow/hotchip1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "ed298fbe0fea6459"
            ]
        ]
    },
    {
        "id": "7252b476732cb991",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "3a930747071ced7f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotchip1.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "786250deaf848d37",
        "type": "tcp request",
        "z": "dcba5a408b90db4f",
        "name": "HotChip1TCPIPCommand",
        "server": "192.168.1.211",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "28c74b19d1cc23ea"
            ]
        ]
    },
    {
        "id": "3846a3c9beccbf46",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotchip1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotchip1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "786250deaf848d37"
            ]
        ]
    },
    {
        "id": "28c74b19d1cc23ea",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e1e8451629e12c95",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "3846a3c9beccbf46",
                "cb7b6df64ec26f35"
            ]
        ]
    },
    {
        "id": "424dd5b139a4b24f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "3846a3c9beccbf46",
                "d6d3f5c2c913d8e0"
            ]
        ]
    },
    {
        "id": "b99f99462611d243",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "424dd5b139a4b24f"
            ],
            [
                "e1e8451629e12c95"
            ],
            [
                "917ffc7959255bf7",
                "25d807fa95278cd7"
            ],
            [
                "3a930747071ced7f",
                "68cb939c1b4eb9b8",
                "546e029b34ac4d75"
            ]
        ]
    },
    {
        "id": "f2d4cd16e91cc15c",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "inUse?",
        "property": "hotchip1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "917ffc7959255bf7"
            ]
        ]
    },
    {
        "id": "d2f9b465e12339aa",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "b411eb333e518f88",
        "type": "mqtt out",
        "z": "dcba5a408b90db4f",
        "name": "",
        "topic": "subflow/hotchip1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "dba7fd01d5ddc1d8",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 880,
        "wires": [
            [
                "efe91eece4def278"
            ]
        ]
    },
    {
        "id": "14d44121fb257440",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "0e262f20cb9ce518",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "ed298fbe0fea6459",
        "type": "json",
        "z": "dcba5a408b90db4f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "55b0930c449142c2"
            ]
        ]
    },
    {
        "id": "55b0930c449142c2",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "32868cddab2034af",
                "cb7b6df64ec26f35"
            ],
            [
                "78ed937388ac0a19"
            ]
        ]
    },
    {
        "id": "32868cddab2034af",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "84e7250687507d9f",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "3846a3c9beccbf46"
            ]
        ]
    },
    {
        "id": "c24815286e2cdbd6",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "a24161c5bd6abe2b",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{\"payload\":\"hotchip1\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "ecd9823a3f97764e",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "0721a7783460a58c",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{\"payload\":\"hotchip1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "aa7c5044ce0f15f0",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "735f2b7821eee391",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotchip1 = global.get(\"hotchip1\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotchip1.tele.cmnd = 'POLL';\nhotchip1.tele.state.temp = temperature;\nhotchip1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotchip1.deviceName,\n        deviceType: hotchip1.deviceType,\n        cmnd: hotchip1.tele.cmnd,\n        settings: {\n            temp: hotchip1.tele.settings.temp\n        },\n        state: {\n            temp: hotchip1.tele.state.temp,\n            state: hotchip1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotchip1\", hotchip1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotchip1.tele.settings.temp + ' [Temp. Read: ' + hotchip1.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "74c7ad0627dd3039"
            ],
            []
        ]
    },
    {
        "id": "74c7ad0627dd3039",
        "type": "json",
        "z": "dcba5a408b90db4f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "b411eb333e518f88"
            ]
        ]
    },
    {
        "id": "e63f3d2ac36a9083",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "8dd61fa18415fab7",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "87dfab6a05f4b103",
        "type": "switch",
        "z": "dcba5a408b90db4f",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "01463e1ac22832a6"
            ],
            [
                "f46fc9a59a8e79f9"
            ]
        ]
    },
    {
        "id": "01463e1ac22832a6",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f46fc9a59a8e79f9",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotchip1.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d6d3f5c2c913d8e0",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "cb7b6df64ec26f35",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "25d807fa95278cd7",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "68cb939c1b4eb9b8",
        "type": "function",
        "z": "dcba5a408b90db4f",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "546e029b34ac4d75",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "87dfab6a05f4b103"
            ]
        ]
    },
    {
        "id": "78ed937388ac0a19",
        "type": "change",
        "z": "dcba5a408b90db4f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "87dfab6a05f4b103",
                "84e7250687507d9f"
            ]
        ]
    },
    {
        "id": "efe91eece4def278",
        "type": "simpletime",
        "z": "dcba5a408b90db4f",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 850,
        "y": 920,
        "wires": [
            [
                "735f2b7821eee391"
            ]
        ]
    },
    {
        "id": "287316858e9e0e79",
        "type": "comment",
        "z": "dcba5a408b90db4f",
        "name": "{\"payload\": {\"deviceName\":\"hotchip1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "533006f689d4d242",
        "type": "inject",
        "z": "755f6eaaa7c0cddd",
        "name": "TriggerHotCoil1TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "7cbf81c9d13b361f"
            ]
        ]
    },
    {
        "id": "cd2b6f237a9f46a3",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 800,
        "wires": [
            [
                "46936ab8acd787e9"
            ]
        ]
    },
    {
        "id": "5f55480eb5c5ee73",
        "type": "tcp request",
        "z": "755f6eaaa7c0cddd",
        "name": "HotCoil1TCPIPReq",
        "server": "192.168.1.213",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 640,
        "y": 880,
        "wires": [
            [
                "e06ba5a6d036ed54"
            ]
        ]
    },
    {
        "id": "46936ab8acd787e9",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "5f55480eb5c5ee73"
            ]
        ]
    },
    {
        "id": "0d0d1ebf278091c2",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Init HotCoil1 (Temp., State & InUse)",
        "func": "var hotcoil1 = {\n    deviceName: 'hotcoil1',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotcoil1\", hotcoil1);\n\nmsg.payload = hotcoil1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c825c6bc72e2e561",
        "type": "inject",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "0d0d1ebf278091c2"
            ]
        ]
    },
    {
        "id": "4bc4b828901d0c75",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "1688a619dcdf4a3c",
        "type": "mqtt in",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "9d19353cf8452c7c"
            ]
        ]
    },
    {
        "id": "3212a6abb0d4e07f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "aa19797c5e20bb88",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotcoil1.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "14d08990fa9d543a",
        "type": "tcp request",
        "z": "755f6eaaa7c0cddd",
        "name": "HotCoil1TCPIPCommand",
        "server": "192.168.1.213",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "8641490c595e2416"
            ]
        ]
    },
    {
        "id": "fec6fb7eb06d7d5e",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil1.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil1.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "14d08990fa9d543a"
            ]
        ]
    },
    {
        "id": "8641490c595e2416",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6d95ce023e8e3ae1",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "fec6fb7eb06d7d5e",
                "915b61cf052f5f0c"
            ]
        ]
    },
    {
        "id": "1cf9ed2c757c65ef",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "fec6fb7eb06d7d5e",
                "bb633f3ddf4dc1cb"
            ]
        ]
    },
    {
        "id": "c13ee86cd1f9e261",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "1cf9ed2c757c65ef"
            ],
            [
                "6d95ce023e8e3ae1"
            ],
            [
                "cd2b6f237a9f46a3",
                "6b7add81527aaaf2"
            ],
            [
                "aa19797c5e20bb88",
                "87a61b92dad7344c",
                "bd3fa1721ba66d61"
            ]
        ]
    },
    {
        "id": "7cbf81c9d13b361f",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "inUse?",
        "property": "hotcoil1.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "cd2b6f237a9f46a3"
            ]
        ]
    },
    {
        "id": "52f5c345c28ecc3a",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "a642922dee098a3b",
        "type": "mqtt out",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "topic": "subflow/hotcoil1/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "e06ba5a6d036ed54",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 880,
        "wires": [
            [
                "996c5ce1fc629fd2"
            ]
        ]
    },
    {
        "id": "1e3dcd697101492e",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "15ae42c93fda9d4a",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "9d19353cf8452c7c",
        "type": "json",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "05eb4710db350d14"
            ]
        ]
    },
    {
        "id": "05eb4710db350d14",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "0334f01b97266708",
                "915b61cf052f5f0c"
            ],
            [
                "edc0bc8fef3f37e9"
            ]
        ]
    },
    {
        "id": "0334f01b97266708",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "e3998a5cc1e1dffa",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "fec6fb7eb06d7d5e"
            ]
        ]
    },
    {
        "id": "a192b1565bef1c71",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ed57cbce3e9f5b19",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{\"payload\":\"hotcoil1\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "31ccc53920fc6398",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ac09c83f9d9c617f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{\"payload\":\"hotcoil1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "26a41f3b5bcfe548",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "0a0c60410998a429",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil1.tele.cmnd = 'POLL';\nhotcoil1.tele.state.temp = temperature;\nhotcoil1.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil1.deviceName,\n        deviceType: hotcoil1.deviceType,\n        cmnd: hotcoil1.tele.cmnd,\n        settings: {\n            temp: hotcoil1.tele.settings.temp\n        },\n        state: {\n            temp: hotcoil1.tele.state.temp,\n            state: hotcoil1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotcoil1\", hotcoil1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil1.tele.settings.temp + ' [Temp. Read: ' + hotcoil1.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "1fa8e72ced61e962"
            ],
            []
        ]
    },
    {
        "id": "1fa8e72ced61e962",
        "type": "json",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "a642922dee098a3b"
            ]
        ]
    },
    {
        "id": "520bfb9a5092190f",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "6bf341666f19ab8e",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "b1b995b543eb1ee6",
        "type": "switch",
        "z": "755f6eaaa7c0cddd",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "0376014355675892"
            ],
            [
                "23d1c010e87796cc"
            ]
        ]
    },
    {
        "id": "0376014355675892",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "23d1c010e87796cc",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "bb633f3ddf4dc1cb",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "915b61cf052f5f0c",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6b7add81527aaaf2",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "87a61b92dad7344c",
        "type": "function",
        "z": "755f6eaaa7c0cddd",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "bd3fa1721ba66d61",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "b1b995b543eb1ee6"
            ]
        ]
    },
    {
        "id": "edc0bc8fef3f37e9",
        "type": "change",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "b1b995b543eb1ee6",
                "e3998a5cc1e1dffa"
            ]
        ]
    },
    {
        "id": "996c5ce1fc629fd2",
        "type": "simpletime",
        "z": "755f6eaaa7c0cddd",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 850,
        "y": 920,
        "wires": [
            [
                "0a0c60410998a429"
            ]
        ]
    },
    {
        "id": "b590fcd17d887b88",
        "type": "comment",
        "z": "755f6eaaa7c0cddd",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "6c4727bab7feb439",
        "type": "inject",
        "z": "9ff174e82057e50f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "294004eab9d6bf37"
            ]
        ]
    },
    {
        "id": "b422767506baea0b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "294004eab9d6bf37",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Set InUse Flag",
        "func": "var hotcoil1 = global.get(\"hotcoil1\") || {};\n\nhotcoil1.inUse = true;\n\nglobal.set(\"hotcoil1\", hotcoil1);\n\nmsg.payload = hotcoil1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5618709313295055",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ca1f4734dde4d1c8",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{\"payload\":\"hotcoil1\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "2128f3d739130824",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "600c98f9c12dfc16",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "03134e6cba211cfc",
        "type": "switch",
        "z": "9ff174e82057e50f",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "0392f20db8722b42"
            ],
            []
        ]
    },
    {
        "id": "2ab6506c3a96ab95",
        "type": "json",
        "z": "9ff174e82057e50f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "269bf77fece8ee4a"
            ]
        ]
    },
    {
        "id": "0392f20db8722b42",
        "type": "switch",
        "z": "9ff174e82057e50f",
        "name": "Check Command: REMOTEEN / SET",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e8ec2f1b9b42d365",
                "ef31a38bfa5d7fe6"
            ],
            [
                "7d4e8a7581120f64",
                "a3c9f5a4d619fb99"
            ]
        ]
    },
    {
        "id": "7d4e8a7581120f64",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar temperatureSet = msg.temperature || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "2ab6506c3a96ab95"
            ]
        ]
    },
    {
        "id": "cba8bd5e7cc2a3bd",
        "type": "json",
        "z": "9ff174e82057e50f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "89babd35b34ee087"
            ]
        ]
    },
    {
        "id": "269bf77fece8ee4a",
        "type": "mqtt out",
        "z": "9ff174e82057e50f",
        "name": "",
        "topic": "subflow/hotcoil1/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "e90106d4528996ba",
        "type": "mqtt in",
        "z": "9ff174e82057e50f",
        "name": "",
        "topic": "subflow/hotcoil1/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "cba8bd5e7cc2a3bd"
            ]
        ]
    },
    {
        "id": "a3c9f5a4d619fb99",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Status string & Set Global variable",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\n\nvar command = msg.command || \"\";\nvar setTemperature = msg.temperature || 0.0;\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotcoil1.tele.state.temp + ')]';\n\nhotcoil1.tele.settings.temp = setTemperature;\nglobal.set(\"hotcoil1\", hotcoil1);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "44b67fbbeb5f149f",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{\"payload\":\"hotcoil1\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "02a8a2d7fcc65e9c",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "e8ec2f1b9b42d365",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "2ab6506c3a96ab95"
            ]
        ]
    },
    {
        "id": "ef31a38bfa5d7fe6",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Status string",
        "func": "var command = msg.command || \"\";\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "77e152622daa830b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "7a66fc3787892aa4",
        "type": "function",
        "z": "9ff174e82057e50f",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil1 = global.get(\"hotcoil1\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil1.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil1.deviceName,\n        deviceType: hotcoil1.deviceType,\n        cmnd: hotcoil1.tele.cmnd,\n        settings: {\n            temp: hotcoil1.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotcoil1.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotcoil1\", hotcoil1);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil1.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "89babd35b34ee087",
        "type": "simpletime",
        "z": "9ff174e82057e50f",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "7a66fc3787892aa4"
            ]
        ]
    },
    {
        "id": "4841e304d0b0067b",
        "type": "comment",
        "z": "9ff174e82057e50f",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil1\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "38f8b4b2ec2cde1a",
        "type": "inject",
        "z": "e5d36bc87bf46f25",
        "name": "TriggerHotCoil2TempRequest",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "572ed1b02b044040"
            ]
        ]
    },
    {
        "id": "0f77923f267ec37d",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Construct Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "in_pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 800,
        "wires": [
            [
                "314cf2f58c5f839a"
            ]
        ]
    },
    {
        "id": "a302e90c65747dc4",
        "type": "tcp request",
        "z": "e5d36bc87bf46f25",
        "name": "HotCoil2TCPIPReq",
        "server": "192.168.1.202",
        "port": "81",
        "out": "time",
        "ret": "string",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 640,
        "y": 880,
        "wires": [
            [
                "e37ed1bda0277d4e"
            ]
        ]
    },
    {
        "id": "314cf2f58c5f839a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "a302e90c65747dc4"
            ]
        ]
    },
    {
        "id": "a491a51fe7dff604",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Init HotCoil2 (Temp., State & InUse)",
        "func": "var hotcoil2 = {\n    deviceName: 'hotcoil2',\n    deviceType: 'Hotchip',\n\n    inUse : false,\n    remoteEnabled : false,\n    ipAddr: \"\",\n    port: 0,\n    \n    tele: {\n        cmnd: '',\n        settings: {\n            temp: 0.0\n        },\n        state: {\n            temp: 0.0,\n            state: 'OFF'\n        },\n        timestamp: ''\n    }\n};\n\nglobal.set(\"hotcoil2\", hotcoil2);\n\nmsg.payload = hotcoil2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4c8e4951c21c2f93",
        "type": "inject",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "a491a51fe7dff604"
            ]
        ]
    },
    {
        "id": "99285f3d446a3404",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "INIT: Variables at startup (IP:port INIT in Settings Tab)",
        "info": "",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "19802acccb217358",
        "type": "mqtt in",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "topic": "subflow/hotcoil2/cmnd",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "d8dd0e632dc0d12b"
            ]
        ]
    },
    {
        "id": "f97df2402b75f168",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "Incoming CMND",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ebfb1ddb0eda5ec",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create Set Temp Command & Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hotcoil2.tele.settings.temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "c8cc3351106d4b22",
        "type": "tcp request",
        "z": "e5d36bc87bf46f25",
        "name": "HotCoil2TCPIPCommand",
        "server": "192.168.1.202",
        "port": "81",
        "out": "time",
        "ret": "buffer",
        "splitc": "100",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [
                "61b7a2336faa6eab"
            ]
        ]
    },
    {
        "id": "d463d43e918d022c",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Add Host Settings",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "hotcoil2.ipAddr",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "hotcoil2.port",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "c8cc3351106d4b22"
            ]
        ]
    },
    {
        "id": "61b7a2336faa6eab",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "RespToString",
        "func": "var tempString = msg.payload;\nmsg.payload = tempString.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a2702bcbf49c018a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create ON (Remote Enable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "d463d43e918d022c",
                "78b0bd72bd5902e0"
            ]
        ]
    },
    {
        "id": "9c1d1fc3dcb4f27f",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create OFF (Remote Disable) Command / Store Global variable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "d463d43e918d022c",
                "78a9f0e787a8d2ee"
            ]
        ]
    },
    {
        "id": "255fca3e1a8a0462",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "OFF / ON / READ / Value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READ",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "9c1d1fc3dcb4f27f"
            ],
            [
                "a2702bcbf49c018a"
            ],
            [
                "0f77923f267ec37d",
                "93eda2f48aaadb18"
            ],
            [
                "5ebfb1ddb0eda5ec",
                "726651f72bf66f9c",
                "5a49523fe2453792"
            ]
        ]
    },
    {
        "id": "572ed1b02b044040",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "inUse?",
        "property": "hotcoil2.inUse",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "0f77923f267ec37d"
            ]
        ]
    },
    {
        "id": "dbef06cd44c743f3",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "Periodic Read Temperature",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "2ea9aa761418c6c6",
        "type": "mqtt out",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "topic": "subflow/hotcoil2/tele",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1820,
        "y": 920,
        "wires": []
    },
    {
        "id": "e37ed1bda0277d4e",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Array->String->Float",
        "func": "var valueArray = msg.payload;\nvar valueString = valueArray.toString();\nvar valueFloat = parseFloat(valueString);\nvar newMsg = {};\n\nnewMsg.payload = valueFloat;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 880,
        "wires": [
            [
                "b523cdfe78a19bf0"
            ]
        ]
    },
    {
        "id": "98fbac360dd5f720",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything",
        "info": "",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "6a8b983ef1f02c35",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 740,
        "y": 700,
        "wires": []
    },
    {
        "id": "d8dd0e632dc0d12b",
        "type": "json",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "0a34118182fb6f65"
            ]
        ]
    },
    {
        "id": "0a34118182fb6f65",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "REMOTEEN / SET",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "9953cd44614d5636",
                "78b0bd72bd5902e0"
            ],
            [
                "3bbfc946209a1586"
            ]
        ]
    },
    {
        "id": "9953cd44614d5636",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create ON (Remote Enable) Command / Store Global vriable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_mode_05 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.remoteEnabled",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 340,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "eedb38cbd2e8529a",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "Create Set Temp Command",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.settings.temp",
                "pt": "global",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "out_sp_00 @",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "d463d43e918d022c"
            ]
        ]
    },
    {
        "id": "2e0972077d3b5bad",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "44b8e6202171c74a",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{\"payload\":\"hotcoil2\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "7ffec8f5c52b4f48",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "74a5a29ba7286323",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{\"payload\":\"hotcoil2\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "b30b8c93121ee84a",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "0550af75819c144d",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\nvar timestamp = msg.myepoch;\n\nvar temperature = msg.payload || {};\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil2.tele.cmnd = 'POLL';\nhotcoil2.tele.state.temp = temperature;\nhotcoil2.tele.timestamp = timestamp;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil2.deviceName,\n        deviceType: hotcoil2.deviceType,\n        cmnd: hotcoil2.tele.cmnd,\n        settings: {\n            temp: hotcoil2.tele.settings.temp\n        },\n        state: {\n            temp: hotcoil2.tele.state.temp,\n            state: hotcoil2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n    \nglobal.set(\"hotcoil2\", hotcoil2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil2.tele.settings.temp + ' [Temp. Read: ' + hotcoil2.tele.state.temp + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "6f97bd4da8216159"
            ],
            []
        ]
    },
    {
        "id": "6f97bd4da8216159",
        "type": "json",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "2ea9aa761418c6c6"
            ]
        ]
    },
    {
        "id": "2d85aea8ac80f3f4",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "From Manual Input",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "47570587fd37535e",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "From MQTT",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "336d6e73111722dc",
        "type": "switch",
        "z": "e5d36bc87bf46f25",
        "name": "> 0 / otherwise",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 420,
        "wires": [
            [
                "6019df0046c78f58"
            ],
            [
                "c1f0472fae27bfb4"
            ]
        ]
    },
    {
        "id": "6019df0046c78f58",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.state.state",
                "pt": "global",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c1f0472fae27bfb4",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil2.tele.state.state",
                "pt": "global",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "78a9f0e787a8d2ee",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTE Disable (OFF)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "78b0bd72bd5902e0",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "REMOTEEN (ON)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "93eda2f48aaadb18",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "READ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "726651f72bf66f9c",
        "type": "function",
        "z": "e5d36bc87bf46f25",
        "name": "Create status",
        "func": "var temperature = msg.payload || 0.0;\nvar newMsg = {};\n\nnewMsg = {\n    payload: 'SET Temp.: ' + temperature.toString()\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5a49523fe2453792",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "336d6e73111722dc"
            ]
        ]
    },
    {
        "id": "3bbfc946209a1586",
        "type": "change",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload.temperatureSet",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "336d6e73111722dc",
                "eedb38cbd2e8529a"
            ]
        ]
    },
    {
        "id": "b523cdfe78a19bf0",
        "type": "simpletime",
        "z": "e5d36bc87bf46f25",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 850,
        "y": 920,
        "wires": [
            [
                "0550af75819c144d"
            ]
        ]
    },
    {
        "id": "861082e798a8c1bf",
        "type": "comment",
        "z": "e5d36bc87bf46f25",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "468d35971b6709a3",
        "type": "inject",
        "z": "100af8884419f9cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0.0",
        "payloadType": "num",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "9a11bf88aca7d525"
            ]
        ]
    },
    {
        "id": "7b8f14f8f21af733",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "When this Sub-Flow is used, set InUse FLAG",
        "info": "",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "9a11bf88aca7d525",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Set InUse Flag",
        "func": "var hotcoil2 = global.get(\"hotcoil2\") || {};\n\nhotcoil2.inUse = true;\n\nglobal.set(\"hotcoil2\", hotcoil2);\n\nmsg.payload = hotcoil2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d1258f9d7be3fd59",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "INPUTS",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "bcd6dfb6517d5212",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{\"payload\":\"hotcoil2\", \"command\":\"SET\", \"temperature\": 30.8}",
        "info": "",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "20b13c3c9598d210",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "OUTPUT",
        "info": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "a7a0992c40dc7248",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "Receive Command: Link to HotChip 1",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "590abe5d6566ccc0",
        "type": "switch",
        "z": "100af8884419f9cb",
        "name": "Command for this Device?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "hotcoil2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "64ba0278c157bb89"
            ],
            []
        ]
    },
    {
        "id": "508c93994e70c134",
        "type": "json",
        "z": "100af8884419f9cb",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "c81c81cedbe7105d"
            ]
        ]
    },
    {
        "id": "64ba0278c157bb89",
        "type": "switch",
        "z": "100af8884419f9cb",
        "name": "Check Command: REMOTEEN / SET",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "REMOTEEN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "a633901488293363",
                "2a2785decd8f7504"
            ],
            [
                "629a59e94de507dc",
                "478273ed9e778df8"
            ]
        ]
    },
    {
        "id": "629a59e94de507dc",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\nvar temperatureSet = msg.temperature || 0.0;\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command,\n        temperatureSet: temperatureSet\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 420,
        "wires": [
            [
                "508c93994e70c134"
            ]
        ]
    },
    {
        "id": "b6433249d8d9edaf",
        "type": "json",
        "z": "100af8884419f9cb",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "58493ab233c080e6"
            ]
        ]
    },
    {
        "id": "c81c81cedbe7105d",
        "type": "mqtt out",
        "z": "100af8884419f9cb",
        "name": "",
        "topic": "subflow/hotcoil2/cmnd",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ac11df20.5dcab",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "baa6f8d30e54b7f8",
        "type": "mqtt in",
        "z": "100af8884419f9cb",
        "name": "",
        "topic": "subflow/hotcoil2/tele",
        "qos": "2",
        "datatype": "auto",
        "broker": "ac11df20.5dcab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 500,
        "wires": [
            [
                "b6433249d8d9edaf"
            ]
        ]
    },
    {
        "id": "478273ed9e778df8",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Status string & Set Global variable",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\n\nvar command = msg.command || \"\";\nvar setTemperature = msg.temperature || 0.0;\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command + ' [Temp. Set: ' + setTemperature + ' (Temp. Read: ' + hotcoil2.tele.state.temp + ')]';\n\nhotcoil2.tele.settings.temp = setTemperature;\nglobal.set(\"hotcoil2\", hotcoil2);\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fb00f4daf2263c58",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{\"payload\":\"hotcoil2\", \"command\":\"REMOTEEN\"}",
        "info": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "dcdb36dc37922aab",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "<<=== MUST be called at the start of the Automation script !!!",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "a633901488293363",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build MQTT Payload",
        "func": "var device = msg.payload || \"\";\nvar command = msg.command || \"\";\n\nvar newMsg = {};\n\nnewMsg = {\n    payload: {\n        payload: device,\n        command: command\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "508c93994e70c134"
            ]
        ]
    },
    {
        "id": "2a2785decd8f7504",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Status string",
        "func": "var command = msg.command || \"\";\nvar statusString = \"\";\nvar newMsg = {};\n\nstatusString = command;\n\nnewMsg = {\n    payload: statusString\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c6d675f024c656f3",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "Return result from TCPIP",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "f75079bc0eff60ac",
        "type": "function",
        "z": "100af8884419f9cb",
        "name": "Build Response message, Store Global variable & Status Ouput",
        "func": "var hotcoil2 = global.get(\"hotcoil2\");\n\nvar temperatureRead = msg.payload.state.temp || {};\n\nvar timestamp = msg.myepoch;\n\nvar newPayload = {};\nvar responseMsg = {};\nvar statusMsg = {};\n\nhotcoil2.tele.state.temp = temperatureRead;\n\nresponseMsg = {\n    payload: {\n        deviceName: hotcoil2.deviceName,\n        deviceType: hotcoil2.deviceType,\n        cmnd: hotcoil2.tele.cmnd,\n        settings: {\n            temp: hotcoil2.tele.settings.temp\n            },\n        state: {\n            temp: temperatureRead,\n            state: hotcoil2.tele.state.state\n        },\n        timestamp: timestamp\n    }\n};\n\n  \nglobal.set(\"hotcoil2\", hotcoil2);\n\nstatusMsg = {\n    payload: 'SET Temp.: ' + hotcoil2.tele.settings.temp + ' [Temp. Read: ' + temperatureRead + ']'\n};\n\nreturn [responseMsg, statusMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "58493ab233c080e6",
        "type": "simpletime",
        "z": "100af8884419f9cb",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": true,
        "myrawdate": true,
        "mypm": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "f75079bc0eff60ac"
            ]
        ]
    },
    {
        "id": "c55ed514fb48fe58",
        "type": "comment",
        "z": "100af8884419f9cb",
        "name": "{\"payload\": {\"deviceName\":\"hotcoil2\",\"deviceType\":\"Hotchip\",\"cmnd\":\"POLL\",\"settings\":{\"temp\":29.5}, \"state\": {\"temp\": 14.5, \"state\":\"ON\"}}}",
        "info": "",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "d447ac6f25d9b985",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "How to setup devices / use Sub-FLows",
        "info": "",
        "x": 170,
        "y": 20,
        "wires": []
    },
    {
        "id": "fdfa6abb853d50b8",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "HotCoils / HotPlates",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "c4fe431145b99f74",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Use the Sub-Flows without the \"Flow\" at the end. The SubFlows with the \"Flow\" at the end is used for Manual operation",
        "info": "",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "474aee266006f9d9",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "2) These devices needs ONLY the following INPUTs",
        "info": "",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "0d5c78d6a19bbef5",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "a) Use a UI-Slider component to send the Temperature setting to the device",
        "info": "",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "ca464f814703c5de",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "b) Temp. > 0 (ON), Temp = 0 (OFF)",
        "info": "",
        "x": 280,
        "y": 220,
        "wires": []
    },
    {
        "id": "c2bb3dd2b197ee64",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "c) \"READ\"-command is only used for Manual Operations",
        "info": "",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "f1fe8ff93c9f60ed",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "ReactIR 702L",
        "info": "",
        "x": 110,
        "y": 360,
        "wires": []
    },
    {
        "id": "c06e772054520f64",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Use the Sub-Flows without the \"Flow\" at the end. The SubFlows with the \"Flow\" at the end is used for Manual operation",
        "info": "",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "a1fa75ef2885fff5",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "2) These devices needs ONLY the following INPUTs",
        "info": "",
        "x": 270,
        "y": 440,
        "wires": []
    },
    {
        "id": "af07a83b8a525b93",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "c) \"READ\"-command is only used for Manual Operations",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "0bdcd15d26c24a11",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "NB: OPC Node needs to be setup with the correct IP:port and OPC Server",
        "info": "",
        "x": 340,
        "y": 520,
        "wires": []
    },
    {
        "id": "903d39f25f1db5fc",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "NB: IP:port must be setup in the Settings TAB when the IP address is changed or added",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "1f3ca8ee8322b829",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "SF10 Vapourtec",
        "info": "",
        "x": 120,
        "y": 740,
        "wires": []
    },
    {
        "id": "e1e2967ee7b125c2",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "1) Setup the USB/Serial port in the SF10 Vapourtec FLows",
        "info": "",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "21a941381f952c18",
        "type": "function",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 600,
        "wires": [
            [
                "75273f9ca8f1de5b"
            ]
        ]
    },
    {
        "id": "75273f9ca8f1de5b",
        "type": "ui_template",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "group": "f92bad53a3851b4d",
        "name": "ReactIR 702L 1 Data",
        "order": 1,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart3\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart3\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "ece7cad68ac48380",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "3) Use the following 2 nodes to package data from ReactIR and to display (FLOW)",
        "info": "",
        "x": 360,
        "y": 560,
        "wires": []
    },
    {
        "id": "f88b3cf772942a4a",
        "type": "json",
        "z": "8a0e73bbc365dbb1",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c6d3e79b9f3e1417",
        "type": "comment",
        "z": "8a0e73bbc365dbb1",
        "name": "4) Use the following 2 nodes to package data from ReactIR and to display (Automatic node Not the FLOW)",
        "info": "",
        "x": 440,
        "y": 640,
        "wires": []
    },
    {
        "id": "87df4ac00704d5fb",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Gauge",
        "group": "08f2e0d237277a3e",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HotCoil 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 420,
        "wires": []
    },
    {
        "id": "294ebd92eacaaf8c",
        "type": "ui_chart",
        "z": "10298351f754cc63",
        "d": true,
        "name": "HotCoil 1 Temp. Graph",
        "group": "08f2e0d237277a3e",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "HotCoil 1 Temp.",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "722fb160491e46ba",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "20be9946aae88659",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Gauge",
        "group": "131978166ea601ba",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HotCoil 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "8f7ad71ed67ef017",
        "type": "ui_chart",
        "z": "10298351f754cc63",
        "d": true,
        "name": "HotCoil 2 Temp. Graph",
        "group": "131978166ea601ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "HotCoil 2 Temp.",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "ffa697aa9fafaf3a",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "2798b2951b14350f",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Gauge",
        "group": "56c7a41708ec20f4",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HotChip 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "f6eaa64bd9bb69ee",
        "type": "ui_chart",
        "z": "10298351f754cc63",
        "d": true,
        "name": "HotChip 1 Temp. Graph",
        "group": "56c7a41708ec20f4",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "HotChip 1 Temp.",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "07e9210dec9c95dc",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "4e3db621f2ad6587",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Gauge",
        "group": "96632e11e1c04c24",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HotChip 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "c4ef85491f33396c",
        "type": "ui_chart",
        "z": "10298351f754cc63",
        "d": true,
        "name": "HotChip 2 Temp. Graph",
        "group": "96632e11e1c04c24",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "HotChip 2 Temp.",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "524763d1894d4033",
        "type": "subflow:39878a8b7ca6b377",
        "z": "10298351f754cc63",
        "name": "",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "f6eaa64bd9bb69ee",
                "644e44f18f8295c9",
                "ffa697aa9fafaf3a",
                "9974ed3c9987377a",
                "0ceff897f4915b5f"
            ]
        ]
    },
    {
        "id": "8779bbf3c28e4375",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "7d1b6c2a5d6cd94c",
        "type": "catch",
        "z": "10298351f754cc63",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "93b446ea38835ea0"
            ]
        ]
    },
    {
        "id": "93b446ea38835ea0",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "1aa7e620a1cc95e2",
        "type": "comment",
        "z": "10298351f754cc63",
        "name": "Error Handling",
        "info": "",
        "x": 110,
        "y": 20,
        "wires": []
    },
    {
        "id": "1056dec7b235feb8",
        "type": "subflow:fadba47737eca3c5",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 600,
        "y": 700,
        "wires": [
            [
                "1405806e3ecb5c7b",
                "8c4367d7ae8ddd15",
                "9974ed3c9987377a"
            ]
        ]
    },
    {
        "id": "a7b5b72e44a571c8",
        "type": "subflow:e399fc8fc0b218b9",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 610,
        "y": 800,
        "wires": [
            [
                "211397b250f1413e",
                "9974ed3c9987377a",
                "aa5e22fdb5f21f4f",
                "a2dd9784b377ceff",
                "57e807deb5384e6b",
                "d9022f4fd415de60"
            ]
        ]
    },
    {
        "id": "8c4367d7ae8ddd15",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 740,
        "wires": []
    },
    {
        "id": "1405806e3ecb5c7b",
        "type": "function",
        "z": "10298351f754cc63",
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 700,
        "wires": [
            [
                "ccd6357ed535fe36",
                "32b3e5b13d050c8e"
            ]
        ]
    },
    {
        "id": "ccd6357ed535fe36",
        "type": "ui_template",
        "z": "10298351f754cc63",
        "group": "d99fa63256862037",
        "name": "ReactIR 702L 1 Data",
        "order": 1,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart2\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart2\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "32b3e5b13d050c8e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "211397b250f1413e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "57407618e8c725fd",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETDOSE 0.7",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            },
            {
                "p": "mode",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "p": "dose",
                "v": "0.7",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 170,
        "y": 960,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "aca0f828aeb23505",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump REMOTEEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "REMOTEEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "e2daad7de56ef90c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETFLOW 0.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            },
            {
                "p": "mode",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "p": "flowrate",
                "v": "0.3",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "806f8f0846267846",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETREG 0.6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            },
            {
                "p": "mode",
                "v": "REG",
                "vt": "str"
            },
            {
                "p": "pressure",
                "v": "0.6",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "d0cc3707c9ff3975",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETGASFLOW 0.8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            },
            {
                "p": "mode",
                "v": "GAS",
                "vt": "str"
            },
            {
                "p": "gasflowrate",
                "v": "0.8",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "baa14d4ff9e6eac9",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump SETRAMP 0.9 1.0 1.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            },
            {
                "p": "mode",
                "v": "RAMP",
                "vt": "str"
            },
            {
                "p": "rampStartRate",
                "v": "0.9",
                "vt": "num"
            },
            {
                "p": "rampStopRate",
                "v": "1.9",
                "vt": "num"
            },
            {
                "p": "rampTime",
                "v": "1.5",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "618c99302fde0538",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump START",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "START",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "093d71cdc9a8d01c",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump STOP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 150,
        "y": 1120,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "4bfd62e37b8419e7",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "SF10 Pump VALVE A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "VALVE",
                "vt": "str"
            },
            {
                "p": "valve",
                "v": "A",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sf10Vapourtec1",
        "payloadType": "str",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "a7b5b72e44a571c8"
            ]
        ]
    },
    {
        "id": "3d897ecc6506c0aa",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 REMOTEEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "REMOTEEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip1",
        "payloadType": "str",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "524763d1894d4033",
                "be011803d50e3b4b"
            ]
        ]
    },
    {
        "id": "5f6d340f39cdec6a",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "35",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip1",
        "payloadType": "str",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "524763d1894d4033",
                "be011803d50e3b4b"
            ]
        ]
    },
    {
        "id": "64737f054210d985",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 1 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip1",
        "payloadType": "str",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "524763d1894d4033",
                "be011803d50e3b4b"
            ]
        ]
    },
    {
        "id": "644e44f18f8295c9",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 120,
        "wires": [
            [
                "2798b2951b14350f"
            ]
        ]
    },
    {
        "id": "618f2d59e25b3915",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 REMOTEEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "REMOTEEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip2",
        "payloadType": "str",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "71f35f2ad2a0685d",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "40",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip2",
        "payloadType": "str",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "a15b103a3c2bdf85",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotChip 2 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotchip2",
        "payloadType": "str",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "f90cf4d88a0ae953"
            ]
        ]
    },
    {
        "id": "d7127ac161243887",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "4e3db621f2ad6587"
            ]
        ]
    },
    {
        "id": "9ea23e0791ca9979",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 REMOTEEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "REMOTEEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil1",
        "payloadType": "str",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "d4e6245bbbb98d97",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "45",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil1",
        "payloadType": "str",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "568b24d9d78bc7c1",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 1 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil1",
        "payloadType": "str",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "1137c8e7569e8c39"
            ]
        ]
    },
    {
        "id": "de334e097b34b9b3",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 REMOTEEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "REMOTEEN",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil2",
        "payloadType": "str",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "dff40201bc9eb2c5",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Set Temp. (ON)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "50",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil2",
        "payloadType": "str",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "4e95ac82e606a302",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "HotCoil 2 Set Temp. (OFF)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "temperature",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hotcoil2",
        "payloadType": "str",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "2ad459cb287799ca"
            ]
        ]
    },
    {
        "id": "69c7687c41240b04",
        "type": "subflow:ef63b0d123a76daa",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 600,
        "y": 1400,
        "wires": [
            [
                "142ed29f79d1baf5",
                "2c1d57fbf2794a6c",
                "2a2d419da65bf756",
                "059e1658852a1a15",
                "b8fd26631816d62f",
                "0fad1d24ba15766a",
                "10aa64868e241c3b",
                "c4e17268916850bc",
                "3faeaca03f51bdb7",
                "480fee500c5ac01b",
                "16535bb687a9c340",
                "d5c898a8de271d23",
                "0496b3fec2be1275",
                "90b4ce7b0560e51b",
                "1d9220558bdbc5a9",
                "0f178d0514514dbf",
                "22a37d0636c6e38f",
                "381f19af5e6457c7",
                "66cc03405dcb46c8",
                "cde3638b721396c5",
                "b4e1336fa45325fb",
                "aa6b98a0780e9ad4",
                "78998a2d94a0b339",
                "e72f476f9c2e4c57",
                "9974ed3c9987377a"
            ]
        ]
    },
    {
        "id": "ad3832e55788a8b8",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "20be9946aae88659"
            ]
        ]
    },
    {
        "id": "ac4a631ede0b23a3",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 420,
        "wires": [
            [
                "87df4ac00704d5fb"
            ]
        ]
    },
    {
        "id": "9974ed3c9987377a",
        "type": "pythonshell in",
        "z": "10298351f754cc63",
        "d": true,
        "name": "FluxiDominus Shell",
        "pyfile": "/home/pi/Desktop/FluxiDominus/FluxiDominus_dev/main.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": true,
        "x": 590,
        "y": 60,
        "wires": [
            [
                "524763d1894d4033",
                "d272c65929434b5e"
            ]
        ]
    },
    {
        "id": "57e807deb5384e6b",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Edit Text Mode",
        "label": "Mode",
        "format": "{{msg.payload.settings.mode}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 920,
        "wires": []
    },
    {
        "id": "7f799c54ca4d97cd",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Start / Pressure / Dose / Flow",
        "group": "a84e115482e1d03d",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Rate Start / Pressure / Dose / Flow",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1900,
        "y": 960,
        "wires": []
    },
    {
        "id": "aa5e22fdb5f21f4f",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "EditText Valve",
        "label": "Valve",
        "format": "{{msg.payload.state.valve}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 880,
        "wires": []
    },
    {
        "id": "a2dd9784b377ceff",
        "type": "ui_text",
        "z": "10298351f754cc63",
        "group": "a84e115482e1d03d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Edit Text State",
        "label": "State",
        "format": "{{msg.payload.state.status}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 840,
        "wires": []
    },
    {
        "id": "d9022f4fd415de60",
        "type": "switch",
        "z": "10298351f754cc63",
        "name": "Check: FLOW / REG / DOSE / GAS / RAMP",
        "property": "payload.settings.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLOW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REG",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DOSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GAS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 910,
        "y": 1000,
        "wires": [
            [
                "aa6f2ae86e79fd7b"
            ],
            [
                "20220318cac24b8b"
            ],
            [
                "c84d48f65cee8647"
            ],
            [
                "8a9779349496f820"
            ],
            [
                "0f00556e6cd937d6",
                "0a2d43fa0dd5d4e7",
                "e011e40bf2effeef"
            ]
        ]
    },
    {
        "id": "aa6f2ae86e79fd7b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.flowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 960,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "20220318cac24b8b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Pressure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.pressure",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1000,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "c84d48f65cee8647",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Dose",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.dose",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1040,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "8a9779349496f820",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Gas Flow Rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.gasflowrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1080,
        "wires": [
            [
                "7f799c54ca4d97cd",
                "bfb16977b77a302a"
            ]
        ]
    },
    {
        "id": "0f00556e6cd937d6",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Start Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStartRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1120,
        "wires": [
            [
                "7f799c54ca4d97cd"
            ]
        ]
    },
    {
        "id": "998e1d7c29525372",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Rate Stop",
        "group": "a84e115482e1d03d",
        "order": 9,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Rate Stop",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c1711276c97dc73d",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge Time",
        "group": "a84e115482e1d03d",
        "order": 14,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Time",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1810,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0a2d43fa0dd5d4e7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Stop Flowrate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampStopRate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1160,
        "wires": [
            [
                "998e1d7c29525372"
            ]
        ]
    },
    {
        "id": "e011e40bf2effeef",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Extract Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.settings.rampTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1200,
        "wires": [
            [
                "c1711276c97dc73d"
            ]
        ]
    },
    {
        "id": "bfb16977b77a302a",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Zero Guages",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 920,
        "wires": [
            [
                "998e1d7c29525372",
                "c1711276c97dc73d"
            ]
        ]
    },
    {
        "id": "5ec2f131d043f244",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Pump A Flow Rate SETFLOW 2.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "2.5",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpAFlowRate",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 250,
        "y": 1440,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "f02b413d1cb68c6a",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Valve: FlowSynValveA OPEN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "FlowSynValveA",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 240,
        "y": 1480,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "142ed29f79d1baf5",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3f1b6a08a4ccaec9",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Valve: FlowSynValveA CLOSE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "FlowSynValveA",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 240,
        "y": 1520,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "b24a1685a2cc8962",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Pump A Flow Rate SETFLOW 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpAFlowRate",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 300,
        "y": 1400,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d2466e16ec250396",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Pump B Flow Rate SETFLOW 2.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "2.5",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpBFlowRate",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 250,
        "y": 1620,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "d2d64b2963225b72",
        "type": "inject",
        "z": "10298351f754cc63",
        "name": "FlowSync Maxi 1 Pump B Flow Rate SETFLOW 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "SET",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpBFlowRate",
        "payload": "flowsynmaxi1",
        "payloadType": "str",
        "x": 240,
        "y": 1580,
        "wires": [
            [
                "69c7687c41240b04"
            ]
        ]
    },
    {
        "id": "aa6dbab7841e35bc",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge System Pressure",
        "group": "947decbba47e6fc1",
        "order": 5,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1400,
        "wires": []
    },
    {
        "id": "97f49706c9441947",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowSynAPressure",
        "group": "947decbba47e6fc1",
        "order": 6,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1440,
        "wires": []
    },
    {
        "id": "fd9b64fa235fee8c",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Gauge FlowSynBPressure",
        "group": "947decbba47e6fc1",
        "order": 7,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1480,
        "wires": []
    },
    {
        "id": "9d8dc831f5d10de8",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "d": true,
        "name": "Gauge FlowBinaryCPressure",
        "group": "947decbba47e6fc1",
        "order": 8,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e4da7b8907394f1a",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "d": true,
        "name": "Gauge FlowBinaryDPressure",
        "group": "947decbba47e6fc1",
        "order": 9,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b2f5a4771ffc5d65",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Reactor 1 Temp.",
        "group": "947decbba47e6fc1",
        "order": 10,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1000,
        "y": 1620,
        "wires": []
    },
    {
        "id": "56d81d5e50188501",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Reactor 2 Temp.",
        "group": "947decbba47e6fc1",
        "order": 11,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1000,
        "y": 1660,
        "wires": []
    },
    {
        "id": "d4ed3470fbda429e",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "d": true,
        "name": "Reactor 3 Temp.",
        "group": "947decbba47e6fc1",
        "order": 12,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1000,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8b8ff63c482b4bb8",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "d": true,
        "name": "Reactor 4 Temp.",
        "group": "947decbba47e6fc1",
        "order": 17,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 1000,
        "y": 1740,
        "wires": []
    },
    {
        "id": "92b6ab5525625e38",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 13,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve A OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Valve A",
        "x": 1010,
        "y": 1800,
        "wires": []
    },
    {
        "id": "37d0959256e1d481",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 14,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve B OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Valve B",
        "x": 1010,
        "y": 1840,
        "wires": []
    },
    {
        "id": "f91aeb5463624926",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 15,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Binary Valve C OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Valve C",
        "x": 1000,
        "y": 1880,
        "wires": []
    },
    {
        "id": "71bd0b59bf1f7889",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 16,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Binary Valve D OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Valve D",
        "x": 1000,
        "y": 1920,
        "wires": []
    },
    {
        "id": "5eeee8250509c9eb",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 26,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "C/W Valve OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C/W Valve",
        "x": 990,
        "y": 1980,
        "wires": []
    },
    {
        "id": "dcac0f02b0a7088b",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 22,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve A OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Inj Valve A",
        "x": 1020,
        "y": 2040,
        "wires": []
    },
    {
        "id": "8fe803d6f25a410d",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 23,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve B OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Inj Valve B",
        "x": 1020,
        "y": 2080,
        "wires": []
    },
    {
        "id": "d93b86523268cc6d",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 24,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve C OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Inj Valve C",
        "x": 1010,
        "y": 2120,
        "wires": []
    },
    {
        "id": "58067390fd1afbe5",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 25,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve D OPEN",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Inj Valve D",
        "x": 1010,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c956be673c13817f",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Pump A Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1010,
        "y": 2220,
        "wires": []
    },
    {
        "id": "2cfa8ebc12268e60",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Pump B Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1010,
        "y": 2260,
        "wires": []
    },
    {
        "id": "5133cf01a3b0c917",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Pump C Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1010,
        "y": 2300,
        "wires": []
    },
    {
        "id": "b5f5ee9e065daf6d",
        "type": "ui_gauge",
        "z": "10298351f754cc63",
        "name": "Pump D Flow Rate",
        "group": "947decbba47e6fc1",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 1010,
        "y": 2340,
        "wires": []
    },
    {
        "id": "e84755a78a1d4a44",
        "type": "ui_led",
        "z": "10298351f754cc63",
        "order": 27,
        "group": "947decbba47e6fc1",
        "width": 0,
        "height": 0,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffffff",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Chiller Detected",
        "x": 1000,
        "y": 2400,
        "wires": []
    },
    {
        "id": "2c1d57fbf2794a6c",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.pressureSystem",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1400,
        "wires": [
            [
                "aa6dbab7841e35bc"
            ]
        ]
    },
    {
        "id": "2a2d419da65bf756",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.pressureFlowSynA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1440,
        "wires": [
            [
                "97f49706c9441947"
            ]
        ]
    },
    {
        "id": "059e1658852a1a15",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.pressureFlowSynB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1480,
        "wires": [
            [
                "fd9b64fa235fee8c"
            ]
        ]
    },
    {
        "id": "b8fd26631816d62f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.pressureBinaryC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1520,
        "wires": [
            [
                "9d8dc831f5d10de8"
            ]
        ]
    },
    {
        "id": "0fad1d24ba15766a",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.pressureBinaryD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1560,
        "wires": [
            [
                "e4da7b8907394f1a"
            ]
        ]
    },
    {
        "id": "10aa64868e241c3b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.temperatureReactor1",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1620,
        "wires": [
            [
                "b2f5a4771ffc5d65"
            ]
        ]
    },
    {
        "id": "c4e17268916850bc",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.temperatureReactor2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1660,
        "wires": [
            [
                "56d81d5e50188501"
            ]
        ]
    },
    {
        "id": "3faeaca03f51bdb7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.temperatureReactor3",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1700,
        "wires": [
            [
                "d4ed3470fbda429e"
            ]
        ]
    },
    {
        "id": "480fee500c5ac01b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataTempPress.temperatureReactor4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1740,
        "wires": [
            [
                "8b8ff63c482b4bb8"
            ]
        ]
    },
    {
        "id": "16535bb687a9c340",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1800,
        "wires": [
            [
                "92b6ab5525625e38"
            ]
        ]
    },
    {
        "id": "d5c898a8de271d23",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1840,
        "wires": [
            [
                "37d0959256e1d481"
            ]
        ]
    },
    {
        "id": "0496b3fec2be1275",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1880,
        "wires": [
            [
                "f91aeb5463624926"
            ]
        ]
    },
    {
        "id": "90b4ce7b0560e51b",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1920,
        "wires": [
            [
                "71bd0b59bf1f7889"
            ]
        ]
    },
    {
        "id": "1d9220558bdbc5a9",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveOpenCW",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1980,
        "wires": [
            [
                "5eeee8250509c9eb"
            ]
        ]
    },
    {
        "id": "0f178d0514514dbf",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveInjOpenA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2040,
        "wires": [
            [
                "dcac0f02b0a7088b"
            ]
        ]
    },
    {
        "id": "22a37d0636c6e38f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveInjOpenB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2080,
        "wires": [
            [
                "8fe803d6f25a410d"
            ]
        ]
    },
    {
        "id": "381f19af5e6457c7",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveInjOpenC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2120,
        "wires": [
            [
                "d93b86523268cc6d"
            ]
        ]
    },
    {
        "id": "66cc03405dcb46c8",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.valveInjOpenD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2160,
        "wires": [
            [
                "58067390fd1afbe5"
            ]
        ]
    },
    {
        "id": "cde3638b721396c5",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.flowRatePumpA",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2220,
        "wires": [
            [
                "c956be673c13817f"
            ]
        ]
    },
    {
        "id": "b4e1336fa45325fb",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.flowRatePumpB",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2260,
        "wires": [
            [
                "2cfa8ebc12268e60"
            ]
        ]
    },
    {
        "id": "aa6b98a0780e9ad4",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.flowRatePumpC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2300,
        "wires": [
            [
                "5133cf01a3b0c917"
            ]
        ]
    },
    {
        "id": "78998a2d94a0b339",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.flowRatePumpD",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2340,
        "wires": [
            [
                "b5f5ee9e065daf6d"
            ]
        ]
    },
    {
        "id": "e72f476f9c2e4c57",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "Create Payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataRateValves.chillerDetected",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2400,
        "wires": [
            [
                "e84755a78a1d4a44"
            ]
        ]
    },
    {
        "id": "0b7fe698c94aad56",
        "type": "ui_template",
        "z": "10298351f754cc63",
        "d": true,
        "group": "56c7a41708ec20f4",
        "name": "HotChip1 DualGuage",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script src=\"/myjs/RGraph/RGraph.common.core.js\" ></script>\n<script src=\"/myjs/RGraph/RGraph.gauge.js\" ></script>\n\n<script language=\"javascript\" type=\"text/javascript\">\n\n           (function(scope){ \n                scope.$watch('msg', function(msg) {\n                   hotchip1Gauge.value=[msg.read, msg.set];\n                   hotchip1Gauge.grow();\n                });\n            })(scope);\n            \n            var hotchip1Gauge = new RGraph.Gauge({\n                id: 'cvs',\n                min: 0,\n                max: 300,\n                value: [0,0],\n                options: {\n                    titleTop: 'Temp. Read',\n                    titleTopSize: '16',\n                    titleTopFont: 'Impact',\n                    titleTopColor: '#ff8888',\n                    titleTopPos: 0.25,\n                    titleBottom: 'Temp. Set',\n                    titleBottomSize: '14',\n                    titleBottomFont: 'Impact',\n                    titleBottomColor: '#8888ff',\n                    titleBottomPos: 0.3,\n                    backgroundColor: 'black',\n                    backgroundGradient: true,\n                    centerpinColor: '#666',\n                    needleSize: [null, 50],\n                    needleColors: ['Gradient(transparent:yellow:orange:#ff8888:#ff8888)', \n                                    'Gradient(transparent:cyan:green:blue:blue)'],\n                    textColor: 'white',\n                    tickmarksBigColor: 'white',\n                    tickmarksMediumColor: 'white',\n                    tickmarksSmallColor: 'white',\n                    borderWidth: 1,\n                    borderOuter: '#666',\n                    borderInner: '#3333',\n                    colorsRanges: [\n                                    [0,100, 'rgba(0,255,0,0.6)'], \n                                    [100,200,'rgba(255,255,0,0.6)'], \n                                    [200,300,'rgba(255,0,0,0.6)']\n                                  ],\n                    textAccessible: true\n                }\n            });\n            hotchip1Gauge.grow();\n\n    </script>\n\n    <canvas id=\"cvs\" width=\"300\" height=\"300\">[No canvas support]</canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1040,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0ceff897f4915b5f",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "0b7fe698c94aad56"
            ]
        ]
    },
    {
        "id": "f90cf4d88a0ae953",
        "type": "subflow:9dfeb25ce4f7592b",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "d7127ac161243887",
                "07e9210dec9c95dc",
                "c14b5c0f52bd5b46",
                "9974ed3c9987377a"
            ]
        ]
    },
    {
        "id": "c14b5c0f52bd5b46",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 220,
        "wires": [
            [
                "3ddbdcbebda7c4f4"
            ]
        ]
    },
    {
        "id": "3ddbdcbebda7c4f4",
        "type": "ui_template",
        "z": "10298351f754cc63",
        "d": true,
        "group": "96632e11e1c04c24",
        "name": "HotChip2 DualGuage",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script src=\"/myjs/RGraph/RGraph.common.core.js\" ></script>\n<script src=\"/myjs/RGraph/RGraph.gauge.js\" ></script>\n\n<script language=\"javascript\" type=\"text/javascript\">\n\n           (function(scope){ \n                scope.$watch('msg', function(msg) {\n                   hotchip2Gauge.value=[msg.read, msg.set];\n                   hotchip2Gauge.grow();\n                });\n            })(scope);\n            \n            var hotchip2Gauge = new RGraph.Gauge({\n                id: 'cvsHotchip2',\n                min: 0,\n                max: 300,\n                value: [0,0],\n                options: {\n                    titleTop: 'Temp. Read',\n                    titleTopSize: '16',\n                    titleTopFont: 'Impact',\n                    titleTopColor: '#ff8888',\n                    titleTopPos: 0.25,\n                    titleBottom: 'Temp. Set',\n                    titleBottomSize: '14',\n                    titleBottomFont: 'Impact',\n                    titleBottomColor: '#8888ff',\n                    titleBottomPos: 0.3,\n                    backgroundColor: 'black',\n                    backgroundGradient: true,\n                    centerpinColor: '#666',\n                    needleSize: [null, 50],\n                    needleColors: ['Gradient(transparent:yellow:orange:#ff8888:#ff8888)', \n                                    'Gradient(transparent:cyan:green:blue:blue)'],\n                    textColor: 'white',\n                    tickmarksBigColor: 'white',\n                    tickmarksMediumColor: 'white',\n                    tickmarksSmallColor: 'white',\n                    borderWidth: 1,\n                    borderOuter: '#666',\n                    borderInner: '#3333',\n                    colorsRanges: [\n                                    [0,100, 'rgba(0,255,0,0.6)'], \n                                    [100,200,'rgba(255,255,0,0.6)'], \n                                    [200,300,'rgba(255,0,0,0.6)']\n                                  ],\n                    textAccessible: true\n                }\n            });\n            hotchip2Gauge.grow();\n\n    </script>\n\n    <canvas id=\"cvsHotchip2\" width=\"300\" height=\"300\">[No canvas support]</canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bcecdb0b857356e3",
        "type": "change",
        "z": "10298351f754cc63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "msg",
                "to": "payload.settings.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "read",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1137c8e7569e8c39",
        "type": "subflow:9ff174e82057e50f",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "bcecdb0b857356e3",
                "ac4a631ede0b23a3",
                "8779bbf3c28e4375",
                "9974ed3c9987377a"
            ]
        ]
    },
    {
        "id": "2ad459cb287799ca",
        "type": "subflow:100af8884419f9cb",
        "z": "10298351f754cc63",
        "d": true,
        "name": "",
        "x": 580,
        "y": 560,
        "wires": [
            [
                "ad3832e55788a8b8",
                "722fb160491e46ba",
                "9974ed3c9987377a"
            ]
        ]
    },
    {
        "id": "be011803d50e3b4b",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "d272c65929434b5e",
        "type": "debug",
        "z": "10298351f754cc63",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 20,
        "wires": []
    },
    {
        "id": "57316bae9da85799",
        "type": "catch",
        "z": "300c6ec10595d0c1",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "7df5a5928a6de244"
            ]
        ]
    },
    {
        "id": "7df5a5928a6de244",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee943eb7bd7e090d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "bd94f14a5d634934",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 ON",
        "group": "1853ba21.f1b306",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "e0975838cf9ee1c3",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 OFF",
        "group": "1853ba21.f1b306",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "d548842411bb0dc4",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotChip1 Temp.",
        "label": "HotChip1 Temp.",
        "tooltip": "",
        "group": "1853ba21.f1b306",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ]
    },
    {
        "id": "1e96dac9fd22ec64",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotChip1 Manual Settings",
        "info": "",
        "x": 130,
        "y": 140,
        "wires": []
    },
    {
        "id": "db98a9b7aba8d78e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "cf546ed9d9002ff2",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 1 READ Temp",
        "group": "1853ba21.f1b306",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "d63b8e5e8400c98c",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotChip 1 Gauge",
        "group": "1853ba21.f1b306",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotChip 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "fdee816960890f3e",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea1b246a42d11d1d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "c59bbdbf3d457864",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 ON",
        "group": "b861fb62.1b9f38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "20863aedfccded9e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 OFF",
        "group": "b861fb62.1b9f38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "952d85c8374612e2",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotChip2 Temp.",
        "label": "HotChip2 Temp.",
        "tooltip": "",
        "group": "b861fb62.1b9f38",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ]
    },
    {
        "id": "62d022fdb28ea969",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotChip2 Manual Settings",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "070bab2db6f2b72e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 640,
        "wires": []
    },
    {
        "id": "35de6ea470a2f387",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotChip 2 READ Temp",
        "group": "b861fb62.1b9f38",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "d245c94c3b8c1879",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotChip 2 Gauge",
        "group": "b861fb62.1b9f38",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotChip 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 850,
        "y": 580,
        "wires": []
    },
    {
        "id": "226fccf388a2819b",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "1a7472df8b764b4d",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "085af6b1346ef1f2",
        "type": "subflow:dcba5a408b90db4f",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "db98a9b7aba8d78e",
                "fb770d51f3bd1d0c"
            ]
        ]
    },
    {
        "id": "b93496c608631d8e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 ON",
        "group": "1f3aa579c5b4973b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "2b724d782dc8f17c",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 OFF",
        "group": "1f3aa579c5b4973b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "c8065569cab5ac58",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotCoil1 Temp.",
        "label": "HotCoil1 Temp.",
        "tooltip": "",
        "group": "1f3aa579c5b4973b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 980,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ]
    },
    {
        "id": "628222c3b1be2783",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil1 Manual Settings",
        "info": "",
        "x": 130,
        "y": 780,
        "wires": []
    },
    {
        "id": "c3e8210705f25c3e",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 960,
        "wires": []
    },
    {
        "id": "2831b497b733e9af",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 1 READ Temp",
        "group": "1f3aa579c5b4973b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "6474c5938e4295c7",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil 1 Gauge",
        "group": "1f3aa579c5b4973b",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotCoil 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 900,
        "wires": []
    },
    {
        "id": "0929c7c58733fb85",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 820,
        "wires": []
    },
    {
        "id": "023f4d2993b3c946",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 860,
        "wires": []
    },
    {
        "id": "d38e9af0c78c2594",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 ON",
        "group": "99486f5374ae4c69",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "eb84ab456aa5fa4e",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 OFF",
        "group": "99486f5374ae4c69",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "4ac3248f838ec506",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider HotCoil2 Temp.",
        "label": "HotCoil2 Temp.",
        "tooltip": "",
        "group": "99486f5374ae4c69",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "SliderTemperature",
        "topicType": "str",
        "min": "0",
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ]
    },
    {
        "id": "2df90426796169e7",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil2 Manual Settings",
        "info": "",
        "x": 130,
        "y": 1100,
        "wires": []
    },
    {
        "id": "292a8d4a61032ecd",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2311bde35946f6b8",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button HotCoil 2 READ Temp",
        "group": "99486f5374ae4c69",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "READ Temp (Trigger)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "305843c9398f88fc",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "HotCoil 2 Gauge",
        "group": "99486f5374ae4c69",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "HotCoil 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 850,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ff4929bf5f53563a",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! ON & OFF switches \"Remote\"-LED on device, but doesn't do anything else it seems",
        "info": "",
        "x": 320,
        "y": 1140,
        "wires": []
    },
    {
        "id": "775dcc26f22ba832",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "!!! To switch device OFF -> Set Temp. to 0 degC",
        "info": "",
        "x": 200,
        "y": 1180,
        "wires": []
    },
    {
        "id": "45bf714486772285",
        "type": "subflow:fc608604922b7267",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "7f37c2c86473f466",
                "49e34232260e0df0"
            ]
        ]
    },
    {
        "id": "03f169e50b993f72",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button READ ReactIR Data",
        "group": "f92bad53a3851b4d",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "READ ReactIR Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "READ",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "45bf714486772285"
            ]
        ],
        "outputLabels": [
            "HOTPLATE"
        ],
        "info": "test"
    },
    {
        "id": "9ad8608e4032fe17",
        "type": "ui_template",
        "z": "300c6ec10595d0c1",
        "group": "f92bad53a3851b4d",
        "name": "ReactIR 702L 1 Data",
        "order": 2,
        "width": 24,
        "height": 10,
        "format": "<canvas id=\"line-chart3\" width=\"800\" height=\"250\"></canvas>\n\n<script>\n    (function(scope) {\n        console.log('Position 1');\n        console.dir(scope);\n        scope.$watch('msg.payload', function(data) {\n            console.log('Position 2');\n            console.dir(data);\n\n            new Chart(document.getElementById(\"line-chart3\"), {\n                type: 'scatter',\n                data: {\n                    datasets : data\n                },\n                options: {\n                    animation: false,\n                    scales: {\n                    x: {\n                        offset: false,\n                        ticks: {\n                            major: {\n                                enabled: false,\n                            },\n                        },\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'ReactIR Ouput',\n                }\n                }\n            });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "d2ecd16fb1b31060",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "ReactIR 702L",
        "info": "",
        "x": 90,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a12bd5bd4e543801",
        "type": "comment",
        "z": "300c6ec10595d0c1",
        "name": "SF10 Vapourtec",
        "info": "",
        "x": 100,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d5862377158df061",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Remote Enable",
        "group": "3aec7fe7cbf92af0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Remote Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "REMOTEEN",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "227b467f42b0481d",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow",
        "label": "Set Flow",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 8,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 140,
        "y": 2000,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "75074fc3622b1096",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Start",
        "group": "3aec7fe7cbf92af0",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "START",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "0f4b414cea8dded2",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Stop",
        "group": "3aec7fe7cbf92af0",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "STOP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1800,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "62782e3e8c03e215",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve A",
        "group": "3aec7fe7cbf92af0",
        "order": 5,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE A",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1860,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "671712da7121303d",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Valve B",
        "group": "3aec7fe7cbf92af0",
        "order": 6,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Valve B",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "VALVE B",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1900,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "b61600ff0537bdb5",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: FLOW",
        "group": "3aec7fe7cbf92af0",
        "order": 7,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: FLOW",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE FLOW",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1960,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "c2b2459c0b1bcfc4",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: REG",
        "group": "3aec7fe7cbf92af0",
        "order": 9,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: REG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE REG",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 2040,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "d44c970a8826f259",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: DOSE",
        "group": "3aec7fe7cbf92af0",
        "order": 11,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: DOSE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE DOSE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 2120,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "88c436f2f31a8145",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: GAS",
        "group": "3aec7fe7cbf92af0",
        "order": 13,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: GAS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE GAS",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 2200,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "a5ec258657adaa7a",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Mode: RAMP",
        "group": "3aec7fe7cbf92af0",
        "order": 15,
        "width": 12,
        "height": 1,
        "passthru": false,
        "label": "Mode: RAMP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MODE RAMP",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 2280,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "633348f00efe9880",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Set Flow (Gas)",
        "label": "Set Flow (Gas)",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 14,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderGasFlow",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 160,
        "y": 2240,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "9c9b6a377fa91de8",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Pressure",
        "label": "Set Pressure",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 10,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderPressure",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 140,
        "y": 2080,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "f19469de1864781f",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Dose",
        "label": "Set Dose",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 12,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderDose",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "e7070f7b4ca923b4",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Start",
        "label": "Set Ramp Start",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 16,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStart",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2320,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "7efe3e9feca267ab",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Stop",
        "label": "Set Ramp Stop",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 18,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampStop",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2360,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "27a750e06688546a",
        "type": "ui_slider",
        "z": "300c6ec10595d0c1",
        "name": "Slider Ramp Time",
        "label": "Set Ramp Time",
        "tooltip": "",
        "group": "3aec7fe7cbf92af0",
        "order": 20,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "SliderRampTime",
        "topicType": "str",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "className": "",
        "x": 150,
        "y": 2400,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "1f15d212085f5ab1",
        "type": "subflow:3bf455a61dc4725c",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 460,
        "y": 1700,
        "wires": [
            [
                "0bcc7d97cf5832d2"
            ]
        ]
    },
    {
        "id": "18b973077a6e919a",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 1540,
        "wires": []
    },
    {
        "id": "07a098bc2b88f2cf",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "ReactIR Example Data Array",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"0\":-0.010684138241292392,\"1\":-0.012374692380062918,\"2\":-0.012952069561954953,\"3\":-0.011982079901435527,\"4\":-0.010632289048637887,\"5\":-0.009987224897544082,\"6\":-0.009568639148265876,\"7\":-0.008476732219359844,\"8\":-0.007081617859387941,\"9\":-0.006450377068652282,\"10\":-0.006738134734837149,\"11\":-0.007345521116044885,\"12\":-0.007954937715557085,\"13\":-0.008321813791262614,\"14\":-0.007767173439269033,\"15\":-0.006122019772008444,\"16\":-0.004552152958396135,\"17\":-0.004163790364264221,\"18\":-0.0043869445439553185,\"19\":-0.004092846599964359,\"20\":-0.0034517597169001516,\"21\":-0.002953970532387885,\"22\":-0.0015361935467872578,\"23\":0.0019957576888188634,\"24\":0.006006845107636495,\"25\":0.006798217902982769,\"26\":0.004195248049010078,\"27\":0.0017350956708127251,\"28\":0.0011269749073226404,\"29\":0.000997411406534706,\"30\":0.00040419524416297807,\"31\":0.0005839613199454819,\"32\":0.0020776342823618714,\"33\":0.003024282560651864,\"34\":0.0022709206820975174,\"35\":0.0015528924241511733,\"36\":0.0025447750632332056,\"37\":0.004323418903264548,\"38\":0.005532440308315408,\"39\":0.006779770100902274,\"40\":0.008105039461686017,\"41\":0.00736186865357144,\"42\":0.004143330330496616,\"43\":0.001888072340979129,\"44\":0.0026087523962959385,\"45\":0.003784640847822529,\"46\":0.002116689862981892,\"47\":-0.0005915473085271762,\"48\":-0.0007657687507507742,\"49\":0.0011106566061983567,\"50\":0.0012049414706910325,\"51\":-0.0013294364999030521,\"52\":-0.0034333559284571253,\"53\":-0.003965710675149046,\"54\":-0.0042987098999791055,\"55\":-0.004867449874912793,\"56\":-0.004123944774874439,\"57\":-0.0017668133452339956,\"58\":-0.0000820794855693635,\"59\":-0.00043644781759884823,\"60\":-0.0007067663101524161,\"61\":0.0017308491349488254,\"62\":0.006476980770018944,\"63\":0.010542979762532136,\"64\":0.012584850817305905,\"65\":0.013551928374746785,\"66\":0.013291590085044373,\"67\":0.01119237042343815,\"68\":0.008339185140982325,\"69\":0.006048939023010462,\"70\":0.004166779278517377,\"71\":0.00231244795441597,\"72\":0.0010831176138098885,\"73\":0.0007327260997143303,\"74\":0.00009084765460549617,\"75\":-0.0015008901938384101,\"76\":-0.002954418179219785,\"77\":-0.0029416967637467895,\"78\":-0.0015219276170194752,\"79\":0.0007005893899422794,\"80\":0.004122456797550565,\"81\":0.00833220419715531,\"82\":0.009750230002708436,\"83\":0.006145559989207039,\"84\":0.001601190864973898,\"85\":0.0007494507121523242,\"86\":0.004446528572551645,\"87\":0.009286401055181828,\"88\":0.009961834858831913,\"89\":0.006153679260192136,\"90\":0.0018829285022500342,\"91\":-0.0001514183958861205,\"92\":0.0003564438118777871,\"93\":0.0019161056906176314,\"94\":0.0028231312448752316,\"95\":0.0034525203001760795,\"96\":0.005423239630738806,\"97\":0.008324356685139015,\"98\":0.009099556015110696,\"99\":0.006269421260411574,\"100\":0.0024490474619534132,\"101\":0.0011010931885015276,\"102\":0.0024471760290089932,\"103\":0.0028629976550260125,\"104\":-0.00039050749908156693,\"105\":-0.0052448169202464635,\"106\":-0.007460137670604728,\"107\":-0.00515673449936067,\"108\":-0.0008940825201836056,\"109\":0.0004900315855975459,\"110\":-0.002539656917266669,\"111\":-0.006530269794459473,\"112\":-0.007733472928401095,\"113\":-0.006101895046255809,\"114\":-0.004619914932356824,\"115\":-0.004984621583492726,\"116\":-0.005699493449573778,\"117\":-0.005264301152587795,\"118\":-0.004719768457550879,\"119\":-0.005828650992942143,\"120\":-0.0079234990065572,\"121\":-0.008786389261274574,\"122\":-0.007783170949384302,\"123\":-0.006522188273483772,\"124\":-0.006580287987828604,\"125\":-0.007859944309542418,\"126\":-0.009173286536681967,\"127\":-0.009316162302602165,\"128\":-0.007810700145599656,\"129\":-0.005435371656516178,\"130\":-0.00394368955879286,\"131\":-0.004214005287232037,\"132\":-0.005204856801409246,\"133\":-0.005759229546926117,\"134\":-0.006330975341013973,\"135\":-0.007943681445096676,\"136\":-0.010325842182848675,\"137\":-0.012581342459855302,\"138\":-0.014660187378719781,\"139\":-0.016703957092058967,\"140\":-0.01762324335556626,\"141\":-0.01633144633327724,\"142\":-0.014063815362120822,\"143\":-0.013032863714227095,\"144\":-0.012756905052909157,\"145\":-0.010518574609822084,\"146\":-0.006219067518581375,\"147\":-0.003786270433548269,\"148\":-0.005995241384226795,\"149\":-0.011062318248897503,\"150\":-0.014517321584469464,\"151\":-0.013258446271011783,\"152\":-0.007970000315047488,\"153\":-0.0019797837916677007,\"154\":0.0007238085760951443,\"155\":-0.0015731454085090016,\"156\":-0.0060557805437428894,\"157\":-0.008133295294144974,\"158\":-0.006858596398302998,\"159\":-0.006103358430167212,\"160\":-0.008942222406951725,\"161\":-0.013159090295357497,\"162\":-0.014243835647597392,\"163\":-0.011717293653096877,\"164\":-0.009630417736778474,\"165\":-0.010988934387399167,\"166\":-0.014371951777404494,\"167\":-0.015914004356007056,\"168\":-0.01343129102971774,\"169\":-0.007897561410989087,\"170\":-0.0021681999322415405,\"171\":0.0009091055559944163,\"172\":0.00016123363493813936,\"173\":-0.0036425211187770443,\"174\":-0.008497959946077376,\"175\":-0.012056440878573696,\"176\":-0.013110599338409667,\"177\":-0.012320331434724647,\"178\":-0.011377655773494606,\"179\":-0.011359788702464024,\"180\":-0.011745615062945535,\"181\":-0.011599293382089869,\"182\":-0.011268090524680053,\"183\":-0.012002411334852501,\"184\":-0.013975314979495989,\"185\":-0.015692771355061894,\"186\":-0.015794485928164646,\"187\":-0.01486546592621228,\"188\":-0.014504888305030782,\"189\":-0.015181720726633211,\"190\":-0.01592773223534642,\"191\":-0.01584302476494663,\"192\":-0.015226751975665266,\"193\":-0.014924234084130619,\"194\":-0.015300164655419073,\"195\":-0.01592413941511233,\"196\":-0.0158091537969987,\"197\":-0.014209448611241425,\"198\":-0.01164128647261352,\"199\":-0.009921810185613172,\"200\":-0.010519429303366912,\"201\":-0.012967746475217316,\"202\":-0.015234335589809309,\"203\":-0.015877057938858633,\"204\":-0.015521344391286785,\"205\":-0.01565153278415361,\"206\":-0.01652378347000944,\"207\":-0.01688661926961936,\"208\":-0.015745699335829203,\"209\":-0.013711603231517351,\"210\":-0.01231749947924555,\"211\":-0.012333009654214532,\"212\":-0.013133161538762008,\"213\":-0.013718203872688501,\"214\":-0.013716042953294887,\"215\":-0.013160860751682109,\"216\":-0.0117575504554795,\"217\":-0.009180300833363176,\"218\":-0.0062257343970449994,\"219\":-0.004754591180514016,\"220\":-0.005846479275815146,\"221\":-0.008577569388946726,\"222\":-0.011038804177894651,\"223\":-0.012212262649348292,\"224\":-0.012465625814048968,\"225\":-0.012401514917143044,\"226\":-0.012064500397796725,\"227\":-0.01140789735329975,\"228\":-0.010718500512662477,\"229\":-0.010163441323079725,\"230\":-0.009501361836891731,\"231\":-0.008615092937634398,\"232\":-0.007968978670602332,\"233\":-0.008151294629307922,\"234\":-0.009119045446303545,\"235\":-0.010169067432650726,\"236\":-0.010657378611336407,\"237\":-0.010540697638274307,\"238\":-0.01031726300994683,\"239\":-0.010638456889403491,\"240\":-0.011706218638069851,\"241\":-0.012867887588513377,\"242\":-0.013022474190908958,\"243\":-0.011759678860090786,\"244\":-0.009856738959031185,\"245\":-0.008336722388995854,\"246\":-0.007548791003840447,\"247\":-0.007399296963764396,\"248\":-0.007871167719526432,\"249\":-0.008772886374727772,\"250\":-0.009394981118819173,\"251\":-0.00918727353052152,\"252\":-0.008578969413870425,\"253\":-0.008404838766661827,\"254\":-0.008521842815076668,\"255\":-0.0074792336480579286,\"256\":-0.004225550345161815,\"257\":-0.0008650114002219989,\"258\":-0.00044075212595181667,\"259\":-0.0005442611082186491,\"260\":-0.0006116544785665149,\"261\":-0.002375918341736287,\"262\":-0.005745976964951722,\"263\":-0.008987498609480579,\"264\":-0.01056106565575126,\"265\":-0.010370742289442274,\"266\":-0.009381310946292977,\"267\":-0.008617754836997386,\"268\":-0.008738988582790182,\"269\":-0.009884133566270003,\"270\":-0.011035534063861058,\"271\":-0.010490740725655352,\"272\":-0.008158951698486475,\"273\":-0.006130492336014156,\"274\":-0.00630611844788261,\"275\":-0.008178821583899605,\"276\":-0.009610926480203811,\"277\":-0.009484234931186228,\"278\":-0.008627488112366905,\"279\":-0.0083329811081634,\"280\":-0.008854762579930852,\"281\":-0.009536288777860566,\"282\":-0.009700394082323456,\"283\":-0.009228965919267524,\"284\":-0.008657177923847464,\"285\":-0.008637936533351678,\"286\":-0.009127727341348783,\"287\":-0.009438302753245486,\"288\":-0.009342850361607915,\"289\":-0.009410381894841214,\"290\":-0.009938373156811573,\"291\":-0.010413857197293121,\"292\":-0.010412921782569654,\"293\":-0.010243783441794342,\"294\":-0.010143756739530595,\"295\":-0.00959675908233981,\"296\":-0.008287916025659764,\"297\":-0.007116349340552271,\"298\":-0.007200938557692812,\"299\":-0.008232655714740874,\"300\":-0.008903933995770736,\"301\":-0.008756030497131449,\"302\":-0.00843863214319177,\"303\":-0.008308283136553955,\"304\":-0.008029033458146902,\"305\":-0.007676174925442945,\"306\":-0.007982664608063931,\"307\":-0.009084646452146477,\"308\":-0.010062284885094615,\"309\":-0.010199776413561363,\"310\":-0.009803490089302556,\"311\":-0.009353662640167274,\"312\":-0.008757285666256541,\"313\":-0.00802617208924065,\"314\":-0.007857509972385162,\"315\":-0.00874332542167882,\"316\":-0.01006529586154319,\"317\":-0.010867608432730104,\"318\":-0.011072490220385676,\"319\":-0.011205895623497492,\"320\":-0.011298901263023983,\"321\":-0.010895040784020689,\"322\":-0.009983887655805561,\"323\":-0.0091392814492657,\"324\":-0.00869699129719458,\"325\":-0.00841590705847969,\"326\":-0.008019877917256274,\"327\":-0.00760755110677249,\"328\":-0.007430193940330618,\"329\":-0.007565391368013561,\"330\":-0.007856260210771246,\"331\":-0.008009468744985464,\"332\":-0.007871117537883271,\"333\":-0.0077303216327411295,\"334\":-0.008143652605737794,\"335\":-0.009210636394107845,\"336\":-0.01019698686873231,\"337\":-0.010229510477059712,\"338\":-0.009314211626470113,\"339\":-0.008326511382299288,\"340\":-0.007914028548210056,\"341\":-0.007885369526925284,\"342\":-0.00783758679646004,\"343\":-0.007828529903594646,\"344\":-0.008123793800902246,\"345\":-0.008689958429318816,\"346\":-0.00917623860766593,\"347\":-0.009181010946120033,\"348\":-0.008649384310374616,\"349\":-0.008260673261811294,\"350\":-0.008933654396000412,\"351\":-0.01025051393823626,\"352\":-0.010099446793376947,\"353\":-0.007317565805655559,\"354\":-0.0040251783979352845,\"355\":-0.0036678910533448836,\"356\":-0.006671194324131972,\"357\":-0.010188369492462523,\"358\":-0.011723110763648821,\"359\":-0.011320882215319282,\"360\":-0.010231521089279763,\"361\":-0.009101435688760817,\"362\":-0.008513544624440601,\"363\":-0.009195815706185464,\"364\":-0.010471179665901258,\"365\":-0.010356027944137265,\"366\":-0.008355819227922603,\"367\":-0.006805680122975285,\"368\":-0.007591700134011402,\"369\":-0.009335467377892962,\"370\":-0.009306807431544285,\"371\":-0.007073019552264535,\"372\":-0.00486406473038766,\"373\":-0.004172614252772345,\"374\":-0.004025307161651233,\"375\":-0.0026791469262270745,\"376\":-0.0004272909264151272,\"377\":0.0004764083497919629,\"378\":-0.0014619173602367812,\"379\":-0.004935297292912369,\"380\":-0.007230455444251094,\"381\":-0.007380411467955434,\"382\":-0.006766100227468576,\"383\":-0.006953548049542861,\"384\":-0.007718830059622268,\"385\":-0.00814441128330924,\"386\":-0.008279004112229696,\"387\":-0.00875560812712953,\"388\":-0.009299015280149361,\"389\":-0.008564329004349919,\"390\":-0.005944639705416119,\"391\":-0.003328231149246113,\"392\":-0.0038129093974076486,\"393\":-0.008349062655011655,\"394\":-0.014003229965280414,\"395\":-0.016017909890632367,\"396\":-0.013159234943481892,\"397\":-0.009166147680755878,\"398\":-0.008252881077421835,\"399\":-0.010415374011224842,\"400\":-0.012042992052383072,\"401\":-0.010847259530602315,\"402\":-0.008092550223553499,\"403\":-0.006234922111867051,\"404\":-0.0060739778025298095,\"405\":-0.006903644080235262,\"406\":-0.008053743385315828,\"407\":-0.009433047085931366,\"408\":-0.010916516983244938,\"409\":-0.011752057662827478,\"410\":-0.011095923877022682,\"411\":-0.009266918304155368,\"412\":-0.007695347949691052,\"413\":-0.007596077026482193,\"414\":-0.009199881307834036,\"415\":-0.011426764951305459,\"416\":-0.012273641171042167,\"417\":-0.010619336083454426,\"418\":-0.007021637935044365,\"419\":-0.002748854382340425,\"420\":0.0006618534935951299,\"421\":0.00144768208551934,\"422\":-0.0010298432916535176,\"423\":-0.0045716073855153125,\"424\":-0.006009669705139433,\"425\":-0.004809482239659845,\"426\":-0.0028308805058011774,\"427\":-0.0010998716419646827,\"428\":0.0015051160589907438,\"429\":0.005607992795342307,\"430\":0.008838305360481866,\"431\":0.009111638544829093,\"432\":0.010349289068973996,\"433\":0.016383907369786593,\"434\":0.021555499242173422,\"435\":0.017470181090686723,\"436\":0.006318510590053904,\"437\":-0.004764599028559511,\"438\":-0.011445741280522538,\"439\":-0.01657971185084677,\"440\":-0.026368774943374175,\"441\":-0.045091344958371395,\"442\":-0.06785521640077166,\"443\":-0.06964495693442534,\"444\":-0.04392130325228276,\"445\":-0.007079710115190004,\"446\":0.014164593287812052,\"447\":0.011000423198110348,\"448\":0.011650229236014893,\"449\":0.019415884763369005,\"450\":0.018795479442603496,\"451\":-0.0023232535480938415,\"452\":-0.03721794707123974,\"453\":-0.059726226045646445,\"454\":-0.035569281647629965,\"455\":-0.014040457840476576,\"456\":-0.02280661375324401,\"457\":-0.07063728094922274,\"458\":-0.08867180125259788,\"459\":0.043465487053630326,\"460\":0.15618146443777572,\"461\":0.19729108370693382,\"462\":0.15210949003035212,\"463\":0.07388327381873774,\"464\":0.02687949615549444,\"465\":0.01721585129715643,\"466\":0.000045408421326209404,\"467\":-0.025979404442109957,\"468\":-0.03587914214760643,\"469\":-0.027857862542458325,\"470\":-0.013861426604253022,\"471\":-0.004111679594376793,\"472\":0.005740886724863183,\"473\":0.022047210959543997,\"474\":0.035129081233106686,\"475\":0.029456581558141116,\"476\":0.010997316308461505,\"477\":-0.005667274007540341,\"478\":-0.014543609632418915,\"479\":-0.01799242112067776,\"480\":-0.018048306616062278,\"481\":-0.011675204837374201,\"482\":0.005582375929777244,\"483\":0.02490771847816606,\"484\":0.03565268988085995,\"485\":0.036238463083919495,\"486\":0.018641811277557895,\"487\":-0.008262487549373358,\"488\":-0.021307225012512424,\"489\":-0.033613552845287664,\"490\":-0.05882480421299338,\"491\":-0.06269816460234413,\"492\":-0.0483868331351708,\"493\":0.011522003861045375,\"494\":0.06403445715642365,\"495\":0.07143998668619958,\"496\":0.059042284818025266,\"497\":0.07146550093799223,\"498\":0.07490183877973788,\"499\":0.05791098419390886,\"500\":0.03766342434430159,\"501\":0.04242087918445684,\"502\":0.0512254495521849,\"503\":0.03334712393729053,\"504\":0.0017894030799291507,\"505\":-0.00031987479776868184,\"506\":0.026919423506205426,\"507\":0.056669725484189956,\"508\":0.06199364486486096,\"509\":0.06276036530669428,\"510\":0.06713361639914289,\"511\":0.0410785895878032,\"512\":-0.0009986643694129202,\"513\":-0.027326888916673637,\"514\":-0.031077424019350753,\"515\":-0.022529926086066444,\"516\":-0.017859118443664567,\"517\":-0.018076019542661928,\"518\":-0.020424727125291704,\"519\":-0.020215970859441122,\"520\":-0.016694928703616222,\"521\":-0.012589232261532054,\"522\":-0.010346458775831091,\"523\":-0.009000510898182094,\"524\":-0.006325263914833088,\"525\":-0.003995907512739055,\"526\":-0.005930930612348853,\"527\":-0.010142157981846126,\"528\":-0.009129335297681897,\"529\":-0.002318396063247694,\"530\":0.0032549572222303194,\"531\":0.0031693728914778496,\"532\":0.0017835066581571336,\"533\":0.0030129342579326653,\"534\":0.00416934085670054,\"535\":0.0018773716662365276,\"536\":-0.0014977651613911633,\"537\":-0.0033738291835286923,\"538\":-0.004493397699216153,\"539\":-0.0062029083768405475,\"540\":-0.007497556690568823,\"541\":-0.0075577814038668995,\"542\":-0.00758791772249864,\"543\":-0.008312006686272948,\"544\":-0.00813158615133107,\"545\":-0.006115284928374339,\"546\":-0.00386853675383977,\"547\":-0.00283126803279119,\"548\":-0.0020867543445753506,\"549\":-0.0006084958884838262,\"550\":0.0006482786797177168,\"551\":0.00021795480555852458,\"552\":-0.0012881448493030465,\"553\":-0.0022063051422782773,\"554\":-0.001999524523978595,\"555\":-0.000924214618936072,\"556\":0.0008914489643998606,\"557\":0.002673215417475775,\"558\":0.0027226061631988657,\"559\":0.0011941635379916495,\"560\":0.0005774488875709871,\"561\":0.002147926393915072,\"562\":0.0044052778315940245,\"563\":0.005411021768563526,\"564\":0.005999861947245709,\"565\":0.007353319728477855,\"566\":0.0076238721009049045,\"567\":0.004964926476861709,\"568\":0.002001551731389251,\"569\":0.001729051837984544,\"570\":0.003604019350657582,\"571\":0.0048257604025832386,\"572\":0.0050508148483146866,\"573\":0.006733429649990416,\"574\":0.010091665614794078,\"575\":0.011573680984383225,\"576\":0.009395739890616785,\"577\":0.0071712699814959705,\"578\":0.0074858379993647285,\"579\":0.008905647165047891,\"580\":0.009113973847041257,\"581\":0.008072575354356095,\"582\":0.006518625144751994,\"583\":0.004346150185803612,\"584\":0.0023122429324840227,\"585\":0.002459854231430316,\"586\":0.005767185967853221,\"587\":0.009753365278693575,\"588\":0.010246664490735627,\"589\":0.0076694673015483905,\"590\":0.004944700490026422,\"591\":0.0029181962253964516,\"592\":0.0013648714683711085,\"593\":0.0006452528523163396,\"594\":0.000852211730332135,\"595\":0.0008322584440652802,\"596\":-0.0004306014543974331,\"597\":-0.002141552273282255,\"598\":-0.003106922560492686,\"599\":-0.003522378160746022,\"600\":-0.004282836395192583,\"601\":-0.005608736808615317,\"602\":-0.006814233646213701,\"603\":-0.007034786814201351,\"604\":-0.005819090967604118,\"605\":-0.003300185382323502,\"606\":-0.00038356370042236145,\"607\":0.0018313651134160345,\"608\":0.0035473391212161942,\"609\":0.005707343754251319,\"610\":0.0077356305654408845,\"611\":0.007887605750017549,\"612\":0.007316567825096887,\"613\":0.008932928950200042,\"614\":0.012745023764599054,\"615\":0.014839855326306784,\"616\":0.012812338714812467,\"617\":0.010801096301268368,\"618\":0.0120660129160549,\"619\":0.01493836415597467,\"620\":0.015797760757674504,\"621\":0.014637510623719431,\"622\":0.01391418513222956,\"623\":0.013087022854583113,\"624\":0.010132075169214452,\"625\":0.006500088691472702,\"626\":0.004796830338625428,\"627\":0.004352397493636517,\"628\":0.0027295799548276802,\"629\":0.00022348879533390533,\"630\":-0.0003419742696781542,\"631\":0.001987083357467072,\"632\":0.004410632842293886,\"633\":0.0037859591834087524,\"634\":0.0025918432992604544,\"635\":0.003756669760135878,\"636\":0.004230200132224788,\"637\":0.0011622262411566566,\"638\":-0.00248229556843427,\"639\":-0.0036814275159340343,\"640\":-0.00260510016424911,\"641\":-0.0012404599121549377,\"642\":-0.0005867021419216895,\"643\":0.00018254035659075806,\"644\":0.0013130536426891207,\"645\":0.0013407087317538497,\"646\":-0.0007098548326450924,\"647\":-0.003369838892931402,\"648\":-0.0044329487037115724,\"649\":-0.003147541341119763,\"650\":-0.0006572540274142494,\"651\":0.0010088767333480545,\"652\":0.0006497787526876395,\"653\":-0.001245664843965056,\"654\":-0.0031272597212934476,\"655\":-0.0038773310352348354,\"656\":-0.004010009408135641,\"657\":-0.004205108922246038,\"658\":-0.003737959670517573,\"659\":-0.0027833881190135307,\"660\":-0.0027434589459113443,\"661\":-0.0038809191963818683,\"662\":-0.005037000278616252,\"663\":-0.005166653588540368,\"664\":-0.0043764437619458535,\"665\":-0.003967044909425521,\"666\":-0.004787101206416306,\"667\":-0.006177673475699239,\"668\":-0.00727660015460067,\"669\":-0.007804948928102104,\"670\":-0.007808924579292993,\"671\":-0.007499018862608732,\"672\":-0.007288989580866235,\"673\":-0.007437687369010245,\"674\":-0.0076326935579582415,\"675\":-0.007403779243030427,\"676\":-0.006757098146440341,\"677\":-0.0060811063271396055,\"678\":-0.005666292605183627,\"679\":-0.005589071726267007,\"680\":-0.005732648033107047,\"681\":-0.0057700176170560145,\"682\":-0.005495189765600942,\"683\":-0.0051978095106078575,\"684\":-0.005370287471028268,\"685\":-0.005946841219766003,\"686\":-0.006290715063638057,\"687\":-0.006122279942231034,\"688\":-0.005852449668594592,\"689\":-0.005823300658033863,\"690\":-0.005790498034460447,\"691\":-0.0054851543730339205,\"692\":-0.005189632130287905,\"693\":-0.005309952531204119,\"694\":-0.005724746781595647,\"695\":-0.006034608464973339,\"696\":-0.006183028008453829,\"697\":-0.006377962400404108,\"698\":-0.006575641093357995,\"699\":-0.006515681328342468,\"700\":-0.006206120534004807,\"701\":-0.005966805098814276,\"702\":-0.00598268438895205,\"703\":-0.006155228126614257,\"704\":-0.006394626773004313,\"705\":-0.006727970065645562,\"706\":-0.0071128945570103075,\"707\":-0.007432980154998775,\"708\":-0.007736129892337995,\"709\":-0.008231392235316317,\"710\":-0.008415678553739583,\"711\":-0.006927759474494162,\"712\":-0.004318691880422726,\"713\":-0.002389554946160348,\"714\":-0.0017634823706423517,\"715\":-0.002292831949582215,\"716\":-0.004053433027411929,\"717\":-0.007300842089044651,\"718\":-0.010781307270348156,\"719\":-0.011848210882549599,\"720\":-0.010864935822885684,\"721\":-0.01012209704593989,\"722\":-0.010358013142561802,\"723\":-0.010472605641183463,\"724\":-0.008767834375497802,\"725\":-0.005224199772084283,\"726\":-0.0017038310030306747,\"727\":0.0003353956705145287,\"728\":0.0006807918797480957,\"729\":-0.00007392868576589394,\"730\":-0.0012118610047722638,\"731\":-0.002347970997743017,\"732\":-0.0033488788345962086,\"733\":-0.0040705916303299715,\"734\":-0.004412792662287263,\"735\":-0.004524849748053427,\"736\":-0.004652498225760414,\"737\":-0.004753772162811673,\"738\":-0.004579966245476504,\"739\":-0.004249831783985975,\"740\":-0.004350345572592028,\"741\":-0.005182231972338544,\"742\":-0.006239575640800959,\"743\":-0.0068295112983948044,\"744\":-0.0069179414108824205,\"745\":-0.006915760350857186,\"746\":-0.006842961028965682,\"747\":-0.00634433271762658,\"748\":-0.005515767102519308,\"749\":-0.0050371733601427,\"750\":-0.005282094865221311,\"751\":-0.005820166709402207,\"752\":-0.006032387770470537,\"753\":-0.005836589804014523,\"754\":-0.005547025493175734,\"755\":-0.005332835472732173,\"756\":-0.00522322405420119,\"757\":-0.005471965434532396,\"758\":-0.006499712564708139,\"759\":-0.008519770690020162,\"760\":-0.011381024641093614,\"761\":-0.014385903063705435,\"762\":-0.015054068506219589,\"763\":-0.00988958853197722,\"764\":-0.006821074512776535,\"765\":-0.0058241970295926405,\"766\":-0.004154700497033608,\"767\":-0.0025783046165570858,\"768\":-0.001983845824772276,\"769\":-0.002377436990388603,\"770\":-0.0030220107615268918,\"771\":-0.0033741923405518053,\"772\":-0.00372029108631576,\"773\":-0.004550621347082933,\"774\":-0.0056183912104073325,\"775\":-0.00610897543059408,\"776\":-0.005677312435471922,\"777\":-0.004914577583066564,\"778\":-0.004620802835241248,\"779\":-0.0049473708740518435,\"780\":-0.005373362411654189,\"781\":-0.005244850170138025,\"782\":-0.004358631145642926,\"783\":-0.0031401440276626618,\"784\":-0.0022329333389691126,\"785\":-0.0018391802288655155,\"786\":-0.0016648296554719316,\"787\":-0.0016561124444366393,\"788\":-0.0023619502276392627,\"789\":-0.004165248441060231,\"790\":-0.006758384386912752,\"791\":-0.009486922875003162,\"792\":-0.01116718195877946,\"793\":-0.009553095832425062,\"794\":-0.002045890682220987,\"795\":0.011777537587145252,\"796\":0.020844289390711607,\"797\":0.010482599938929896,\"798\":0.0011627537563942002,\"799\":0.0028757989054567067,\"800\":0.00597737984595621,\"801\":0.0008147154466338393,\"802\":-0.01245190020239825,\"803\":-0.02531980604620146,\"804\":-0.03149823976696199,\"805\":-0.031120572660731604,\"806\":-0.025776131713052854,\"807\":-0.01343788243392601,\"808\":0.004052501624161755,\"809\":0.0150358636810241,\"810\":0.015007593911706071,\"811\":0.012955406724148848,\"812\":0.019114268239177744,\"813\":0.02730028263547245,\"814\":0.021415051631096558,\"815\":-0.012184005882522317,\"816\":-0.10097410064387839,\"817\":-0.2354879815082474,\"818\":-0.28950551992322376,\"819\":-0.18120478667284035,\"820\":0.0194743664952849,\"821\":0.13472784976192254,\"822\":0.13156519208786172,\"823\":0.06329629857226736,\"824\":-0.05698236806086835,\"825\":-0.08741691767257041,\"826\":-0.18737314118882423,\"827\":-0.9801840696996956,\"828\":-0.04178393711854483,\"829\":-0.18864623795174898,\"830\":-0.8757158321725185,\"831\":-0.26861322086343464,\"832\":-0.001622790485407355,\"833\":0.2235999093227097,\"834\":0.2751800663447722,\"835\":0.23011365690859367,\"836\":0.040643770628169595,\"837\":-0.08414050566974582,\"838\":0.09142267204738176}",
        "payloadType": "json",
        "x": 160,
        "y": 1500,
        "wires": [
            [
                "18b973077a6e919a",
                "7f37c2c86473f466"
            ]
        ]
    },
    {
        "id": "e4ad0dc6f6435f14",
        "type": "inject",
        "z": "300c6ec10595d0c1",
        "name": "Data Example of data from ReactIR",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"label\":\"ds1\",\"data\":[{\"x\":1677246631553,\"y\":31},{\"x\":1677246631840,\"y\":17},{\"x\":1677246632077,\"y\":31},{\"x\":1677246632329,\"y\":42}],\"backgroundColor\":\"#009900\",\"borderColor\":\"#009900\",\"steppedLine\":false,\"fill\":false,\"borderWidth\":1}]",
        "payloadType": "json",
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "9ad8608e4032fe17"
            ]
        ]
    },
    {
        "id": "0bcc7d97cf5832d2",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 690,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6ef01fd150ca27f7",
        "type": "ui_button",
        "z": "300c6ec10595d0c1",
        "name": "Button Version",
        "group": "3aec7fe7cbf92af0",
        "order": 2,
        "width": 24,
        "height": 1,
        "passthru": false,
        "label": "Version",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "GV",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1640,
        "wires": [
            [
                "1f15d212085f5ab1"
            ]
        ]
    },
    {
        "id": "7f37c2c86473f466",
        "type": "function",
        "z": "300c6ec10595d0c1",
        "name": "Package ReactIR Graph data",
        "func": "var dataFromReactIR = msg.payload.state.data || [];\nvar newMsg = {};\nvar dataPoints = [];\nvar dataPoint = {};\n\nvar dataSets = [];\nvar dataSet = {};\n\nfor (var cntr = 0; cntr < dataFromReactIR.length; cntr++) {\n    dataPoint = {\n        x: cntr,\n        y: dataFromReactIR[cntr.toString()]\n    };\n\n    dataPoints.push(dataPoint);\n};\n\ndataSet = {\n    label: \"ReactIR 1\",\n    data: dataPoints,\n    backgroundColor: \"#009900\",\n    borderColor: \"#009900\",\n    steppedLine: false,\n    fill: false,\n    borderWidth: 1\n};\ndataSets.push(dataSet);\n\nnewMsg.payload = dataSets;\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1460,
        "wires": [
            [
                "9ad8608e4032fe17",
                "cd047ae224c67b57"
            ]
        ]
    },
    {
        "id": "cd047ae224c67b57",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 970,
        "y": 1500,
        "wires": []
    },
    {
        "id": "49e34232260e0df0",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 1540,
        "wires": []
    },
    {
        "id": "fb770d51f3bd1d0c",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "d63b8e5e8400c98c"
            ]
        ]
    },
    {
        "id": "65a2481cb5b467e8",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 580,
        "wires": [
            [
                "d245c94c3b8c1879"
            ]
        ]
    },
    {
        "id": "8709a00be77d04e1",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "6474c5938e4295c7"
            ]
        ]
    },
    {
        "id": "58b143206c552e03",
        "type": "change",
        "z": "300c6ec10595d0c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1220,
        "wires": [
            [
                "305843c9398f88fc"
            ]
        ]
    },
    {
        "id": "92b8f91188065817",
        "type": "subflow:bc1076baf3559e95",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 470,
        "y": 2560,
        "wires": [
            [
                "f3b2a09097bc7261"
            ]
        ]
    },
    {
        "id": "cbf85a1028ca2c93",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotChip1",
        "label": "Temp",
        "tooltip": "",
        "group": "1853ba21.f1b306",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "085af6b1346ef1f2"
            ]
        ]
    },
    {
        "id": "223c2cfc4ef4e0dc",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotChip2",
        "label": "Temp",
        "tooltip": "",
        "group": "b861fb62.1b9f38",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 660,
        "wires": [
            [
                "3f9b6594aa8c35aa"
            ]
        ]
    },
    {
        "id": "e412a469f25af6f3",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotCoil1",
        "label": "Temp.",
        "tooltip": "",
        "group": "1f3aa579c5b4973b",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 980,
        "wires": [
            [
                "51252a654b1de219"
            ]
        ]
    },
    {
        "id": "70f7040d0d0ca47e",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric HotCoil2",
        "label": "Temp.",
        "tooltip": "",
        "group": "99486f5374ae4c69",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "SliderTemperature",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "260",
        "step": "0.1",
        "className": "",
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "dbed2f5899284a6f"
            ]
        ]
    },
    {
        "id": "fe5847013f61ab81",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpAFlowRate",
        "label": "Flow Syn Pump A Flow Rate (mL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "PumpAFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 190,
        "y": 2540,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "aa4a95dee7466e57",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Pump A Flow Rate",
        "label": "Pump A Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 10,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PumpAFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 190,
        "y": 2580,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "2be13bb13a01c1f0",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynValveA",
        "label": "FlowSyn Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynValveA",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 160,
        "y": 3060,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "f3b2a09097bc7261",
        "type": "debug",
        "z": "300c6ec10595d0c1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 710,
        "y": 2560,
        "wires": []
    },
    {
        "id": "7bbed0d731514241",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpCFlowRate",
        "label": "Binary Pump C Flow Rate (uL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "BinaryPumpCFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 190,
        "y": 2700,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "72992e3df441f958",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Bin. Pump C Flow Rate",
        "label": "Bin. Pump C Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 15,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "BinaryPumpCFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 210,
        "y": 2740,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "a48c26ea8e2f2189",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpDFlowRate",
        "label": "Binary Pump D Flow Rate (uL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "BinaryPumpDFlowRate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 190,
        "y": 2780,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "966f16ad106a2797",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Bin. Pump D Flow Rate",
        "label": "Bin. Pump D Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 16,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "BinaryPumpDFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "dedf7087ab1c7ff1",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set PumpBFlowRate",
        "label": "Flow Syn Pump B Flow Rate (mL/min)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 190,
        "y": 2620,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "2e0ae211a493b3d1",
        "type": "ui_numeric",
        "z": "300c6ec10595d0c1",
        "name": "EditNumeric Pump B Flow Rate",
        "label": "Pump B Flow Rate",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 11,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PumpBFlowRate",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "0.01",
        "className": "",
        "x": 190,
        "y": 2660,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "9e997806a430e433",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor1Temp",
        "label": "Reactor 1 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor1Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 180,
        "y": 2880,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "eccdff2b42411467",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor2Temp",
        "label": "Reactor 2 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor2Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 180,
        "y": 2920,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "0b4f0c7572d9867b",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor3Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor3Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 180,
        "y": 2960,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "bb81d96e19a4a823",
        "type": "ui_text_input",
        "z": "300c6ec10595d0c1",
        "name": "EditText Set Reactor4Temp",
        "label": "Reactor 3 Temp.",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 23,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "Reactor4Temp",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 180,
        "y": 3000,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "0b5289ef0fbae7b3",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynValveB",
        "label": "FlowSyn Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynValveB",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "f04a6d0a3a193c2b",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryValveC",
        "label": "FlowBinary Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryValveC",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 170,
        "y": 3140,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "ed0db226c3316941",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryValveD",
        "label": "FlowBinary Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 20,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryValveD",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 170,
        "y": 3180,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "6f4c1dceb169eac9",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowCWValve",
        "label": "FlowCW Valve (ON = Collect)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 43,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowCWValve",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 160,
        "y": 3240,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "f1353a2f09c0c990",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynInjValveA",
        "label": "FlowSyn Inj Valve A (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynInjValveA",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 170,
        "y": 3300,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "1afd328769eea09d",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowSynInjValveB",
        "label": "FlowSyn Inj Valve B (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowSynInjValveB",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 170,
        "y": 3340,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "7c4da3ec425c1c48",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryInjValveC",
        "label": "FlowBinary Inj Valve C (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 18,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryInjValveC",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 180,
        "y": 3380,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "65b754bf0c89c457",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch FlowBinaryInjValveD",
        "label": "FlowBinary Inj Valve D (ON = OPEN)",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 24,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "FlowBinaryInjValveD",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 180,
        "y": 3420,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "20121bcc62f06520",
        "type": "ui_switch",
        "z": "300c6ec10595d0c1",
        "name": "Switch Heater",
        "label": "Heater",
        "tooltip": "",
        "group": "59c575dbf5467d2a",
        "order": 44,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Heater",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 140,
        "y": 3480,
        "wires": [
            [
                "92b8f91188065817"
            ]
        ]
    },
    {
        "id": "01473b9cfd543d65",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "FlowSynMaxi1SystemPressure",
        "group": "59c575dbf5467d2a",
        "order": 19,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 2560,
        "wires": []
    },
    {
        "id": "d36cf9621da7d890",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "FlowSynMaxi1FlowSynAPressure",
        "group": "59c575dbf5467d2a",
        "order": 21,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 960,
        "y": 2600,
        "wires": []
    },
    {
        "id": "6654041bdeec793e",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "FlowSynMaxi1FlowSynBPressure",
        "group": "59c575dbf5467d2a",
        "order": 27,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 960,
        "y": 2640,
        "wires": []
    },
    {
        "id": "72d05ba9adf71081",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryCPressure",
        "group": "59c575dbf5467d2a",
        "order": 28,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 2680,
        "wires": []
    },
    {
        "id": "8da8b66cd04bfd88",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryDPressure",
        "group": "59c575dbf5467d2a",
        "order": 29,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 2720,
        "wires": []
    },
    {
        "id": "8f96608ae14e5a87",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Reactor 1 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 38,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 900,
        "y": 2780,
        "wires": []
    },
    {
        "id": "a17353bc620d8b19",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Reactor 2 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 39,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 900,
        "y": 2820,
        "wires": []
    },
    {
        "id": "3f28709c7fe51f55",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Reactor 3 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 40,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 900,
        "y": 2860,
        "wires": []
    },
    {
        "id": "483d14e628d9c611",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Reactor 4 Temp.",
        "group": "59c575dbf5467d2a",
        "order": 41,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "diff": false,
        "className": "",
        "x": 900,
        "y": 2900,
        "wires": []
    },
    {
        "id": "ad160bb3bd8b5130",
        "type": "ui_chart",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Reactor Temperatures",
        "group": "59c575dbf5467d2a",
        "order": 45,
        "width": 0,
        "height": 0,
        "label": "Reactor Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "544db2dfddcbab6a",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 30,
        "group": "59c575dbf5467d2a",
        "width": "0",
        "height": "0",
        "label": "Flow Syn Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Valve A",
        "x": 910,
        "y": 3020,
        "wires": []
    },
    {
        "id": "64b235d49517f2a4",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 31,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Valve B",
        "x": 910,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a22ac1e430585028",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 32,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Valve C",
        "x": 900,
        "y": 3100,
        "wires": []
    },
    {
        "id": "80673dbbe1ecbe7d",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 33,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Valve D",
        "x": 900,
        "y": 3140,
        "wires": []
    },
    {
        "id": "b3a18eb292713a6e",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 42,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "C/W Valve",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C/W Valve",
        "x": 890,
        "y": 3200,
        "wires": []
    },
    {
        "id": "15fcb1520ac677d9",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 34,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Inj Valve A",
        "x": 920,
        "y": 3260,
        "wires": []
    },
    {
        "id": "4f0ba3734c95e9a0",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 35,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Flow Syn Inj Valve B",
        "x": 920,
        "y": 3300,
        "wires": []
    },
    {
        "id": "206eae7fd8f195d3",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 36,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Inj Valve C",
        "x": 910,
        "y": 3340,
        "wires": []
    },
    {
        "id": "1ff8f618cbf29092",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "d": true,
        "order": 37,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Binary Inj Valve D",
        "x": 910,
        "y": 3380,
        "wires": []
    },
    {
        "id": "faf1ee75762eb79a",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Pump A Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 12,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 3440,
        "wires": []
    },
    {
        "id": "e5d6d22ce1ec9cbe",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "name": "Pump B Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 13,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 3480,
        "wires": []
    },
    {
        "id": "d35d8c1e827bd98d",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Pump C Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 14,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 3520,
        "wires": []
    },
    {
        "id": "da46a79f8110bc84",
        "type": "ui_gauge",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Pump D Flow Rate",
        "group": "59c575dbf5467d2a",
        "order": 26,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 3560,
        "wires": []
    },
    {
        "id": "29bbbe2e93f7526c",
        "type": "ui_led",
        "z": "300c6ec10595d0c1",
        "order": 47,
        "group": "59c575dbf5467d2a",
        "width": 0,
        "height": 0,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Chiller Detected",
        "x": 900,
        "y": 3620,
        "wires": []
    },
    {
        "id": "d4d449901d60d49d",
        "type": "ui_chart",
        "z": "300c6ec10595d0c1",
        "d": true,
        "name": "Flow Rates",
        "group": "59c575dbf5467d2a",
        "order": 46,
        "width": 0,
        "height": 0,
        "label": "Flow Rates",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "55",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "3f9b6594aa8c35aa",
        "type": "subflow:17061720ba0331b7",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 440,
        "y": 580,
        "wires": [
            [
                "65a2481cb5b467e8",
                "070bab2db6f2b72e"
            ]
        ]
    },
    {
        "id": "51252a654b1de219",
        "type": "subflow:755f6eaaa7c0cddd",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 900,
        "wires": [
            [
                "c3e8210705f25c3e",
                "8709a00be77d04e1"
            ]
        ]
    },
    {
        "id": "dbed2f5899284a6f",
        "type": "subflow:e5d36bc87bf46f25",
        "z": "300c6ec10595d0c1",
        "name": "",
        "x": 430,
        "y": 1220,
        "wires": [
            [
                "58b143206c552e03",
                "292a8d4a61032ecd"
            ]
        ]
    },
    {
        "id": "c34c925e.d89f4",
        "type": "aedes broker",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Broker (Aedes)",
        "mqtt_port": 1883,
        "mqtt_ws_port": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "d60c267c.d14008"
            ]
        ]
    },
    {
        "id": "d60c267c.d14008",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 180,
        "wires": []
    },
    {
        "id": "40c46cb9.73bf84",
        "type": "inject",
        "z": "a6e09bd3.85fe48",
        "name": "Trigger Set Global Variables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "74f01eb.2c556e"
            ]
        ]
    },
    {
        "id": "74f01eb.2c556e",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Set Device IP Addresses",
        "rules": [
            {
                "t": "set",
                "p": "hotcoil1.ipAddr",
                "pt": "global",
                "to": "192.168.1.213",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotcoil2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.ipAddr",
                "pt": "global",
                "to": "192.168.1.211",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.ipAddr",
                "pt": "global",
                "to": "192.168.1.214",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hotchip2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi1.port",
                "pt": "global",
                "to": "80",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.ipAddr",
                "pt": "global",
                "to": "192.168.1.202",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowsynmaxi2.port",
                "pt": "global",
                "to": "80",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv1.ipAddr",
                "pt": "global",
                "to": "192.168.1.156",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv1.port",
                "pt": "global",
                "to": "3456",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv2.ipAddr",
                "pt": "global",
                "to": "192.168.1.156",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump1.ipAddr",
                "pt": "global",
                "to": "192.168.1.158",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump2.ipAddr",
                "pt": "global",
                "to": "192.168.1.159",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flowuv2.port",
                "pt": "global",
                "to": "3456",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump1.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "binarypump2.port",
                "pt": "global",
                "to": "81",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "reactIR702L1.ipAddr",
                "pt": "global",
                "to": "192.168.1.50",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "reactIR702L1.port",
                "pt": "global",
                "to": "62552",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "f5a69aa3.1b4dc8"
            ]
        ]
    },
    {
        "id": "f5a69aa3.1b4dc8",
        "type": "function",
        "z": "a6e09bd3.85fe48",
        "name": "Set Global Init values (FlowSynMaxi1)",
        "func": "var initVariable00 ='0.0';\nvar initVariable0 = 0;\n\nglobal.set('flowsynmaxi1.setTempReactor1', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor2', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor3', initVariable00);\nglobal.set('flowsynmaxi1.setTempReactor4', initVariable00);\n\nglobal.set('flowsynmaxi1.pressureSystem', initVariable00);\nglobal.set('flowsynmaxi1.pressureFlowSynA', initVariable00);\nglobal.set('flowsynmaxi1.pressureFlowSynB', initVariable00);\nglobal.set('flowsynmaxi1.pressureBinaryC', initVariable00);\nglobal.set('flowsynmaxi1.pressureBinaryD', initVariable00);\n\nglobal.set('flowsynmaxi1.temperatureReactor1', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor2', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor3', initVariable00);\nglobal.set('flowsynmaxi1.temperatureReactor4', initVariable00);\n\nglobal.set('flowsynmaxi1.valveOpenA', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenB', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenC', initVariable0);\nglobal.set('flowsynmaxi1.valveOpenD', initVariable0);\n\nglobal.set('flowsynmaxi1.valveOpenCW', initVariable0);\n\nglobal.set('flowsynmaxi1.valveInjOpenA', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenB', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenC', initVariable0);\nglobal.set('flowsynmaxi1.valveInjOpenD', initVariable0);\n\nglobal.set('flowsynmaxi1.flowRatePumpA', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpB', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpC', initVariable00);\nglobal.set('flowsynmaxi1.flowRatePumpD', initVariable00);\n\nglobal.set('flowsynmaxi1.chillerDetected', initVariable0);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "17972a31.a15216",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Extract Public IPv4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.publicIPv4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "fb7fb156.07694"
            ]
        ]
    },
    {
        "id": "fb7fb156.07694",
        "type": "mqtt out",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Host IP Address (Public V4)",
        "topic": "ipAddr/FuturePharma_publicIPv4",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c025c73d.909a28",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "8ece64a4.ffd7b8",
        "type": "inject",
        "z": "a6e09bd3.85fe48",
        "name": "Trigger IP Address",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "ca1153c6.a24d3"
            ]
        ]
    },
    {
        "id": "833c344d.0778a8",
        "type": "mqtt out",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Host IP Address (Internal V4)",
        "topic": "ipAddr/FuturePharma_internalIPv4",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c025c73d.909a28",
        "x": 970,
        "y": 420,
        "wires": []
    },
    {
        "id": "7f0dca00.5e1c78",
        "type": "change",
        "z": "a6e09bd3.85fe48",
        "name": "Extract Internal IPv4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.internalIPv4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "833c344d.0778a8"
            ]
        ]
    },
    {
        "id": "ca1153c6.a24d3",
        "type": "ip",
        "z": "a6e09bd3.85fe48",
        "name": "Retrieve Host IP Address",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": true,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "7f0dca00.5e1c78",
                "17972a31.a15216",
                "6ab09793.cc9578"
            ]
        ]
    },
    {
        "id": "6ab09793.cc9578",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "ece3948.fd60368",
        "type": "catch",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "a09c186d.0d3348"
            ]
        ]
    },
    {
        "id": "a09c186d.0d3348",
        "type": "debug",
        "z": "a6e09bd3.85fe48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "9dec9793.1f0bb8",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "MQTT Broker",
        "info": "",
        "x": 90,
        "y": 140,
        "wires": []
    },
    {
        "id": "3d73b35a.48f29c",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "4cf2092f.91a5e8",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "INIT Equipment IP:port values",
        "info": "",
        "x": 140,
        "y": 240,
        "wires": []
    },
    {
        "id": "ac7e0c9b.aca3a",
        "type": "comment",
        "z": "a6e09bd3.85fe48",
        "name": "Keep track of Pi's Dynamic IP settings",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "1a1fc090.9e5b8f",
        "type": "subflow:c76a3ed0.de6fd",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "env": [],
        "x": 1160,
        "y": 1260,
        "wires": [
            [
                "90acf924.6af6b8",
                "30e93526.fa1d4a",
                "153aeb90.1a5d24"
            ],
            [
                "78c89106.d3393",
                "5b9631a6.e913d",
                "153aeb90.1a5d24"
            ],
            [
                "7bb0a8d5.9a2408",
                "120b22.b9b9c4de",
                "153aeb90.1a5d24"
            ],
            [
                "7e56424d.424f1c",
                "6833d290.db5c7c",
                "153aeb90.1a5d24"
            ],
            [
                "9cb8b06e.6d8bb",
                "21f5fc8b.20d1b4",
                "153aeb90.1a5d24"
            ],
            [
                "a0e4ae44.0f068",
                "6234ff4f.e78f2"
            ],
            [
                "da7bad96.269ef",
                "6234ff4f.e78f2"
            ],
            [
                "de736b44.3178b8",
                "6234ff4f.e78f2"
            ],
            [
                "f98cdcd3.6c031",
                "6234ff4f.e78f2"
            ],
            [
                "91222af8.8a1728"
            ],
            [
                "7497bb81.84da64"
            ],
            [
                "7decc4a4.9a495c"
            ],
            [
                "4b19c292.f0863c"
            ],
            [
                "e220f791.6f46e8"
            ],
            [
                "47ed95bc.1767ac"
            ],
            [
                "aee3dd17.f5"
            ],
            [
                "ed9af2e2.1fd5"
            ],
            [
                "b78d284e.5334e8"
            ],
            [
                "5aa84cc8.edc044",
                "517e12e3.0e569c",
                "b9e179e3.613d88"
            ],
            [
                "ad4724ab.f6bde8",
                "517e12e3.0e569c"
            ],
            [
                "fc6c7cd4.f10cb",
                "517e12e3.0e569c"
            ],
            [
                "e7eb3745.5cc9b8",
                "517e12e3.0e569c"
            ],
            [
                "571e9cfd.ef0fb4"
            ],
            [
                "8022604d.0cb65",
                "5de59730.77d098"
            ],
            [
                "32bed92c.ffa686"
            ]
        ],
        "inputLabels": [
            "input with topic"
        ],
        "outputLabels": [
            "SystemPressure",
            "Pump A Pressure",
            "Pump B Pressure",
            "Pump C Pressure",
            "Pump D Pressure",
            "Reactor 1 Temp.",
            "Reactor 2 Temp.",
            "Reactor 3 Temp.",
            "Reactor 4 Temp.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Errors",
            ""
        ]
    },
    {
        "id": "3c1e9851.5c1e98",
        "type": "subflow:98cb21df.da2ee",
        "z": "133b6aba.dccfb5",
        "name": "",
        "env": [],
        "x": 1140,
        "y": 780,
        "wires": []
    },
    {
        "id": "90acf924.6af6b8",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "FlowSynMaxi1SystemPressure",
        "group": "71d00e5a.8ef35",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 System Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 1650,
        "y": 800,
        "wires": []
    },
    {
        "id": "78c89106.d3393",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "FlowSynMaxi1FlowSynAPressure",
        "group": "71d00e5a.8ef35",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn A Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 1660,
        "y": 840,
        "wires": []
    },
    {
        "id": "7bb0a8d5.9a2408",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "FlowSynMaxi1FlowSynBPressure",
        "group": "71d00e5a.8ef35",
        "order": 11,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Syn B Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 1660,
        "y": 880,
        "wires": []
    },
    {
        "id": "7e56424d.424f1c",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryCPressure",
        "group": "71d00e5a.8ef35",
        "order": 16,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary C Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 1670,
        "y": 920,
        "wires": []
    },
    {
        "id": "9cb8b06e.6d8bb",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "FlowSynMaxi1FlowBinaryDPressure",
        "group": "71d00e5a.8ef35",
        "order": 21,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flow Syn Maxi 1 Flow Binary D Pressure",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "45",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "30",
        "x": 1670,
        "y": 960,
        "wires": []
    },
    {
        "id": "a0e4ae44.0f068",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "Reactor 1 Temp.",
        "group": "70286f66.82076",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 1 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 1600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "da7bad96.269ef",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "Reactor 2 Temp.",
        "group": "70286f66.82076",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 2 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 1600,
        "y": 1040,
        "wires": []
    },
    {
        "id": "de736b44.3178b8",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Reactor 3 Temp.",
        "group": "70286f66.82076",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 3 Temp.",
        "label": "degC",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 1600,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f98cdcd3.6c031",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Reactor 4 Temp.",
        "group": "70286f66.82076",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Reactor 4 Temp.",
        "label": "bar",
        "format": "{{value}}",
        "min": 0,
        "max": "270",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "200",
        "x": 1600,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7a44a2d4.634a5c",
        "type": "ui_chart",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Pump Pressures",
        "group": "71d00e5a.8ef35",
        "order": 26,
        "width": 0,
        "height": 0,
        "label": "Pump Pressures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "45",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1720,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d90a38a.d5143c8",
        "type": "ui_chart",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Reactor Temperatures",
        "group": "70286f66.82076",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Reactor Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "270",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1740,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "91222af8.8a1728",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 1,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Valve A",
        "x": 1610,
        "y": 1280,
        "wires": []
    },
    {
        "id": "7497bb81.84da64",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 2,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Valve B",
        "x": 1610,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7decc4a4.9a495c",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 3,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Binary Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Valve C",
        "x": 1600,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4b19c292.f0863c",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 4,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Binary Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Valve D",
        "x": 1600,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e220f791.6f46e8",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 9,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "C/W Valve",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "C/W Valve",
        "x": 1590,
        "y": 1440,
        "wires": []
    },
    {
        "id": "47ed95bc.1767ac",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 5,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve A",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Inj Valve A",
        "x": 1620,
        "y": 1480,
        "wires": []
    },
    {
        "id": "aee3dd17.f5",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 6,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Flow Syn Inj Valve B",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Flow Syn Inj Valve B",
        "x": 1620,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ed9af2e2.1fd5",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 7,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve C",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Inj Valve C",
        "x": 1610,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b78d284e.5334e8",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 8,
        "group": "fa3022cd.849c4",
        "width": 0,
        "height": 0,
        "label": "Binary Inj Valve D",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Binary Inj Valve D",
        "x": 1610,
        "y": 1600,
        "wires": []
    },
    {
        "id": "5aa84cc8.edc044",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "Pump A Flow Rate",
        "group": "f1c3b519.0843c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump A Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 1610,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ad4724ab.f6bde8",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "name": "Pump B Flow Rate",
        "group": "f1c3b519.0843c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump B Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 1610,
        "y": 1680,
        "wires": []
    },
    {
        "id": "fc6c7cd4.f10cb",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Pump C Flow Rate",
        "group": "f1c3b519.0843c8",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump C Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 1610,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e7eb3745.5cc9b8",
        "type": "ui_gauge",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Pump D Flow Rate",
        "group": "f1c3b519.0843c8",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pump D Flow Rate",
        "label": "ml/min",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "x": 1610,
        "y": 1760,
        "wires": []
    },
    {
        "id": "571e9cfd.ef0fb4",
        "type": "ui_led",
        "z": "133b6aba.dccfb5",
        "order": 1,
        "group": "94135017.0a601",
        "width": 0,
        "height": 0,
        "label": "Chiller Detected",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Chiller Detected",
        "x": 1600,
        "y": 1840,
        "wires": []
    },
    {
        "id": "517e12e3.0e569c",
        "type": "ui_chart",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Flow Rates",
        "group": "f1c3b519.0843c8",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Flow Rates",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "55",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1590,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "8022604d.0cb65",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1540,
        "wires": []
    },
    {
        "id": "30e93526.fa1d4a",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "Check SysPressure for alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alertSysPressure",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2000,
        "y": 860,
        "wires": [
            [
                "36f45ca4.4882a4"
            ]
        ]
    },
    {
        "id": "43713849.ff8c18",
        "type": "e-mail",
        "z": "133b6aba.dccfb5",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 3170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "581189f9.dd1598",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "to",
                "pt": "msg",
                "to": "emailadd",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 960,
        "wires": [
            [
                "95a7dfd6.20561"
            ]
        ]
    },
    {
        "id": "d761a598.2ad168",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 920,
        "wires": []
    },
    {
        "id": "5b9631a6.e913d",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "Check Pump A for alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alertPumpAPressure",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1980,
        "y": 920,
        "wires": [
            [
                "1440c4cd.073ccb"
            ]
        ]
    },
    {
        "id": "c619eb6c.3f0568",
        "type": "ui_toast",
        "z": "133b6aba.dccfb5",
        "position": "top right",
        "displayTime": "4",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Warning pop-up",
        "x": 2900,
        "y": 960,
        "wires": []
    },
    {
        "id": "1440c4cd.073ccb",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert: Pump A Pressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 920,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "120b22.b9b9c4de",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "Check Pump B for alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alertPumpBPressure",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 980,
        "wires": [
            [
                "7318e2a4.60f14c"
            ]
        ]
    },
    {
        "id": "7318e2a4.60f14c",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert Pump B Pressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 980,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "6833d290.db5c7c",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "Check Pump C for alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alertPumpCPressure",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 1040,
        "wires": [
            [
                "ce77faa.d838e08"
            ]
        ]
    },
    {
        "id": "ce77faa.d838e08",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert Pump C Pressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1040,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "21f5fc8b.20d1b4",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "Check Pump D for alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alertPumpDPressure",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 1100,
        "wires": [
            [
                "92b4717f.bb154"
            ]
        ]
    },
    {
        "id": "92b4717f.bb154",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert Pump D Pressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1100,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "95a7dfd6.20561",
        "type": "throttle",
        "z": "133b6aba.dccfb5",
        "name": "",
        "throttleType": "time",
        "timeLimit": "5",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 2690,
        "y": 960,
        "wires": [
            [
                "d761a598.2ad168",
                "c619eb6c.3f0568",
                "21861d0b.de0f12",
                "c548f034.23e63"
            ]
        ]
    },
    {
        "id": "36f45ca4.4882a4",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert SysPressure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 860,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "8a553b2d.39d9d8",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3030,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d2e35c68.77d8b",
        "type": "comment",
        "z": "133b6aba.dccfb5",
        "name": "Need to fix activation of email notifications",
        "info": "",
        "x": 3200,
        "y": 940,
        "wires": []
    },
    {
        "id": "153aeb90.1a5d24",
        "type": "throttle",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "throttleType": "time",
        "timeLimit": "1",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 1570,
        "y": 1180,
        "wires": [
            [
                "7a44a2d4.634a5c"
            ]
        ]
    },
    {
        "id": "6234ff4f.e78f2",
        "type": "throttle",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "throttleType": "time",
        "timeLimit": 0,
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 1570,
        "y": 1220,
        "wires": [
            [
                "d90a38a.d5143c8"
            ]
        ]
    },
    {
        "id": "5de59730.77d098",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Check Errors for alert",
        "property": "error.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "connect failed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2000,
        "y": 1180,
        "wires": [
            [
                "879f64ba.fd3808",
                "47400d9e.a62474"
            ],
            [
                "4dd4b4db.3d4b9c"
            ]
        ]
    },
    {
        "id": "879f64ba.fd3808",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "Warning topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Alert Lost Connection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1160,
        "wires": [
            [
                "581189f9.dd1598"
            ]
        ]
    },
    {
        "id": "47400d9e.a62474",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2240,
        "y": 1200,
        "wires": [
            [
                "4dd4b4db.3d4b9c"
            ]
        ]
    },
    {
        "id": "4dd4b4db.3d4b9c",
        "type": "trigger",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "4",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2440,
        "y": 1180,
        "wires": [
            [
                "8221b0da.b9c9"
            ]
        ]
    },
    {
        "id": "8221b0da.b9c9",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 1200,
        "wires": [
            [
                "b4eb0656.cc68e8"
            ]
        ]
    },
    {
        "id": "b4eb0656.cc68e8",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e986c279.f71f8",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpAFlowRate",
        "payload": "10.00",
        "payloadType": "str",
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "1a1fc090.9e5b8f"
            ]
        ]
    },
    {
        "id": "32bed92c.ffa686",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1620,
        "wires": []
    },
    {
        "id": "6090c729.06bea8",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PumpBFlowRate",
        "payload": "1.00",
        "payloadType": "str",
        "x": 840,
        "y": 1200,
        "wires": [
            [
                "1a1fc090.9e5b8f"
            ]
        ]
    },
    {
        "id": "d8dc224a.b9a5c",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "Send and wait",
        "func": "var Cur_temp1 = global.get('flowsynmaxi1.temperatureReactor2');\nvar Req_Temp_min = 0.5;\nvar Req_Temp_max = 0.5;\n\nvar i = 0;\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function loop_commands(){\nfor (var counter=0; counter<=msg.payload.length; counter++) {\n//   var cmd_type = msg.payload[0].set;\n   switch (msg.payload[counter].cmd_type){\n       case 0:\n            var Req_Temp = msg.payload[counter].set;\n            // node.send({payload:msg.payload[1]});\n            Req_Temp_min = Req_Temp - 0.5;\n            Req_Temp_max = Req_Temp + 0.5;\n            // Send Temp\n            node.send({payload:msg.payload[counter]});\n            // Wait for correct temp\n            // sendTempAndWait();\n            node.send({'Cur_temp1':Cur_temp1});\n            node.send({'Req_Temp_min':Req_Temp_min});\n            node.send({'Req_Temp_max':Req_Temp_max});\n    \n            while ((Cur_temp1 <= Req_Temp_min) || (Cur_temp1 >= Req_Temp_max)) {\n                // setTimeout(function(){ alert(\"Waiting for Temp\"); }, 3000);\n                await sleep(3000);\n                Cur_temp1 = global.get('flowsynmaxi1.temperatureReactor1');\n        \n                }\n            break;\n        case 1:\n            var delay = msg.payload[counter].delay * 1000;\n            node.send({payload:msg.payload[counter]});\n            await sleep(delay);\n            break;\n        default:\n            break;\n          \n   }\n}\n}\n\nloop_commands();\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1420,
        "wires": [
            [
                "66b13739.4f6298",
                "3e970e8a.05da22"
            ]
        ]
    },
    {
        "id": "3e970e8a.05da22",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1420,
        "wires": [
            [
                "129378fc.35d9c7"
            ]
        ]
    },
    {
        "id": "94aa6c8c.0c4b9",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1480,
        "wires": []
    },
    {
        "id": "129378fc.35d9c7",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.set",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1460,
        "wires": [
            [
                "8496e8e3.91aba8"
            ]
        ]
    },
    {
        "id": "63255a5.4c212a4",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "Script",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"index\":1,\"topic\":\"PumpAFlowRate\",\"set\":0.5,\"channel\":31,\"level\":1,\"delay\":2},{\"index\":2,\"topic\":\"FlowCWValve\",\"set\":true,\"channel\":31,\"level\":1,\"delay\":2},{\"index\":2,\"topic\":\"PumpAFlowRate\",\"set\":5,\"channel\":31,\"level\":1,\"delay\":2},{\"index\":2,\"topic\":\"FlowCWValve\",\"set\":false,\"channel\":31,\"level\":1,\"delay\":2},{\"index\":2,\"topic\":\"PumpAFlowRate\",\"set\":0,\"channel\":31,\"level\":1,\"delay\":1},{\"index\":2,\"channel\":35,\"level\":1,\"delay\":12},{\"index\":3,\"channel\":35,\"level\":0,\"delay\":2}]",
        "payloadType": "json",
        "x": 210,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "ac663497.6b1678",
        "type": "comment",
        "z": "133b6aba.dccfb5",
        "name": "Click button is not sending the whole payload through",
        "info": "",
        "x": 660,
        "y": 1700,
        "wires": []
    },
    {
        "id": "7e7a1b94.43aa24",
        "type": "ui_text_input",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "Pump A Pressure",
        "tooltip": "tooltip",
        "group": "fcc4e2e3.07d67",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "500",
        "topic": "",
        "x": 2590,
        "y": 1460,
        "wires": [
            [
                "daf4763d.9105b8"
            ]
        ]
    },
    {
        "id": "778acd5c.510054",
        "type": "ui_text_input",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "Pump B Pressure",
        "tooltip": "tooltip",
        "group": "fcc4e2e3.07d67",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "500",
        "topic": "",
        "x": 2590,
        "y": 1520,
        "wires": [
            [
                "d20bd784.b8ea58"
            ]
        ]
    },
    {
        "id": "29cdb3d0.9a5d5c",
        "type": "ui_text_input",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "Email address",
        "tooltip": "",
        "group": "fcc4e2e3.07d67",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": "1000",
        "topic": "",
        "x": 2600,
        "y": 1300,
        "wires": [
            [
                "427174a3.364f6c",
                "9adda99a.54d738"
            ]
        ]
    },
    {
        "id": "427174a3.364f6c",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Add email address",
        "rules": [
            {
                "t": "set",
                "p": "emailadd",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2870,
        "y": 1300,
        "wires": [
            [
                "9adda99a.54d738"
            ]
        ]
    },
    {
        "id": "74654d8.21fb2b4",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Add System Pressure alert value",
        "rules": [
            {
                "t": "set",
                "p": "alertSysPressure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "daf4763d.9105b8",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Add PumpA Pressure alert value",
        "rules": [
            {
                "t": "set",
                "p": "alertPumpAPressure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "d20bd784.b8ea58",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Add PumpB Pressure alert value",
        "rules": [
            {
                "t": "set",
                "p": "alertPumpBPressure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a4a238fd.6815f8",
        "type": "comment",
        "z": "133b6aba.dccfb5",
        "name": "NB! To do:",
        "info": "if connection down for 30 sec, stop recording... check if \n\nMake sure recording starts again if connection is re-estabilsed",
        "x": 2020,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f57b35d4.5e9dc8",
        "type": "ui_text_input",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "System Pressure",
        "tooltip": "",
        "group": "fcc4e2e3.07d67",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "600",
        "topic": "",
        "x": 2590,
        "y": 1400,
        "wires": [
            [
                "74654d8.21fb2b4"
            ]
        ]
    },
    {
        "id": "9adda99a.54d738",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 1260,
        "wires": []
    },
    {
        "id": "351a24e9.2e53bc",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "to",
                "v": "carljohanvdw@gmail.com",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "this is from topic",
        "payload": "",
        "payloadType": "date",
        "x": 2600,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "21861d0b.de0f12",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "send_email?",
        "property": "send_email",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2870,
        "y": 1040,
        "wires": [
            [
                "8a553b2d.39d9d8",
                "91aadd86.f5294"
            ],
            []
        ]
    },
    {
        "id": "7d50f8a.ffe2308",
        "type": "rbe",
        "z": "133b6aba.dccfb5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 2710,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "7d689188.fa84b",
        "type": "ui_switch",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "Email activation",
        "tooltip": "",
        "group": "fcc4e2e3.07d67",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2600,
        "y": 1260,
        "wires": [
            [
                "6a214412.be4d5c"
            ]
        ]
    },
    {
        "id": "6a214412.be4d5c",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "send_email?",
        "rules": [
            {
                "t": "set",
                "p": "send_telegram",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2850,
        "y": 1260,
        "wires": [
            [
                "9adda99a.54d738"
            ]
        ]
    },
    {
        "id": "91aadd86.f5294",
        "type": "throttle",
        "z": "133b6aba.dccfb5",
        "name": "",
        "throttleType": "time",
        "timeLimit": "10",
        "timeLimitType": "seconds",
        "countLimit": "5",
        "blockSize": 0,
        "locked": false,
        "x": 3030,
        "y": 1040,
        "wires": [
            [
                "43713849.ff8c18"
            ]
        ]
    },
    {
        "id": "b9e179e3.613d88",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1740,
        "wires": []
    },
    {
        "id": "83190b48.1405a8",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "msg",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "6c477ff.4e7328"
            ]
        ]
    },
    {
        "id": "6c477ff.4e7328",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Clean up, working",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"msg\":\"Change valve to solvent for pump A\",\"topic\":\"FlowSynValveA\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":false,\"delay\":1},{\"msg\":\"Change valve to solvent for pump B\",\"topic\":\"FlowSynValveB\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":false,\"delay\":1},{\"msg\":\"Change valve to waste\",\"topic\":\"FlowCWValve\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":false,\"delay\":1},{\"msg\":\"Set flow rate for pump A (high)\",\"topic\":\"PumpAFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":1,\"delay\":1},{\"msg\":\"Set flow rate for pump B (high)\",\"topic\":\"PumpBFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":1,\"delay\":1},{\"msg\":\"Wait for complete flush\",\"cmd_type\":1,\"ReactorNo\":1,\"delay\":10},{\"msg\":\"Stop pump A\",\"topic\":\"PumpAFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":0,\"delay\":1},{\"msg\":\"Stop pump B\",\"topic\":\"PumpBFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":0,\"delay\":1},{}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1440,
        "wires": [
            [
                "d8dc224a.b9a5c",
                "66b13739.4f6298"
            ]
        ]
    },
    {
        "id": "a85e5a68.f7c418",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Exp run, working",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"msg\":\"Change valve to reagent for pump A\",\"topic\":\"FlowSynValveA\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":true,\"delay\":5},{\"msg\":\"Switch heater on\",\"topic\":\"Heater\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":true,\"delay\":2},{\"msg\":\"Set temp of reactor 1\",\"topic\":\"Reactor2Temp\",\"cmd_type\":0,\"ReactorNo\":1,\"set\":50.1,\"delay\":1},{\"msg\":\"Change valve to reagent for pump A\",\"topic\":\"FlowSynValveA\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":true,\"delay\":1},{\"msg\":\"Change valve to reagent for pump B\",\"topic\":\"FlowSynValveB\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":true,\"delay\":10},{\"msg\":\"Change valve to collect\",\"topic\":\"FlowCWValve\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":true,\"delay\":1},{\"msg\":\"Set flow rate for pump A\",\"topic\":\"PumpAFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":2,\"delay\":1},{\"msg\":\"Set flow rate for pump B\",\"topic\":\"PumpBFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":2,\"delay\":1},{\"msg\":\"Wait for steady state\",\"cmd_type\":1,\"ReactorNo\":1,\"delay\":5},{}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "d8dc224a.b9a5c"
            ]
        ]
    },
    {
        "id": "28abadb0.638402",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "msg",
        "x": 90,
        "y": 1480,
        "wires": [
            [
                "a85e5a68.f7c418"
            ]
        ]
    },
    {
        "id": "b7fd5f05.31f22",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Heater",
        "payload": "true",
        "payloadType": "bool",
        "x": 880,
        "y": 1240,
        "wires": [
            [
                "1a1fc090.9e5b8f"
            ]
        ]
    },
    {
        "id": "d28ea9e1.31e718",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "sendNodeAndWait",
        "func": "var Cur_temp1 = global.get('flowsynmaxi1.temperatureReactor1');\nvar Req_Temp = msg.payload[1];\n// node.send({payload:msg.payload[1]});\nnode.send({Req_Temp});\n\n\nvar Req_Temp_min = Req_Temp - 2\nvar Req_Temp_max = Req_Temp + 2\n\nvar i = 0;\nsendTempAndWait()\n\nfunction sendTempAndWait() {\n    node.send({'msg':'Staring TempAndWait...'})\n    // Send temp command to reactor\n    \n    // while (Cur_Temp < 10 || Cur_Temp < 20) {\n    while (Cur_temp1 < Req_Temp_min || Cur_temp1 < Req_Temp_max) {\n        setTimeout(function(){ alert(\"Waiting for Temp\"); }, 3000);\n        Cur_temp1 = global.get('flowsynmaxi1.temperatureReactor1');\n        node.send({Cur_temp1});\n\n    // text += \"The number is \" + i;\n    // i++;\n    }\n}\n\nsendNodeAndWait()\n\nfunction sendNodeAndWait() {\n    if (i == msg.payload.length) { return null; }\n    node.send({payload:msg.payload[i]});\n    setTimeout(sendNodeAndWait, msg.payload[i].delay * 1000);\n    i += 1;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 500,
        "wires": [
            [
                "e295cbbb.040ad8"
            ]
        ]
    },
    {
        "id": "e295cbbb.040ad8",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 500,
        "wires": [
            [
                "40d6d8c5.a85db8"
            ]
        ]
    },
    {
        "id": "40d6d8c5.a85db8",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.set",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 500,
        "wires": [
            [
                "1cf7ac4d.9406b4"
            ]
        ]
    },
    {
        "id": "6a1a15a7.ae195c",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "msg",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "57f9c8d2.408a98"
            ]
        ]
    },
    {
        "id": "1cf7ac4d.9406b4",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 500,
        "wires": []
    },
    {
        "id": "57f9c8d2.408a98",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Exp run, working",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"msg\":\"Set temp of reactor 1\",\"topic\":\"Reactor1Temp\",\"set\":30,\"delay\":1},{\"msg\":\"Change valve to reagent for pump A\",\"topic\":\"FlowSynValveA\",\"set\":true,\"delay\":1},{\"msg\":\"Change valve to reagent for pump B\",\"topic\":\"FlowSynValveB\",\"set\":true,\"delay\":1},{\"msg\":\"Change valve to collect\",\"topic\":\"FlowCWValve\",\"set\":true,\"delay\":1},{\"msg\":\"Set flow rate for pump A\",\"topic\":\"PumpAFlowRate\",\"set\":2,\"delay\":1},{\"msg\":\"Set flow rate for pump B\",\"topic\":\"PumpBFlowRate\",\"set\":2,\"delay\":1},{\"msg\":\"Wait for steady state\",\"delay\":5},{}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "d28ea9e1.31e718"
            ]
        ]
    },
    {
        "id": "66b13739.4f6298",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d28afbf5.1654b8",
        "type": "ui_switch",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "label": "Telegram activation",
        "tooltip": "",
        "group": "fcc4e2e3.07d67",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 2610,
        "y": 1340,
        "wires": [
            [
                "2cc0508a.a3cc5"
            ]
        ]
    },
    {
        "id": "c548f034.23e63",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "send_telegram?",
        "property": "send_telegram",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2880,
        "y": 1100,
        "wires": [
            [
                "2679497a.761576"
            ],
            []
        ]
    },
    {
        "id": "2cc0508a.a3cc5",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "send_telegram?",
        "rules": [
            {
                "t": "set",
                "p": "send_telegram",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 1340,
        "wires": [
            [
                "9adda99a.54d738"
            ]
        ]
    },
    {
        "id": "2679497a.761576",
        "type": "throttle",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "throttleType": "time",
        "timeLimit": "10",
        "timeLimitType": "seconds",
        "countLimit": "5",
        "blockSize": 0,
        "locked": false,
        "x": 3070,
        "y": 1100,
        "wires": [
            [
                "ca591764.f8c398"
            ]
        ]
    },
    {
        "id": "6ac5fee9.c85ed",
        "type": "telegram sender",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "bot": "11426682.103bb9",
        "haserroroutput": true,
        "outputs": 2,
        "x": 3510,
        "y": 1100,
        "wires": [
            [
                "1a34ed44.14bd03",
                "4acf444e.3d3eec"
            ],
            [
                "b4daf6d6.eddfa8"
            ]
        ]
    },
    {
        "id": "ca591764.f8c398",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.content",
                "pt": "msg",
                "to": "HELLO!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "message",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.chatId",
                "pt": "msg",
                "to": "1571248321",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3240,
        "y": 1100,
        "wires": [
            [
                "6ac5fee9.c85ed"
            ]
        ]
    },
    {
        "id": "e52fc390.50eec",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1180,
        "wires": [
            [
                "ca591764.f8c398"
            ]
        ]
    },
    {
        "id": "1a34ed44.14bd03",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ebbddaa2.df46d8",
        "type": "telegram receiver",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "bot": "11426682.103bb9",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 3540,
        "y": 1220,
        "wires": [
            [
                "119c916d.698eaf"
            ],
            []
        ]
    },
    {
        "id": "119c916d.698eaf",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3790,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4acf444e.3d3eec",
        "type": "telegram reply",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "bot": "11426682.103bb9",
        "x": 3750,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b4daf6d6.eddfa8",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3750,
        "y": 1140,
        "wires": []
    },
    {
        "id": "523a7d4e.fcd844",
        "type": "telegram reply",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "bot": "11426682.103bb9",
        "x": 3520,
        "y": 920,
        "wires": [
            [
                "4656240b.3adefc"
            ]
        ]
    },
    {
        "id": "4656240b.3adefc",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 920,
        "wires": []
    },
    {
        "id": "70b2eeb.666851",
        "type": "ifttt out",
        "z": "133b6aba.dccfb5",
        "eventName": "start_spotify",
        "key": "4f3df190.15939",
        "x": 2850,
        "y": 760,
        "wires": []
    },
    {
        "id": "d024f0aa.9f0a",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2650,
        "y": 760,
        "wires": [
            [
                "70b2eeb.666851"
            ]
        ]
    },
    {
        "id": "e52c2134.cdb0f",
        "type": "ifttt out",
        "z": "133b6aba.dccfb5",
        "eventName": "stop_spotify",
        "key": "4f3df190.15939",
        "x": 2850,
        "y": 800,
        "wires": []
    },
    {
        "id": "5a4af0e8.ea36",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2650,
        "y": 800,
        "wires": [
            [
                "e52c2134.cdb0f"
            ]
        ]
    },
    {
        "id": "457ddc7b.432b44",
        "type": "ifttt out",
        "z": "133b6aba.dccfb5",
        "eventName": "reactor_error",
        "key": "4f3df190.15939",
        "x": 2850,
        "y": 840,
        "wires": []
    },
    {
        "id": "b9640162.bc88c",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2650,
        "y": 840,
        "wires": [
            [
                "457ddc7b.432b44"
            ]
        ]
    },
    {
        "id": "8496e8e3.91aba8",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "http-response",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "20ea439c.6a3d6c"
            ],
            [
                "1a1fc090.9e5b8f",
                "94aa6c8c.0c4b9"
            ]
        ]
    },
    {
        "id": "20ea439c.6a3d6c",
        "type": "http request",
        "z": "133b6aba.dccfb5",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "146.64.91.245:9000/running",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 970,
        "y": 1540,
        "wires": [
            [
                "94aa6c8c.0c4b9"
            ]
        ]
    },
    {
        "id": "cea1c04a.0efaa",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 800,
        "y": 1620,
        "wires": [
            [
                "20ea439c.6a3d6c"
            ]
        ]
    },
    {
        "id": "963eef47.a8eb4",
        "type": "exec",
        "z": "133b6aba.dccfb5",
        "command": "python3 -u /home/pi/Desktop/Auto_optimisation/relay_control-v2.py",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "Trigger relay",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "73087de1.a83274"
            ],
            [
                "73087de1.a83274"
            ],
            [
                "73087de1.a83274"
            ]
        ]
    },
    {
        "id": "73087de1.a83274",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1860,
        "wires": []
    },
    {
        "id": "5f7934f.2d8bccc",
        "type": "http in",
        "z": "133b6aba.dccfb5",
        "name": "",
        "url": "/run_relay",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 280,
        "y": 1880,
        "wires": [
            [
                "a26d9f82.cd379",
                "963eef47.a8eb4"
            ]
        ]
    },
    {
        "id": "a26d9f82.cd379",
        "type": "http response",
        "z": "133b6aba.dccfb5",
        "name": "Response",
        "statusCode": "",
        "headers": {},
        "x": 460,
        "y": 1840,
        "wires": []
    },
    {
        "id": "4576c3ad.4d56fc",
        "type": "http in",
        "z": "133b6aba.dccfb5",
        "name": "",
        "url": "/start",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "5254aed8.4509e",
                "66b13739.4f6298",
                "1e6cdac8.adbf25",
                "d8dc224a.b9a5c"
            ]
        ]
    },
    {
        "id": "5254aed8.4509e",
        "type": "http response",
        "z": "133b6aba.dccfb5",
        "name": "Response",
        "statusCode": "",
        "headers": {},
        "x": 400,
        "y": 1600,
        "wires": []
    },
    {
        "id": "44d9bcb4.60da34",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Heater",
        "payload": "false",
        "payloadType": "bool",
        "x": 870,
        "y": 1280,
        "wires": [
            [
                "1a1fc090.9e5b8f"
            ]
        ]
    },
    {
        "id": "1e6cdac8.adbf25",
        "type": "file",
        "z": "133b6aba.dccfb5",
        "name": "write",
        "filename": "/home/pi/Desktop/Auto_optimisation/TEST1.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 570,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "f158cab.2f7ec38",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "9703d686.bef148",
                "1214ffd.69289",
                "77106504.d3d00c",
                "b9d4f623.c23208"
            ]
        ]
    },
    {
        "id": "9703d686.bef148",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2100,
        "wires": [
            [
                "e3c2a273.772eb"
            ]
        ]
    },
    {
        "id": "e3c2a273.772eb",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload\nglobal.set(\"flowsynmaxi1.setTempReactor1-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2100,
        "wires": [
            [
                "8f876fcb.677ae"
            ]
        ]
    },
    {
        "id": "8f876fcb.677ae",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1214ffd.69289",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2140,
        "wires": [
            [
                "376ca54f.6788ea"
            ]
        ]
    },
    {
        "id": "376ca54f.6788ea",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload\nglobal.set(\"flowsynmaxi1.setTempReactor2-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2140,
        "wires": [
            [
                "8f876fcb.677ae"
            ]
        ]
    },
    {
        "id": "77106504.d3d00c",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2180,
        "wires": [
            [
                "c47b00e8.95f93"
            ]
        ]
    },
    {
        "id": "c47b00e8.95f93",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload\nglobal.set(\"flowsynmaxi1.setTempReactor3-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2180,
        "wires": [
            [
                "8f876fcb.677ae"
            ]
        ]
    },
    {
        "id": "b9d4f623.c23208",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.setTempReactor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "4b912e4f.4bd4b"
            ]
        ]
    },
    {
        "id": "4b912e4f.4bd4b",
        "type": "function",
        "z": "133b6aba.dccfb5",
        "name": "",
        "func": "msg.payload = msg.payload.toString(16);\n\nlet temp = msg.payload\nglobal.set(\"flowsynmaxi1.setTempReactor4-hex\",temp);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2220,
        "wires": [
            [
                "8f876fcb.677ae"
            ]
        ]
    },
    {
        "id": "12ad44b6.7fc62b",
        "type": "http request",
        "z": "133b6aba.dccfb5",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "146.64.91.245:9001/cont",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 1760,
        "wires": [
            [
                "ac480271.b72c7"
            ]
        ]
    },
    {
        "id": "547b750d.5543ec",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1760,
        "wires": [
            [
                "12ad44b6.7fc62b"
            ]
        ]
    },
    {
        "id": "ac480271.b72c7",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1760,
        "wires": []
    },
    {
        "id": "da1de6dc.7e2008",
        "type": "ui_button",
        "z": "133b6aba.dccfb5",
        "name": "",
        "group": "d86e3ba5.2791c8",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Continue?",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "Continue?",
        "payload": "Count",
        "payloadType": "str",
        "topic": "",
        "x": 260,
        "y": 1720,
        "wires": [
            [
                "12ad44b6.7fc62b"
            ]
        ]
    },
    {
        "id": "76f80bb8.218674",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "20.6",
        "payloadType": "num",
        "x": 150,
        "y": 940,
        "wires": [
            [
                "27d3512b.cbef5e",
                "8d32330.a1f8ed"
            ]
        ]
    },
    {
        "id": "95cc08de.20ed28",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "Save as global",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureSystemMax",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "27d3512b.cbef5e",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flowsynmaxi1.pressureAlarm",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "89ad0f7a.c9e9c",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "42cc6cd3.6dc7d4"
            ]
        ]
    },
    {
        "id": "42cc6cd3.6dc7d4",
        "type": "switch",
        "z": "133b6aba.dccfb5",
        "name": "",
        "property": "flowsynmaxi1.pressureAlarm",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 1040,
        "wires": [
            [
                "c80bede.972fb1"
            ]
        ]
    },
    {
        "id": "c80bede.972fb1",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"msg\":\"Shutdown pump A\",\"topic\":\"PumpAFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":0,\"delay\":0.1},{\"msg\":\"Shutdown pump A\",\"topic\":\"PumpBFlowRate\",\"cmd_type\":1,\"ReactorNo\":1,\"set\":0,\"delay\":0.1}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "d8dc224a.b9a5c",
                "d9c2589b.f89d88"
            ]
        ]
    },
    {
        "id": "8d32330.a1f8ed",
        "type": "ui_text_input",
        "z": "133b6aba.dccfb5",
        "name": "",
        "label": "Max. System Pressure (bar)",
        "tooltip": "",
        "group": "1fcf921f.da5dae",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 380,
        "y": 940,
        "wires": [
            [
                "95cc08de.20ed28"
            ]
        ]
    },
    {
        "id": "d5264c93.c871f",
        "type": "e-mail",
        "z": "133b6aba.dccfb5",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "carljohanvdw@gmail.com",
        "dname": "",
        "x": 1170,
        "y": 880,
        "wires": []
    },
    {
        "id": "d9c2589b.f89d88",
        "type": "change",
        "z": "133b6aba.dccfb5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Max System Pressure Reached!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 880,
        "wires": [
            [
                "d5264c93.c871f"
            ]
        ]
    },
    {
        "id": "5be72828.249c48",
        "type": "ui_button",
        "z": "133b6aba.dccfb5",
        "name": "",
        "group": "d86e3ba5.2791c8",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "SAD injection?",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "SAD injection?",
        "payload": "Count",
        "payloadType": "str",
        "topic": "",
        "x": 300,
        "y": 1820,
        "wires": [
            [
                "963eef47.a8eb4"
            ]
        ]
    },
    {
        "id": "998216e4.02e598",
        "type": "catch",
        "z": "133b6aba.dccfb5",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "d5e899ab.171498"
            ]
        ]
    },
    {
        "id": "d5e899ab.171498",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "fba0e56f.98f758",
        "type": "comment",
        "z": "133b6aba.dccfb5",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "d6bbf6c039d6d974",
        "type": "OpcUa-Client2-Read",
        "z": "133b6aba.dccfb5",
        "inputs": 1,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "attributeId": "Value",
        "nodeId": "ns=2;s=Local.iCIR.SoftwareVersion",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "7b3179ab19a877b6"
            ],
            [
                "eaa06397bc45f357"
            ]
        ]
    },
    {
        "id": "0c1165424ebe9e9e",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=2;s=iCache.Temperature1",
        "payload": "ns=2;s=iCache.Temperature1",
        "payloadType": "str",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "d6bbf6c039d6d974"
            ]
        ]
    },
    {
        "id": "7b3179ab19a877b6",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "eaa06397bc45f357",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "4404a32d42d46c8e",
        "type": "OpcUa-Client2-Monitor",
        "z": "133b6aba.dccfb5",
        "d": true,
        "inputs": 0,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "subscription": "s0",
        "startImmediately": true,
        "nodeId": "ns=2;s=iCache.Temperature1",
        "samplingInterval": "100",
        "discardOldest": true,
        "queueSize": 10,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "16487de795563273"
            ],
            [
                "b73c628cd9fb1288"
            ]
        ]
    },
    {
        "id": "16487de795563273",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "b73c628cd9fb1288",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "7b082a60efe4b166",
        "type": "OpcUa-Client2-Monitor",
        "z": "133b6aba.dccfb5",
        "d": true,
        "inputs": 0,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "subscription": "s0",
        "startImmediately": true,
        "nodeId": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "samplingInterval": "10000",
        "discardOldest": true,
        "queueSize": 10,
        "x": 440,
        "y": 40,
        "wires": [
            [
                "73794340356de062"
            ],
            [
                "d1266c2dde7ba38b"
            ]
        ]
    },
    {
        "id": "73794340356de062",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1266c2dde7ba38b",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "b73b3acbaa4f455e",
        "type": "OpcUa-Client2-Read",
        "z": "133b6aba.dccfb5",
        "inputs": 1,
        "output": 4,
        "name": "",
        "endpoint": "3ff012d4d8efe892",
        "attributeId": "Value",
        "nodeId": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "e714a4cd49b2b70f"
            ],
            [
                "8e2c504341f77739"
            ]
        ]
    },
    {
        "id": "4b69956c7663540d",
        "type": "inject",
        "z": "133b6aba.dccfb5",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "payload": "ns=2;s=Local.iCIR.Probe1.SpectraRaw",
        "payloadType": "str",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "b73b3acbaa4f455e"
            ]
        ]
    },
    {
        "id": "e714a4cd49b2b70f",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e2c504341f77739",
        "type": "debug",
        "z": "133b6aba.dccfb5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "fe05d9c8.8e52e8",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 260,
        "wires": []
    },
    {
        "id": "e8e1d849.4406b8",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "",
        "func": "var i = 0;\nlet result = 0;\n\nsendResult()\n\nfunction sendResult() {\n    let x1 = -( msg.payload.experiment[4].set * msg.payload.experiment[4].set );\n    // let x1 = msg.payload.experiment[4].set;\n    // let y1 = -(msg.payload.experiment[5].set * msg.payload.experiment[5].set);\n    let y1 = -msg.payload.experiment[5].set;\n    let z1 = (msg.payload.experiment[0].set - 20) * (msg.payload.experiment[0].set - 20);\n\n    result = (x1 +  y1 + z1);\n    node.send({payload:result})\n    // node.send({payload:msg.payload.experiment[0].set1})\n    \n    // if (i == msg.payload.length) { return null; }\n    // node.send({payload:msg.payload[i]});\n    // setTimeout(sendResult, msg.payload[i].delay * 1000);\n    // i += 1;\n    }\n\n// function sendNodeAndWait() {\n//     if (i == msg.payload.length) { return null; }\n//     node.send({payload:msg.payload[i]});\n//     setTimeout(sendNodeAndWait, msg.payload[i].delay * 1000);\n//     i += 1;\n// }\n\n\n// return result;\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 220,
        "wires": [
            [
                "fe05d9c8.8e52e8",
                "678d28a4.777818"
            ]
        ]
    },
    {
        "id": "678d28a4.777818",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "write",
        "filename": "/home/pi/Desktop/Auto_optimisation/Node-red_output.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1510,
        "y": 220,
        "wires": [
            [
                "c4b0ca6c.ef2ce8"
            ]
        ]
    },
    {
        "id": "2f1a1476.40b30c",
        "type": "http in",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "",
        "url": "/start",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "cb0372b9.3f75a",
                "2c0c73bd.7cdc7c",
                "e8e1d849.4406b8"
            ]
        ]
    },
    {
        "id": "cb0372b9.3f75a",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 160,
        "wires": []
    },
    {
        "id": "2c0c73bd.7cdc7c",
        "type": "http response",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "Response",
        "statusCode": "",
        "headers": {},
        "x": 1160,
        "y": 260,
        "wires": []
    },
    {
        "id": "e42eb903.603c18",
        "type": "exec",
        "z": "e166d00e.d9731",
        "command": "python3 -u /home/pi/Desktop/Auto_optimisation/scipy-2.py",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "Scipy code",
        "x": 1550,
        "y": 800,
        "wires": [
            [
                "1cafef12.8643c1",
                "be45c4be.e04e48",
                "82560200.febf",
                "1d02ecfb.3e0f53"
            ],
            [
                "14376a19.8bbf86"
            ],
            [
                "17798080.f275ef"
            ]
        ]
    },
    {
        "id": "1cafef12.8643c1",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 760,
        "wires": []
    },
    {
        "id": "14376a19.8bbf86",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 800,
        "wires": []
    },
    {
        "id": "17798080.f275ef",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 840,
        "wires": []
    },
    {
        "id": "6069dd63.7b4504",
        "type": "ui_text",
        "z": "e166d00e.d9731",
        "group": "f236e451.b2a578",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Python output",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2100,
        "y": 940,
        "wires": []
    },
    {
        "id": "a20e85fc.e98c28",
        "type": "ui_form",
        "z": "e166d00e.d9731",
        "name": "",
        "label": "Set Parameters",
        "group": "2d861bd4.e40a94",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "bound_retTime_min",
                "value": "bound_retTime_min",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "bound_retTime_max",
                "value": "bound_retTime_max",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "bound_ratio_min",
                "value": "bound_ratio_min",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "bound_ratio_max",
                "value": "bound_ratio_max",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "bound_temp_min",
                "value": "bound_temp_min",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "bound_temp_max",
                "value": "bound_temp_max",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "reactor_vol",
                "value": "reactor_vol",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "maxiterations",
                "value": "maxiterations",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Tolerance for termination",
                "value": "tolerance",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "bound_retTime_min": "",
            "bound_retTime_max": "",
            "bound_ratio_min": "",
            "bound_ratio_max": "",
            "bound_temp_min": "",
            "bound_temp_max": "",
            "reactor_vol": "",
            "maxiterations": "",
            "tolerance": ""
        },
        "payload": "",
        "submit": "Start Opt.",
        "cancel": "Clear",
        "topic": "",
        "x": 620,
        "y": 760,
        "wires": [
            [
                "ce50597d.f48568"
            ]
        ]
    },
    {
        "id": "32cb0c06.41b2f4",
        "type": "ui_table",
        "z": "e166d00e.d9731",
        "group": "1dc9b881.43b697",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "7",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 2110,
        "y": 1000,
        "wires": [
            [
                "1d8f2a8a.1b39b5"
            ]
        ]
    },
    {
        "id": "10676089.26b1ff",
        "type": "ui_button",
        "z": "e166d00e.d9731",
        "name": "",
        "group": "2d861bd4.e40a94",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Kill",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "kill",
        "payloadType": "str",
        "topic": "",
        "x": 470,
        "y": 800,
        "wires": [
            [
                "a78f253b.e3dee8"
            ]
        ]
    },
    {
        "id": "a66ee333.57653",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "Kill Opt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 800,
        "wires": [
            [
                "10676089.26b1ff"
            ]
        ]
    },
    {
        "id": "a78f253b.e3dee8",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "SIGTERM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 800,
        "wires": [
            [
                "e42eb903.603c18"
            ]
        ]
    },
    {
        "id": "be45c4be.e04e48",
        "type": "json",
        "z": "e166d00e.d9731",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 940,
        "wires": [
            [
                "6b490d02.1ea694",
                "665ecf41.0da6c",
                "ee4fb9e.67dea48",
                "f3500890.ecf258"
            ]
        ]
    },
    {
        "id": "1d8f2a8a.1b39b5",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6b490d02.1ea694",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "Save to node-red_output",
        "filename": "C:\\Users\\Johan-Laptop\\PycharmProjects\\Auto_optimisation\\Node-red_output.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1990,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4c7d3d.c1c4b",
        "type": "ui_button",
        "z": "e166d00e.d9731",
        "name": "Load Preset",
        "group": "2d861bd4.e40a94",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Load Preset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"bound_retTime_min\":10,\"bound_retTime_max\":100,\"bound_ratio_min\":1,\"bound_ratio_max\":20,\"maxiterations\":30,\"tolerance\":1,\"reactor_vol\":10,\"bound_temp_min\":25,\"bound_temp_max\":35}",
        "payloadType": "json",
        "topic": "",
        "x": 450,
        "y": 760,
        "wires": [
            [
                "a20e85fc.e98c28",
                "5dd48959.d75e28",
                "f6b2c074.c2f7c",
                "5bc898e5.2cca68"
            ]
        ]
    },
    {
        "id": "e4d98eec.3445",
        "type": "debug",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 680,
        "wires": []
    },
    {
        "id": "114332d8.a4374d",
        "type": "ui_dropdown",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "",
        "label": "Method Option",
        "tooltip": "",
        "place": "",
        "group": "2d861bd4.e40a94",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 740,
        "y": 680,
        "wires": [
            [
                "fceb34d2.1414c8"
            ]
        ]
    },
    {
        "id": "ac5e9326.db8fb",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "Save to node-red_output",
        "filename": "C:\\Users\\Johan-Laptop\\PycharmProjects\\Auto_optimisation\\Node-red_output.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1570,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "13372d5b.a0e9c3",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "Load Preset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 290,
        "y": 760,
        "wires": [
            [
                "9c4c7d3d.c1c4b"
            ]
        ]
    },
    {
        "id": "99a1533.af17db",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "Opt_settings",
        "filename": "/home/pi/Desktop/Auto_optimisation/input_scipy1.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 760,
        "wires": [
            [
                "e42eb903.603c18",
                "f6a1069c.bc35a8",
                "82560200.febf"
            ]
        ]
    },
    {
        "id": "288219b.fc767e6",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"local_opt\"}",
        "payloadType": "str",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "e5f20b92.e7f488"
            ]
        ]
    },
    {
        "id": "fceb34d2.1414c8",
        "type": "change",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 680,
        "wires": [
            [
                "e4d98eec.3445"
            ]
        ]
    },
    {
        "id": "ce50597d.f48568",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "method",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 760,
        "wires": [
            [
                "b6ae3cc7.46503",
                "15aed144.79cdff"
            ]
        ]
    },
    {
        "id": "b6ae3cc7.46503",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 720,
        "wires": []
    },
    {
        "id": "15aed144.79cdff",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "",
        "func": "var method = flow.get('method')\nmsg.payload['method'] = method\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 760,
        "wires": [
            [
                "99a1533.af17db",
                "c9037371.920bd",
                "22687b78.194a94",
                "97e51e8f.5b4ed"
            ]
        ]
    },
    {
        "id": "c9037371.920bd",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 720,
        "wires": []
    },
    {
        "id": "5dd48959.d75e28",
        "type": "function",
        "z": "e166d00e.d9731",
        "d": true,
        "name": "",
        "func": "msg.options = [{\"Nelder-Mead\":\"Nelder-Mead\"}, {\"Powell\":\"Powell\"},{\"CG\":\"CG\"}, {\"BFGS\":\"BFGS\"}, {\"Newton-CG\":\"Newton-CG\"}, {\"L-BFGS-B\":\"L-BFGS-B\"}, {\"TNC\":\"TNC\"}, {\"COBYLA\":\"COBYLA\"}, {\"SLSQP\":\"SLSQP\"}]\nmsg.payload = \"Powell\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "114332d8.a4374d"
            ]
        ]
    },
    {
        "id": "b92b8037.d10a1",
        "type": "ui_text_input",
        "z": "e166d00e.d9731",
        "name": "",
        "label": "Exp. name",
        "tooltip": "",
        "group": "2d861bd4.e40a94",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "500",
        "topic": "",
        "x": 710,
        "y": 560,
        "wires": [
            [
                "8d06ce9f.16ba6"
            ]
        ]
    },
    {
        "id": "8d06ce9f.16ba6",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "exp_name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 560,
        "wires": [
            [
                "1fefb3fb.f6b44c"
            ]
        ]
    },
    {
        "id": "1fefb3fb.f6b44c",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 560,
        "wires": []
    },
    {
        "id": "305c0f99.9650c",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "Save output",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1970,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "82560200.febf",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "/home/pi/Desktop/Auto_optimisation/@.txt",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "@",
                "fromt": "str",
                "to": "exp_name",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 700,
        "wires": [
            [
                "305c0f99.9650c",
                "fc7abf57.f34a7"
            ]
        ]
    },
    {
        "id": "f6b2c074.c2f7c",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Exp1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "b92b8037.d10a1"
            ]
        ]
    },
    {
        "id": "fc7abf57.f34a7",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 600,
        "wires": []
    },
    {
        "id": "f38b1edc.13c34",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 740,
        "wires": []
    },
    {
        "id": "1d02ecfb.3e0f53",
        "type": "split",
        "z": "e166d00e.d9731",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1930,
        "y": 740,
        "wires": [
            [
                "f38b1edc.13c34"
            ]
        ]
    },
    {
        "id": "f6a1069c.bc35a8",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 600,
        "wires": []
    },
    {
        "id": "e5f20b92.e7f488",
        "type": "ui_dropdown",
        "z": "e166d00e.d9731",
        "name": "",
        "label": "Type",
        "tooltip": "",
        "place": "Select option",
        "group": "2d861bd4.e40a94",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "local_opt",
                "value": "local_opt",
                "type": "str"
            },
            {
                "label": "global_opt",
                "value": "global_opt",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "92033372.e8f0c"
            ]
        ]
    },
    {
        "id": "5abe8b66.7a68f4",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "local_opt methods",
        "func": "msg.options = [{\"Nelder-Mead\":\"Nelder-Mead\"}, {\"Powell\":\"Powell\"},{\"CG\":\"CG\"}, {\"BFGS\":\"BFGS\"}, {\"TNC\":\"TNC\"}, {\"COBYLA\":\"COBYLA\"}, {\"SLSQP\":\"SLSQP\"}]\nmsg.payload = \"Powell\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "7e587e8f.6beb9"
            ]
        ]
    },
    {
        "id": "7e587e8f.6beb9",
        "type": "ui_dropdown",
        "z": "e166d00e.d9731",
        "name": "",
        "label": "Method Option",
        "tooltip": "",
        "place": "",
        "group": "2d861bd4.e40a94",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "ce72cfd2.fb2b1",
                "bc952319.441e6"
            ]
        ]
    },
    {
        "id": "92033372.e8f0c",
        "type": "switch",
        "z": "e166d00e.d9731",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "local_opt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "global_opt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 620,
        "wires": [
            [
                "5abe8b66.7a68f4"
            ],
            [
                "d6e97159.90c75"
            ]
        ]
    },
    {
        "id": "d6e97159.90c75",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "global_opt methods",
        "func": "msg.options = [{\"brute\":\"brute\"}, {\"basinhopping\":\"basinhopping\"},{\"differential_evolution - random\":\"differential_evolution\"}, {\"shgo\":\"shgo\"}, {\"dual_annealing - random\":\"dual_annealing\"} ]\nmsg.payload = \"shgo\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 640,
        "wires": [
            [
                "7e587e8f.6beb9"
            ]
        ]
    },
    {
        "id": "ce72cfd2.fb2b1",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bc952319.441e6",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "5529323b.3d710c",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1040,
        "wires": []
    },
    {
        "id": "665ecf41.0da6c",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "last result",
        "func": "msg.payload = msg.payload[msg.payload.length - 1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1940,
        "y": 940,
        "wires": [
            [
                "6069dd63.7b4504"
            ]
        ]
    },
    {
        "id": "e6766e48.29808",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2710,
        "y": 980,
        "wires": []
    },
    {
        "id": "4a366c1b.a09914",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2710,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b6f5d4f.52a2f28",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "Build two cumulating random datasets",
        "func": "// this is where you define the legend for \n// the datasets\n// var title = \"RESULTS!!!\";\nvar title = 'Results';\nvar legend1 = 'Method: '+ flow.get('method');\nvar bound_x_min = flow.get('bound_retTime_min')\nvar bound_x_max = flow.get('bound_retTime_max')\nvar bound_y_min = flow.get('bound_ratio_min')\nvar bound_y_max = flow.get('bound_ratio_max')\n\n// variables to be used to \nvar i, x, y, r;\n// initialise the counter to 0 if it doesn't exist already\nvar data1 = flow.get('data1')||'';\n\n\n// var count = flow.get('count')||0;\n// count += 1;\n// if (count > 15) {\n    // count = 1;\n    // data1 = '{x: 100,  y: 100,  r: 1},'; // Force the size of the\n    // data1 = '{x: -100, y: -100, r: 1},'; // plot so it won't resize\n// } \n// store the value back\n// flow.set('count',count);\n// make it part of the outgoing msg object\n// msg.count = count;\n\n// for dataset #1\n// this code generates one x/y point \n// between -100 and +100 and a random \n//size between 1 and 10\n//node.warn(\"db1=\"+data1);\n// var lastItem = msg.payload[msg.payload.length -1]\n// x = ();\nx = msg.payload[msg.payload.length -1].Ret_time;\n// x = msg.payload[msg.payload.length -1].Temp;\ny = msg.payload[msg.payload.length -1].Ratio;\n// y = msg.payload[msg.payload.length -1].Temp;\n// r = msg.payload[msg.payload.length -1].Result;\nr = 2;\n\n// y = lastItem.y;\n// r = lastItem.Result;\n// y = getRndInteger(-100,100);\n// r = getRndInteger(0,10);\ndata1 += \"{x: \"+x+\", y: \"+y+\", r: \"+r+\"},\";\ndelete x\n//node.warn(\"db2=\"+data1);\n// this line removes the last comma to end the dataset\ndata1 = data1.replace(/^(.*),(.*?)$/, '$1')\n\n\n// Now we build msg.payload\nmsg.payload = { \"title\"   : title,\n                \"legend1\" : legend1,\n                \"data1\"   : data1,\n                \"bound_x_min\" : bound_x_min,\n                \"bound_x_max\" : bound_x_max,\n                \"bound_y_min\" : bound_y_min,\n                \"bound_y_max\" : bound_y_max\n    };\ndata1 += \",\";\n\nflow.set([\"data1\"], [data1]);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2430,
        "y": 940,
        "wires": [
            [
                "411f6a01.4bd884",
                "562820f0.2174b",
                "bc1a3e67.8509e"
            ]
        ]
    },
    {
        "id": "411f6a01.4bd884",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 940,
        "wires": []
    },
    {
        "id": "562820f0.2174b",
        "type": "template",
        "z": "e166d00e.d9731",
        "name": "Create the msg.template to use",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<canvas id=\"bubble-chart\" width=\"1\" height=\"1\" style=\"border:1px solid #000000;\"></canvas>\n\n<script>\nnew Chart(document.getElementById(\"bubble-chart\"), {\n    type: 'bubble',\n    data: {\n      labels: \"label\",\n      datasets: [\n        {\n          label: \"{{{payload.legend1}}}\",\n          backgroundColor: \"rgba(65, 72, 255, 1.0000)\",\n          borderColor: \"#000\",\n          data: [\n            {{{payload.data1}}}\n\n          ]\n        }\n      ]\n    },\n    options: {\n        animation: false,\n        legend: {\n            display: true,\n            labels: {\n                fontColor: 'rgb(255, 99, 132)'\n            }\n        },\n    title: {\n        display: true,\n        text: '{{{payload.title}}}'\n      }, \n      scales: {\n        yAxes: [{\n            ticks: {\n                // min: -50,\n                // max: 500,\n                // stepsize: 5\n                // /suggestedMin: '-50',\n                // suggestedMax: '500'\n                suggestedMin: {{{payload.bound_y_min}}},\n                suggestedMax: {{{payload.bound_y_max}}}\n            },\n          scaleLabel: {\n            display: true,\n            labelString: \"y\"\n          }\n        }],\n        xAxes: [{\n            ticks: {\n                suggestedMin: {{{payload.bound_x_min}}},\n                suggestedMax: {{{payload.bound_x_max}}}\n            },\n          scaleLabel: {\n            display: true,\n            labelString: \"x\",\n            ticks: {\n                suggestedMin: \"{{{payload.bound_x_min}}}\",\n                suggestedMax: \"{{{payload.bound_x_max}}}\"\n            }\n          }\n        }]\n      }\n    }\n});\n\n</script>\n",
        "output": "str",
        "x": 2490,
        "y": 980,
        "wires": [
            [
                "e6766e48.29808",
                "40cf1ced.969704"
            ]
        ]
    },
    {
        "id": "40cf1ced.969704",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "f236e451.b2a578",
        "name": "Bubble (dynamic growing)",
        "order": 2,
        "width": "6",
        "height": "8",
        "format": "Run exp. to generate graph",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2530,
        "y": 1020,
        "wires": [
            [
                "4a366c1b.a09914"
            ]
        ]
    },
    {
        "id": "ee4fb9e.67dea48",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "",
        "func": "\nmsg.payload = msg.payload.map(item => {\n      return {\n        Ret_time: item[0],\n        Ratio: item[1],\n        Temp: item[2],\n        Result: item[3]\n      };\n    });\n\nreturn msg;\n\n// var i;\n// for(i = 0; i < msg.payload.length; i++){\n//     msg.payload[i].test = msg.payload[i][0];\n//     // delete msg.payload[i][0];\n//     return msg;\n// }\n// return msg;\n\n\n// msg = msg.payload.map( s => {\n// msg = msg.payload.forEach( result => {\n//     result.x = result;\n//     delete result;\n// })\n// return msg;\n\n\n// )\n// for (i in msg.payload)\n  \n//   if ( s.hasOwnProperty0] )\n//   {\n//      s.x = s.0;\n//      delete s.0;   \n//   }\n//   return s;\n// })\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1940,
        "y": 1000,
        "wires": [
            [
                "5529323b.3d710c",
                "32cb0c06.41b2f4",
                "b6f5d4f.52a2f28",
                "3b09a7a0.838058"
            ]
        ]
    },
    {
        "id": "3b09a7a0.838058",
        "type": "function",
        "z": "e166d00e.d9731",
        "name": "",
        "func": "\nmsg.payload = msg.payload[msg.payload.length -1].x\n// let x = {}\n// x = lastItem.x;\n// y = lastItem.y;\n// r = lastItem.Result;\n// msg = (x);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2240,
        "y": 1120,
        "wires": [
            [
                "54cc7046.6e667"
            ]
        ]
    },
    {
        "id": "54cc7046.6e667",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 1120,
        "wires": []
    },
    {
        "id": "22687b78.194a94",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bound_retTime_min",
                "pt": "flow",
                "to": "payload.bound_retTime_min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bound_retTime_max",
                "pt": "flow",
                "to": "payload.bound_retTime_max",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bound_ratio_min",
                "pt": "flow",
                "to": "payload.bound_ratio_min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bound_ratio_max",
                "pt": "flow",
                "to": "payload.bound_ratio_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "97e51e8f.5b4ed",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "Reset data1",
        "rules": [
            {
                "t": "set",
                "p": "data1",
                "pt": "flow",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "bb1ee6aa.1ada28",
        "type": "ui_ui_control",
        "z": "e166d00e.d9731",
        "name": "",
        "events": "connect",
        "x": 760,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "f3500890.ecf258",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 880,
        "wires": []
    },
    {
        "id": "bdaab69b.dfa508",
        "type": "http in",
        "z": "e166d00e.d9731",
        "name": "",
        "url": "/result",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "977203c8.95603"
            ]
        ]
    },
    {
        "id": "1c3f2573.9281eb",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 400,
        "wires": []
    },
    {
        "id": "977203c8.95603",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "testing",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 400,
        "wires": [
            [
                "1c3f2573.9281eb",
                "f34b39ed.d07398"
            ]
        ]
    },
    {
        "id": "f34b39ed.d07398",
        "type": "http response",
        "z": "e166d00e.d9731",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1530,
        "y": 360,
        "wires": []
    },
    {
        "id": "5bc898e5.2cca68",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "local_opt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 680,
        "wires": [
            [
                "e5f20b92.e7f488"
            ]
        ]
    },
    {
        "id": "bdffd1ac.4e8b",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "2d861bd4.e40a94",
        "name": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2430,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "c0c1a7d9.5bed28",
        "type": "template",
        "z": "e166d00e.d9731",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 2500,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5e0d9a67.116c84",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "2e16cb22.999174",
        "name": "Load Plotly CDN",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 2690,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "1ca80c56.a7c7d4",
        "type": "comment",
        "z": "e166d00e.d9731",
        "name": "Plotly example flows",
        "info": "",
        "x": 2260,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c5db9e69.e34e5",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 2240,
        "y": 1340,
        "wires": [
            [
                "a230896e.9204c8"
            ]
        ]
    },
    {
        "id": "a230896e.9204c8",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "World temperatures - bar chart",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"x\":[\"London\",\"Canberra\",\"Paris\",\"Vienna\",\"Dhaka\",\"Brussels\",\"Sofia\",\"Ottawa\"],\"y\":[\"58.6\",\"65.7\",\"43\",\"48\",\"73.4\",\"53.5\",\"67.1\",\"38.9\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2450,
        "y": 1340,
        "wires": [
            [
                "75a92564.21e79c"
            ]
        ]
    },
    {
        "id": "75a92564.21e79c",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "6aa20356.9b59bc",
        "name": "Example 2",
        "order": 2,
        "width": 16,
        "height": 8,
        "format": "<div id=\"example2\"></div>\n<script>\n\n// Initialize chart\nvar data = [{x:[0],y:[0]}];\nvar layout = {\n    title:'Awaiting data',\n    };\nPlotly.newPlot('example2', data, layout);\n\n// Update data & layout\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n       \n    var data = [{\n        x:msg.payload.x,\n        y:msg.payload.y,\n        type: 'bar',\n        connectgaps: true\n        }];\n        \n    var layout = {\n        title: \"World Temperatures (2)\",\n        titlefont: {\n            size: 22,\n            },\n        autosize: true,\n        plot_bgcolor: '#ffffff',\n        paper_bgcolor: '#ffffff',\n        'xaxis': {\n           title: 'Location',\n            fixedrange: true\n            },\n        'yaxis': {\n            title: 'Temperature °F',\n            fixedrange: true\n            }\n        };\n\n    Plotly.newPlot('example2', data, layout, { displayModeBar: false }, { staticPlot: true }, { displaylogo: false },)\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2710,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "10ba8dc7.179372",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "wind/gusts twin axis line chart",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"wind\":[\"20.2\",\"19.1\",\"15.0\",\"12.9\",\"9.8\",\"7.6\",\"6.5\",\"6.4\",\"6.2\",\"6.1\",\"6.0\",\"5.8\",\"5.7\",\"8.6\",\"12.5\",\"18.5\",\"24.5\",\"27.5\",\"28.5\",\"28\"],\"gust\":[\"27.3\",\"24.4\",\"22.5\",\"18.4\",\"17.4\",\"15.3\",\"13.2\",\"11.2\",\"9.1\",\"8.0\",\"8.0\",\"11.9\",\"13.8\",\"15.8\",\"17.7\",\"20.6\",\"24.5\",\"28.4\",\"30.3\",\"31.2\"],\"time\":[\"2020-07-24 16:49:29\",\"2020-07-24 16:59:29\",\"2020-07-24 17:09:29\",\"2020-07-24 17:19:29\",\"2020-07-24 17:29:29\",\"2020-07-24 17:39:29\",\"2020-07-24 17:49:29\",\"2020-07-24 17:59:29\",\"2020-07-24 18:09:29\",\"2020-07-24 18:19:29\",\"2020-07-24 18:29:29\",\"2020-07-24 18:39:29\",\"2020-07-24 18:49:29\",\"2020-07-24 18:59:29\",\"2020-07-24 19:09:29\",\"2020-07-24 19:19:29\",\"2020-07-24 19:29:29\",\"2020-07-24 19:39:29\",\"2020-07-24 19:49:29\",\"2020-07-24 19:59:29\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2450,
        "y": 1380,
        "wires": [
            [
                "15fd89a9.5f48a6"
            ]
        ]
    },
    {
        "id": "32886b1c.7c3c64",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 2240,
        "y": 1380,
        "wires": [
            [
                "10ba8dc7.179372"
            ]
        ]
    },
    {
        "id": "66e905d7.65d2bc",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 2240,
        "y": 1300,
        "wires": [
            [
                "324422cd.18882e"
            ]
        ]
    },
    {
        "id": "324422cd.18882e",
        "type": "change",
        "z": "e166d00e.d9731",
        "name": "UK Temperature - line chart",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"x\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"y\":[\"4.6\",\"4.9\",\"9.3\",\"14.2\",\"17.4\",\"19.3\",\"20.8\",\"21.6\",\"19.2\",\"14.3\",\"9.8\",\"6.3\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 1300,
        "wires": [
            [
                "2e5762f6.c687fe"
            ]
        ]
    },
    {
        "id": "2e5762f6.c687fe",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "6aa20356.9b59bc",
        "name": "Example 1",
        "order": 1,
        "width": 16,
        "height": 8,
        "format": "<div id=\"example1\"></div>\n<script>\n\n// Initialize chart\nvar data = [{x:[0],y:[0]}];\nvar layout = {\n    title:'Awaiting data',\n    };\nPlotly.newPlot('example1', data, layout);\n\n// Update data & layout\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n       \n    var data = [{\n        x:msg.payload.x,\n        y:msg.payload.y,\n        connectgaps: true\n        }];\n\n    var layout = {\n        title: \"Monthly UK Temperatures (1)\",\n        titlefont: {\n            size: 22,\n            },\n        autosize: true,\n        plot_bgcolor: '#ffffff',\n        paper_bgcolor: '#ffffff',\n        'xaxis': {\n            title: 'Month',\n            fixedrange: true\n            },\n        'yaxis': {\n            title: 'Average Temperature °C',\n            mode: 'lines',\n            fixedrange: true\n            }\n        };\n\n    Plotly.newPlot('example1', data, layout, { displayModeBar: false }, { staticPlot: true }, { displaylogo: false },)\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2710,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "15fd89a9.5f48a6",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "6aa20356.9b59bc",
        "name": "Example 3",
        "order": 3,
        "width": 16,
        "height": 8,
        "format": "<div id=\"example3\"></div>\n<script>\n\n// Initialize chart\nvar layout = {\n    title:'Awaiting data',\n    };\nvar data = [{x:[0],y:[0]}];\nPlotly.newPlot('example3', data, layout);\n\n// Update data & layout\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        \n    var winddata = {\n        x:msg.payload.time,\n        y:msg.payload.wind,\n        name: 'wind-speed',\n        type: 'bar',\n        marker: {\n            color: '#8080ff',\n            opacity: 0.7,\n            line:   {\n            color: '#0033cc',\n            width: 1.5\n                    }\n                },\n        connectgaps: true\n     };\n     \n    var gustdata = {\n        x:msg.payload.time,\n        y:msg.payload.gust,\n        name: 'wind-gust',\n        mode: 'lines',\n        line: {\n           dash: 'dashdot',\n           color: '#ff0000'\n            },\n        yaxis: 'y2',\n        connectgaps: true\n     };\n\nvar data = [gustdata,winddata];\n\n    var layout = {\n    title: 'Windspeed & Gust data (3)',\n    titlefont: {\n        size: 22,\n        },\n    showlegend: false,\n    plot_bgcolor: '#ffffff',\n    paper_bgcolor: '#ffffff',\n    'yaxis': {\n        title: 'Windspeed mph',\n        range: [0, 35],\n        color: '#0000ff'\n        },\n    'yaxis2': {\n        title: 'WindGusts mph',\n        range: [0, 35],\n        color: '#ff0000',\n        overlaying: 'y',\n        side: 'right'\n        },\n    'xaxis': {\n        title: 'Time recorded',\n       'tickformat': '%X'\n        }\n    };\n\n      console.log(data,layout)\n      Plotly.newPlot('example3', data, layout, { modeBarButtonsToRemove: ['toImage','toggleSpikelines'], displaylogo: false})\n     };\n  });\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2710,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "bc1a3e67.8509e",
        "type": "template",
        "z": "e166d00e.d9731",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "var trace1 = {\n    data: [ {{{payload.data1}}}]\n   \tmode: 'markers',\n\tmarker: {\n\t\tsize: 12,\n\t\tline: {\n\t\tcolor: 'rgba(217, 217, 217, 0.14)',\n\t\twidth: 0.5},\n\t\topacity: 0.8},\n\ttype: 'scatter3d'\n};\n\nvar data = [trace1];\nvar layout = {margin: {\n\tl: 0,\n\tr: 0,\n\tb: 0,\n\tt: 0\n  }};\nPlotly.newPlot('myDiv', data, layout);\n});",
        "output": "str",
        "x": 2740,
        "y": 1100,
        "wires": [
            [
                "d48ac7f4.7f28b8",
                "8832f302.593a1"
            ]
        ]
    },
    {
        "id": "d48ac7f4.7f28b8",
        "type": "ui_template",
        "z": "e166d00e.d9731",
        "group": "f236e451.b2a578",
        "name": "",
        "order": 2,
        "width": "6",
        "height": "8",
        "format": "Run exp. to generate graph",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2900,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "aa84788a.a950e8",
        "type": "template",
        "z": "e166d00e.d9731",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Plotly.d3.csv('https://raw.githubusercontent.com/plotly/datasets/master/3d-scatter.csv', function(err, rows){\nfunction unpack(rows, key) {\n\treturn rows.map(function(row)\n\t{ return row[key] });}\n\nvar trace1 = {\n\tx:unpack(rows, 'x1'), y: unpack(rows, 'y1'), z: unpack(rows, 'z1'),\n\tmode: 'markers',\n\tmarker: {\n\t\tsize: 12,\n\t\tline: {\n\t\tcolor: 'rgba(217, 217, 217, 0.14)',\n\t\twidth: 0.5},\n\t\topacity: 0.8},\n\ttype: 'scatter3d'\n};\n\n\nvar data = [trace1];\nvar layout = {margin: {\n\tl: 0,\n\tr: 0,\n\tb: 0,\n\tt: 0\n  }};\nPlotly.newPlot('myDiv', data, layout);\n});",
        "output": "str",
        "x": 2740,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "8832f302.593a1",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2890,
        "y": 1060,
        "wires": []
    },
    {
        "id": "bf7864b3.aeabc8",
        "type": "file",
        "z": "e166d00e.d9731",
        "name": "Opt_settings",
        "filename": "/home/pi/Desktop/Auto_optimisation/input_scipy12.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1230,
        "y": 1080,
        "wires": [
            [
                "94254d14.7ecaa"
            ]
        ]
    },
    {
        "id": "94254d14.7ecaa",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8286fb54.3507f8",
        "type": "inject",
        "z": "e166d00e.d9731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1060,
        "y": 1080,
        "wires": [
            [
                "bf7864b3.aeabc8"
            ]
        ]
    },
    {
        "id": "c4b0ca6c.ef2ce8",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 240,
        "wires": []
    },
    {
        "id": "4405e5e2.0ff9cc",
        "type": "catch",
        "z": "e166d00e.d9731",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "ed2728f7.36c748"
            ]
        ]
    },
    {
        "id": "ed2728f7.36c748",
        "type": "debug",
        "z": "e166d00e.d9731",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "4e79b5c.851e24c",
        "type": "comment",
        "z": "e166d00e.d9731",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "f4cea6d8.befcb8",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "Set Recording flag in Global",
        "rules": [
            {
                "t": "set",
                "p": "fumehood1.setRecording",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "13ee0807.3d1628"
            ]
        ]
    },
    {
        "id": "4abb6a13.9b6e34",
        "type": "ui_switch",
        "z": "8b66c456.b56a28",
        "name": "",
        "label": "RECORD data to DB",
        "tooltip": "",
        "group": "89d9c446.b796e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "f4cea6d8.befcb8"
            ]
        ]
    },
    {
        "id": "c08f9350.fdff2",
        "type": "mysql",
        "z": "8b66c456.b56a28",
        "mydb": "1d1505a8.e805ba",
        "name": "MYSQL (Pharma DB)",
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "c3ecc4da.f6f9c8",
                "7ccec595.f2569c"
            ]
        ]
    },
    {
        "id": "b2a90f3f.86596",
        "type": "template",
        "z": "8b66c456.b56a28",
        "name": "Add recording data",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO `recordings` (`time`) VALUES ({{time}})",
        "output": "str",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "c08f9350.fdff2"
            ]
        ]
    },
    {
        "id": "29bfd7fb.1b9f18",
        "type": "comment",
        "z": "8b66c456.b56a28",
        "name": "Insert new recording in recording table",
        "info": "",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "f21cd184.ada92",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "datetime",
                "pt": "msg",
                "to": "2020-12-08 11:22:33",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "b2a90f3f.86596"
            ]
        ]
    },
    {
        "id": "8e440633.11a4f8",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 700,
        "wires": []
    },
    {
        "id": "c93c3d4b.b733a",
        "type": "inject",
        "z": "8b66c456.b56a28",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "f4cea6d8.befcb8"
            ]
        ]
    },
    {
        "id": "c3ecc4da.f6f9c8",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "Store new rowId of recording",
        "rules": [
            {
                "t": "set",
                "p": "fumehood1.recordingRowID",
                "pt": "global",
                "to": "payload.insertId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "insertId",
                "pt": "msg",
                "to": "payload.insertId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 180,
        "wires": [
            [
                "6fea27a9.3f6148"
            ]
        ]
    },
    {
        "id": "6630a2a5.4f852c",
        "type": "template",
        "z": "8b66c456.b56a28",
        "name": "Get dateTime as TableName",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n datetime\nFROM recordings\nWHERE idrecordings = {{insertId}};",
        "output": "str",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "3df4c0f2.36b5d"
            ]
        ]
    },
    {
        "id": "3df4c0f2.36b5d",
        "type": "mysql",
        "z": "8b66c456.b56a28",
        "mydb": "1d1505a8.e805ba",
        "name": "MYSQL (Pharma DB)",
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "4a98e82e.a57958",
                "bc86fe71.d4774"
            ]
        ]
    },
    {
        "id": "4a98e82e.a57958",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "Store datetime of New Recording Row",
        "rules": [
            {
                "t": "set",
                "p": "fumehood1.recordingRowDateTime",
                "pt": "global",
                "to": "payload[0]date.time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].datetime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 260,
        "wires": [
            [
                "bc86fe71.d4774",
                "bb8ed46b.102958"
            ]
        ]
    },
    {
        "id": "6fea27a9.3f6148",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "recordingId",
                "pt": "msg",
                "to": "payload.insertId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "6630a2a5.4f852c"
            ]
        ]
    },
    {
        "id": "b92a0b47.228c68",
        "type": "comment",
        "z": "8b66c456.b56a28",
        "name": "Store New Recordings Row's timestamp",
        "info": "",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "5954291.5b915d8",
        "type": "ui_text",
        "z": "8b66c456.b56a28",
        "group": "89d9c446.b796e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Table Name",
        "label": "RecordID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1950,
        "y": 260,
        "wires": []
    },
    {
        "id": "13ee0807.3d1628",
        "type": "switch",
        "z": "8b66c456.b56a28",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "f21cd184.ada92"
            ]
        ]
    },
    {
        "id": "d896b369.a56e8",
        "type": "ui_led",
        "z": "8b66c456.b56a28",
        "order": 2,
        "group": "89d9c446.b796e8",
        "width": 0,
        "height": 0,
        "label": "RECORDING",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "orange",
                "value": "disconnected",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "RECORDING",
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "be93f827.15f868",
        "type": "inject",
        "z": "8b66c456.b56a28",
        "name": "Check if recording was activated",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "fumehood1.setRecording",
        "payloadType": "global",
        "x": 260,
        "y": 440,
        "wires": [
            [
                "d896b369.a56e8",
                "dc7d5b7f.6d94b8"
            ]
        ]
    },
    {
        "id": "5a04bae.06ab744",
        "type": "switch",
        "z": "8b66c456.b56a28",
        "name": "Check if data needs to be recorded",
        "property": "fumehood1.setRecording",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 560,
        "wires": [
            [
                "118e16f9.ba8cc9",
                "d9ac172d.5213e8"
            ],
            []
        ]
    },
    {
        "id": "d9ac172d.5213e8",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "recording_id",
                "pt": "msg",
                "to": "fumehood1.recordingRowID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pressSystem",
                "pt": "msg",
                "to": "flowsynmaxi1.pressureSystem",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pressFlowSynA",
                "pt": "msg",
                "to": "flowsynmaxi1.pressureFlowSynA",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pressFlowSynB",
                "pt": "msg",
                "to": "flowsynmaxi1.pressureFlowSynB",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pressFlowBinC",
                "pt": "msg",
                "to": "flowsynmaxi1.pressureBinaryC",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "pressFlowBinD",
                "pt": "msg",
                "to": "flowsynmaxi1.pressureBinaryD",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "tempReactor1",
                "pt": "msg",
                "to": "flowsynmaxi1.temperatureReactor1",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "tempReactor2",
                "pt": "msg",
                "to": "flowsynmaxi1.temperatureReactor2",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "tempReactor3",
                "pt": "msg",
                "to": "flowsynmaxi1.temperatureReactor3",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "tempReactor4",
                "pt": "msg",
                "to": "flowsynmaxi1.temperatureReactor4",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveOpenA",
                "pt": "msg",
                "to": "flowsynmaxi1.valveOpenA",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveOpenB",
                "pt": "msg",
                "to": "flowsynmaxi1.valveOpenB",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveOpenC",
                "pt": "msg",
                "to": "flowsynmaxi1.valveOpenC",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveOpenD",
                "pt": "msg",
                "to": "flowsynmaxi1.valveOpenD",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveOpenCW",
                "pt": "msg",
                "to": "flowsynmaxi1.valveOpenCW",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveInjOpenA",
                "pt": "msg",
                "to": "flowsynmaxi1.valveInjOpenA",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveInjOpenB",
                "pt": "msg",
                "to": "flowsynmaxi1.valveInjOpenB",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveInjOpenC",
                "pt": "msg",
                "to": "flowsynmaxi1.valveInjOpenC",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "valveInjOpenD",
                "pt": "msg",
                "to": "flowsynmaxi1.valveInjOpenD",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "flowRatePumpA",
                "pt": "msg",
                "to": "flowsynmaxi1.flowRatePumpA",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "flowRatePumpB",
                "pt": "msg",
                "to": "flowsynmaxi1.flowRatePumpB",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "flowRatePumpC",
                "pt": "msg",
                "to": "flowsynmaxi1.flowRatePumpC",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "flowRatePumpD",
                "pt": "msg",
                "to": "flowsynmaxi1.flowRatePumpD",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "chillerDetected",
                "pt": "msg",
                "to": "flowsynmaxi1.chillerDetected",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 560,
        "wires": [
            [
                "89dd6279.edefc",
                "8e440633.11a4f8"
            ]
        ]
    },
    {
        "id": "89dd6279.edefc",
        "type": "template",
        "z": "8b66c456.b56a28",
        "name": "Add reactor 1 data to table",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT \n    INTO `data_reactor1` \n    \n    (`recording_id`, `time`, \n     `press_system`, `press_flowsyna`, `press_flowsynb`, `press_binaryc`, `press_binaryd`,\n     `temp_reactor1`, `temp_reactor2`, `temp_reactor3`, `temp_reactor4`,\n     `valve_synvalvea`, `valve_synvalveb`, `valve_binaryvalvec`, `valve_binaryvalved`, `valve_cw`,\n     `valve_syninjvalvea`, `valve_syninjvalveb`, `valve_binaryinjvalvec`, `valve_binaryinjvalved`,\n     `flow_pumpa`, `flow_pumpb`, `flow_pumpc`, `flow_pumpd`,\n     `chiller_detected`) \n    \n    VALUES ({{recording_id}}, {{time}},\n            {{pressSystem}}, {{pressFlowSynA}}, {{pressFlowSynB}}, {{pressFlowBinC}}, {{pressFlowBinD}},\n            {{tempReactor1}}, {{tempReactor2}}, {{tempReactor3}}, {{tempReactor4}},\n            {{valveOpenA}}, {{valveOpenB}}, {{valveOpenC}}, {{valveOpenD}}, {{valveOpenCW}},\n            {{valveInjOpenA}}, {{valveInjOpenB}}, {{valveInjOpenC}}, {{valveInjOpenD}},\n            {{flowRatePumpA}}, {{flowRatePumpB}}, {{flowRatePumpC}}, {{flowRatePumpD}},\n            {{chillerDetected}})",
        "output": "str",
        "x": 1180,
        "y": 560,
        "wires": [
            [
                "4ba25bde.712684",
                "8e440633.11a4f8"
            ]
        ]
    },
    {
        "id": "4ba25bde.712684",
        "type": "mysql",
        "z": "8b66c456.b56a28",
        "mydb": "1d1505a8.e805ba",
        "name": "MYSQL",
        "x": 1400,
        "y": 560,
        "wires": [
            [
                "8e440633.11a4f8",
                "bc86fe71.d4774"
            ]
        ]
    },
    {
        "id": "793822ca.07e14c",
        "type": "inject",
        "z": "8b66c456.b56a28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "5a04bae.06ab744"
            ]
        ]
    },
    {
        "id": "2336112a.5e343e",
        "type": "inject",
        "z": "8b66c456.b56a28",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "f4cea6d8.befcb8"
            ]
        ]
    },
    {
        "id": "7ccec595.f2569c",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1390,
        "y": 360,
        "wires": []
    },
    {
        "id": "ac131db4.7288a",
        "type": "catch",
        "z": "8b66c456.b56a28",
        "name": "",
        "scope": [
            "c08f9350.fdff2",
            "3df4c0f2.36b5d",
            "4ba25bde.712684"
        ],
        "uncaught": false,
        "x": 250,
        "y": 720,
        "wires": [
            [
                "13783f8a.77253"
            ]
        ]
    },
    {
        "id": "13783f8a.77253",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 720,
        "wires": []
    },
    {
        "id": "118e16f9.ba8cc9",
        "type": "switch",
        "z": "8b66c456.b56a28",
        "d": true,
        "name": "Check if Reactor is connected",
        "property": "connected",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "d9ac172d.5213e8",
                "8e440633.11a4f8"
            ],
            [
                "d5cbbcde.e0937"
            ]
        ]
    },
    {
        "id": "d5cbbcde.e0937",
        "type": "change",
        "z": "8b66c456.b56a28",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "disconnected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 480,
        "wires": [
            [
                "d896b369.a56e8"
            ]
        ]
    },
    {
        "id": "dc7d5b7f.6d94b8",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "bc86fe71.d4774",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 360,
        "wires": []
    },
    {
        "id": "bb8ed46b.102958",
        "type": "change",
        "z": "8b66c456.b56a28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "fumehood1.recordingRowID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 260,
        "wires": [
            [
                "5954291.5b915d8"
            ]
        ]
    },
    {
        "id": "ab121285.fa998",
        "type": "catch",
        "z": "8b66c456.b56a28",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 80,
        "wires": [
            [
                "d7fc88f0.3ab168"
            ]
        ]
    },
    {
        "id": "d7fc88f0.3ab168",
        "type": "debug",
        "z": "8b66c456.b56a28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "90053bda.473a98",
        "type": "comment",
        "z": "8b66c456.b56a28",
        "name": "Error Handling",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "a1aa3133.55441",
        "type": "usbcamera",
        "z": "5a12afd1.57876",
        "filemode": "0",
        "filename": "image01.jpg",
        "filedefpath": "1",
        "filepath": "/home/pi/Desktop/usb-webcam",
        "fileformat": "jpeg",
        "resolution": "3",
        "name": "",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "69401524.3d963c",
                "803aec50.7fc51"
            ]
        ]
    },
    {
        "id": "332fbec4.d28242",
        "type": "inject",
        "z": "5a12afd1.57876",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "69401524.3d963c",
        "type": "debug",
        "z": "5a12afd1.57876",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "b4187f4d.4be78",
        "type": "ui_template",
        "z": "5a12afd1.57876",
        "group": "a0064b8b.befcb8",
        "name": "Display Image",
        "order": 0,
        "width": "6",
        "height": "5",
        "format": "<img width=\"48\" height=\"48\" alt=\"image\" src=\"data:image/jpg;base64,{{msg.payload}}\"/>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "803aec50.7fc51",
        "type": "base64",
        "z": "5a12afd1.57876",
        "name": "Encode",
        "action": "",
        "property": "payload",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "b4187f4d.4be78"
            ]
        ]
    },
    {
        "id": "1cfa44a8.22cb8b",
        "type": "ui_switch",
        "z": "5a12afd1.57876",
        "name": "",
        "label": "On/Off",
        "tooltip": "",
        "group": "a0064b8b.befcb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 70,
        "y": 180,
        "wires": [
            [
                "896d9c3d.00f39"
            ]
        ]
    },
    {
        "id": "b57e4e38.39967",
        "type": "trigger",
        "z": "5a12afd1.57876",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-4",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "a1aa3133.55441"
            ]
        ]
    },
    {
        "id": "896d9c3d.00f39",
        "type": "switch",
        "z": "5a12afd1.57876",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "b57e4e38.39967"
            ],
            [
                "b57e4e38.39967"
            ]
        ]
    },
    {
        "id": "7fa82f7d.4de31",
        "type": "http request",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "dabfaee7.2058e",
                "a60a6078.5025c",
                "51bb6f37.5a34e"
            ]
        ]
    },
    {
        "id": "dabfaee7.2058e",
        "type": "debug",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "ddf2ab7f.aae3d8",
        "type": "debug",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "a60a6078.5025c",
        "type": "ui_template",
        "z": "2b02a849.3b5ab8",
        "group": "867cdf55.8bea9",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 810,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "34971d4b.1e4662",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "get info on all steppers",
        "props": [
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "7fa82f7d.4de31",
                "ddf2ab7f.aae3d8"
            ]
        ]
    },
    {
        "id": "fd952aef.596e78",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "Status",
        "props": [
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/status",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "7fa82f7d.4de31",
                "ddf2ab7f.aae3d8"
            ]
        ]
    },
    {
        "id": "51bb6f37.5a34e",
        "type": "ui_text",
        "z": "2b02a849.3b5ab8",
        "group": "867cdf55.8bea9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "4ffbc5c.026c43c",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "/api/steppers",
        "props": [
            {
                "p": "method",
                "v": "POST",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers/moveby",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":0,\"unit\":\"mm\",\"value\":\"10\"}",
        "payloadType": "json",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "7fa82f7d.4de31",
                "ddf2ab7f.aae3d8"
            ]
        ]
    },
    {
        "id": "bda437ea.8381f8",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "api/switches",
        "props": [
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/switches",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 390,
        "y": 220,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "dc2daaf9.a88748",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "/api/steppers",
        "props": [
            {
                "p": "method",
                "v": "POST",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers/moveby?id=0",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":0,\"unit\":\"mm\",\"value\":\"10\"}",
        "payloadType": "json",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "14dc13da.32283c",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "get info on stepper 1",
        "props": [
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers?id=0",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "b5045931.6d65e8",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "/api/steppers",
        "props": [
            {
                "p": "method",
                "v": "POST",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers/moveby?id=0?unit=mm?value=5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "19abfc43.1bd764",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "/api/steppers",
        "props": [
            {
                "p": "method",
                "v": "POST",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers/moveby?id=0&unit=mm&value=20",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "?id=0?unit=mm?value=5",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "7371f75.387dc08",
        "type": "inject",
        "z": "2b02a849.3b5ab8",
        "name": "-",
        "props": [
            {
                "p": "method",
                "v": "POST",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://192.168.1.103:80/api/steppers/moveby?id=0&unit=mm&value=-20",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "?id=0?unit=mm?value=5",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "7fa82f7d.4de31"
            ]
        ]
    },
    {
        "id": "e8282463.612e98",
        "type": "ui_form",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "label": "",
        "group": "867cdf55.8bea9",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "esp_ip",
                "value": "esp_ip",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "id",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "unit",
                "value": "unit",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "value",
                "value": "value",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "speed",
                "value": "speed",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "esp_ip": "",
            "id": "",
            "unit": "",
            "value": "",
            "speed": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "ef0633ca.cc61a"
            ]
        ]
    },
    {
        "id": "317b4a3d.725136",
        "type": "debug",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "96eaa9cb.800638",
        "type": "comment",
        "z": "2b02a849.3b5ab8",
        "name": "http://192.168.1.103:80/api/steppers/moveby?id=0&unit=mm&value=-20",
        "info": "",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "e98f0d00.4e5ce",
        "type": "ui_button",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "group": "867cdf55.8bea9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Load Preset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"esp_ip\":\"192.168.1.103\", \"id\": \"0\", \"unit\": \"mm\", \"value\": 1, \"speed\": 5}",
        "payloadType": "json",
        "topic": "",
        "x": 250,
        "y": 460,
        "wires": [
            [
                "e8282463.612e98"
            ]
        ]
    },
    {
        "id": "ef0633ca.cc61a",
        "type": "change",
        "z": "2b02a849.3b5ab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "X:80/api/steppers/moveby?id=A&unit=B&value=C&speed=D",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "url",
                "pt": "msg",
                "from": "X",
                "fromt": "str",
                "to": "payload.esp_ip",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "url",
                "pt": "msg",
                "from": "A",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "url",
                "pt": "msg",
                "from": "B",
                "fromt": "str",
                "to": "payload.unit",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "url",
                "pt": "msg",
                "from": "C",
                "fromt": "str",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "url",
                "pt": "msg",
                "from": "D",
                "fromt": "str",
                "to": "payload.speed",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "317b4a3d.725136",
                "7fa82f7d.4de31"
            ]
        ]
    }
]